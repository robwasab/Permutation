<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_SetAssocData manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> AssocData</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_GetAssocData, Tcl_SetAssocData, Tcl_DeleteAssocData - manage
associations of string keys and user specified data with Tcl
interpreters 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
ClientData<br>
<b>Tcl_GetAssocData</b>(<i>interp, key, delProcPtr</i>)<br>
<b>Tcl_SetAssocData</b>(<i>interp, key, delProc,
clientData</i>)<br>
<b>Tcl_DeleteAssocData</b>(<i>interp, key</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter in which to execute the specified command.</dd>

<dt>const char <b>*key</b> (in)</dt>

<dd>Key for association with which to store data or from which to
delete or retrieve data. Typically the module prefix for a
package.</dd>

<dt>Tcl_InterpDeleteProc <b>*delProc</b> (in)</dt>

<dd>Procedure to call when <i>interp</i> is deleted.</dd>

<dt>Tcl_InterpDeleteProc <b>**delProcPtr</b> (in)</dt>

<dd>Pointer to location in which to store address of current
deletion procedure for association. Ignored if NULL.</dd>

<dt>ClientData <b>clientData</b> (in)</dt>

<dd>Arbitrary one-word value associated with the given key in this
interpreter. This data is owned by the caller.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These procedures allow extensions to associate their own data with
a Tcl interpreter. An association consists of a string key,
typically the name of the extension, and a one-word value, which is
typically a pointer to a data structure holding data specific to
the extension. Tcl makes no interpretation of either the key or the
value for an association. 

<p>Storage management is facilitated by storing with each
association a procedure to call when the interpreter is deleted.
This procedure can dispose of the storage occupied by the client's
data in any way it sees fit.</p>

<p><b>Tcl_SetAssocData</b> creates an association between a string
key and a user specified datum in the given interpreter. If there
is already an association with the given <i>key</i>,
<b>Tcl_SetAssocData</b> overwrites it with the new information. It
is up to callers to organize their use of names to avoid conflicts,
for example, by using package names as the keys. If the
<i>deleteProc</i> argument is non-NULL it specifies the address of
a procedure to invoke if the interpreter is deleted before the
association is deleted. <i>DeleteProc</i> should have arguments and
result that match the type <b>Tcl_InterpDeleteProc</b>:</p>

<pre>
typedef void Tcl_InterpDeleteProc(
        ClientData <i>clientData</i>,
        <a href=
"../TclLib/Interp.htm">Tcl_Interp</a> *<i>interp</i>);
</pre>

When <i>deleteProc</i> is invoked the <i>clientData</i> and
<i>interp</i> arguments will be the same as the corresponding
arguments passed to <b>Tcl_SetAssocData</b>. The deletion procedure
will <i>not</i> be invoked if the association is deleted before the
interpreter is deleted. 

<p><b>Tcl_GetAssocData</b> returns the datum stored in the
association with the specified key in the given interpreter, and if
the <i>delProcPtr</i> field is non-<b>NULL</b>, the address
indicated by it gets the address of the delete procedure stored
with this association. If no association with the specified key
exists in the given interpreter <b>Tcl_GetAssocData</b> returns
<b>NULL</b>.</p>

<p><b>Tcl_DeleteAssocData</b> deletes an association with a
specified key in the given interpreter. Then it calls the deletion
procedure.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/A.htm#association">association</a>, <a href=
"../Keywords/D.htm#data">data</a>, <a href=
"../Keywords/D.htm#deletion procedure">deletion procedure</a>, <a
href="../Keywords/I.htm#interpreter">interpreter</a>, <a href=
"../Keywords/K.htm#key">key</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1995-1996 Sun Microsystems, Inc.</div>
</body>
</html>

