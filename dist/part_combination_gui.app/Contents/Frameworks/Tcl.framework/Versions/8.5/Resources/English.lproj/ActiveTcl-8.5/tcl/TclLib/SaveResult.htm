<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_SaveResult manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> SaveResult</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_SaveInterpState, Tcl_RestoreInterpState,
Tcl_DiscardInterpState, Tcl_SaveResult, Tcl_RestoreResult,
Tcl_DiscardResult - save and restore an interpreter's state 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
Tcl_InterpState<br>
<b>Tcl_SaveInterpState</b>(<i>interp, status</i>)<br>
int<br>
<b>Tcl_RestoreInterpState</b>(<i>interp, state</i>)<br>
<b>Tcl_DiscardInterpState</b>(<i>state</i>)<br>
<b>Tcl_SaveResult</b>(<i>interp, savedPtr</i>)<br>
<b>Tcl_RestoreResult</b>(<i>interp, savedPtr</i>)<br>
<b>Tcl_DiscardResult</b>(<i>savedPtr</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter for which state should be saved.</dd>

<dt>int <b>status</b> (in)</dt>

<dd>Return code value to save as part of interpreter state.</dd>

<dt>Tcl_InterpState <b>state</b> (in)</dt>

<dd>Saved state token to be restored or discarded.</dd>

<dt>Tcl_SavedResult <b>*savedPtr</b> (in)</dt>

<dd>Pointer to location where interpreter result should be saved or
restored.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These routines allows a C procedure to take a snapshot of the
current state of an interpreter so that it can be restored after a
call to <b><a href="../TclLib/Eval.htm">Tcl_Eval</a></b> or some
other routine that modifies the interpreter state. There are two
triplets of routines meant to work together. 

<p>The first triplet stores the snapshot of interpreter state in an
opaque token returned by <b>Tcl_SaveInterpState</b>. That token
value may then be passed back to one of
<b>Tcl_RestoreInterpState</b> or <b>Tcl_DiscardInterpState</b>,
depending on whether the interp state is to be restored. So long as
one of the latter two routines is called, Tcl will take care of
memory management.</p>

<p>The second triplet stores the snapshot of only the interpreter
result (not its complete state) in memory allocated by the caller.
These routines are passed a pointer to a <b>Tcl_SavedResult</b>
structure that is used to store enough information to restore the
interpreter result. This structure can be allocated on the stack of
the calling procedure. These routines do not save the state of any
error information in the interpreter (e.g. the <b>-errorcode</b> or
<b>-errorinfo</b> return options, when an error is in
progress).</p>

<p>Because the routines <b>Tcl_SaveInterpState</b>,
<b>Tcl_RestoreInterpState</b>, and <b>Tcl_DiscardInterpState</b>
perform a superset of the functions provided by the other routines,
any new code should only make use of the more powerful routines.
The older, weaker routines <b>Tcl_SaveResult</b>,
<b>Tcl_RestoreResult</b>, and <b>Tcl_DiscardResult</b> continue to
exist only for the sake of existing programs that may already be
using them.</p>

<p><b>Tcl_SaveInterpState</b> takes a snapshot of those portions of
interpreter state that make up the full result of script
evaluation. This include the interpreter result, the return code
(passed in as the <i>status</i> argument, and any return options,
including <b>-errorinfo</b> and <b>-errorcode</b> when an error is
in progress. This snapshot is returned as an opaque token of type
<b>Tcl_InterpState</b>. The call to <b>Tcl_SaveInterpState</b> does
not itself change the state of the interpreter. Unlike
<b>Tcl_SaveResult</b>, it does not reset the interpreter.</p>

<p><b>Tcl_RestoreInterpState</b> accepts a <b>Tcl_InterpState</b>
token previously returned by <b>Tcl_SaveInterpState</b> and
restores the state of the interp to the state held in that
snapshot. The return value of <b>Tcl_RestoreInterpState</b> is the
status value originally passed to <b>Tcl_SaveInterpState</b> when
the snapshot token was created.</p>

<p><b>Tcl_DiscardInterpState</b> is called to release a
<b>Tcl_InterpState</b> token previously returned by
<b>Tcl_SaveInterpState</b> when that snapshot is not to be restored
to an interp.</p>

<p>The <b>Tcl_InterpState</b> token returned by
<b>Tcl_SaveInterpState</b> must eventually be passed to either
<b>Tcl_RestoreInterpState</b> or <b>Tcl_DiscardInterpState</b> to
avoid a memory leak. Once the <b>Tcl_InterpState</b> token is
passed to one of them, the token is no longer valid and should not
be used anymore.</p>

<p><b>Tcl_SaveResult</b> moves the string and object results of
<i>interp</i> into the location specified by <i>statePtr</i>.
<b>Tcl_SaveResult</b> clears the result for <i>interp</i> and
leaves the result in its normal empty initialized state.</p>

<p><b>Tcl_RestoreResult</b> moves the string and object results
from <i>statePtr</i> back into <i>interp</i>. Any result or error
that was already in the interpreter will be cleared. The
<i>statePtr</i> is left in an uninitialized state and cannot be
used until another call to <b>Tcl_SaveResult</b>.</p>

<p><b>Tcl_DiscardResult</b> releases the saved interpreter state
stored at <b>statePtr</b>. The state structure is left in an
uninitialized state and cannot be used until another call to
<b>Tcl_SaveResult</b>.</p>

<p>Once <b>Tcl_SaveResult</b> is called to save the interpreter
result, either <b>Tcl_RestoreResult</b> or <b>Tcl_DiscardResult</b>
must be called to properly clean up the memory associated with the
saved state.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/R.htm#result">result</a>, <a href=
"../Keywords/S.htm#state">state</a>, <a href=
"../Keywords/I.htm#interp">interp</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1997 by Sun Microsystems, Inc.</div>
</body>
</html>

