<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - fconfigure manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> fconfigure</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="fconfigure.htm#M2" name="L415">NAME</a> 

<dl>
<dd>fconfigure - Set and get options on a channel</dd>
</dl>
</dd>

<dd><a href="fconfigure.htm#M3" name="L416">SYNOPSIS</a> 

<dl>
<dd><b>fconfigure</b> <i>channelId</i></dd>

<dd><b>fconfigure</b> <i>channelId</i> <i>name</i></dd>

<dd><b>fconfigure</b> <i>channelId</i> <i>name value</i> ?<i>name
value ...</i>?</dd>
</dl>
</dd>

<dd><a href="fconfigure.htm#M4" name="L417">DESCRIPTION</a> 

<dl class="description">
<dd><a href="fconfigure.htm#M5" name="L418"><b>-blocking</b>
<i>boolean</i></a></dd>

<dd><a href="fconfigure.htm#M6" name="L419"><b>-buffering</b>
<i>newValue</i></a></dd>

<dd><a href="fconfigure.htm#M7" name="L420"><b>-buffersize</b>
<i>newSize</i></a></dd>

<dd><a href="fconfigure.htm#M8" name="L421"><b>-encoding</b>
<i>name</i></a></dd>

<dd><a href="fconfigure.htm#M9" name="L422"><b>-eofchar</b>
<i>char</i></a></dd>

<dd><a href="fconfigure.htm#M10" name="L423"><b>-eofchar</b>
<b>{</b><i>inChar outChar</i><b>}</b></a></dd>

<dd><a href="fconfigure.htm#M11" name="L424"><b>-translation</b>
<i>mode</i></a></dd>

<dd><a href="fconfigure.htm#M12" name="L425"><b>-translation</b>
<b>{</b><i>inMode outMode</i><b>}</b></a> 

<dl class="description">
<dd><a href="fconfigure.htm#M13" name="L426"><b>auto</b></a></dd>

<dd><a href="fconfigure.htm#M14" name="L427"><b>binary</b></a></dd>

<dd><a href="fconfigure.htm#M15" name="L428"><b>cr</b></a></dd>

<dd><a href="fconfigure.htm#M16" name="L429"><b>crlf</b></a></dd>

<dd><a href="fconfigure.htm#M17" name="L430"><b>lf</b></a></dd>
</dl>
</dd>
</dl>
</dd>

<dd><a href="fconfigure.htm#M18" name="L431">STANDARD
CHANNELS</a></dd>

<dd><a href="fconfigure.htm#M19" name="L432">EXAMPLES</a></dd>

<dd><a href="fconfigure.htm#M20" name="L433">SEE ALSO</a></dd>

<dd><a href="fconfigure.htm#M21" name="L434">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

fconfigure - Set and get options on a channel 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>fconfigure</b> <i>channelId</i><br>
<b>fconfigure</b> <i>channelId</i> <i>name</i><br>
<b>fconfigure</b> <i>channelId</i> <i>name value</i> ?<i>name value
...</i>?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

The <b>fconfigure</b> command sets and retrieves options for
channels. 

<p><i>ChannelId</i> identifies the channel for which to set or
query an option and must refer to an open channel such as a Tcl
standard channel (<b>stdin</b>, <b>stdout</b>, or <b>stderr</b>),
the return value from an invocation of <b><a href=
"../TclCmd/open.htm">open</a></b> or <b><a href=
"../TclCmd/socket.htm">socket</a></b>, or the result of a channel
creation command provided by a Tcl extension.</p>

<p>If no <i>name</i> or <i>value</i> arguments are supplied, the
command returns a list containing alternating option names and
values for the channel. If <i>name</i> is supplied but no
<i>value</i> then the command returns the current value of the
given option. If one or more pairs of <i>name</i> and <i>value</i>
are supplied, the command sets each of the named options to the
corresponding <i>value</i>; in this case the return value is an
empty string.</p>

<p>The options described below are supported for all channels. In
addition, each channel type may add options that only it supports.
See the manual entry for the command that creates each type of
channels for the options that that specific type of channel
supports. For example, see the manual entry for the <b><a href=
"../TclCmd/socket.htm">socket</a></b> command for its additional
options.</p>

<dl class="description">
<dt><a name="M5"><b>-blocking</b> <i>boolean</i></a></dt>

<dd>The <b>-blocking</b> option determines whether I/O operations
on the channel can cause the process to block indefinitely. The
value of the option must be a proper boolean value. Channels are
normally in blocking mode; if a channel is placed into nonblocking
mode it will affect the operation of the <b><a href=
"../TclCmd/gets.htm">gets</a></b>, <b><a href=
"../TclCmd/read.htm">read</a></b>, <b><a href=
"../TclCmd/puts.htm">puts</a></b>, <b><a href=
"../TclCmd/flush.htm">flush</a></b>, and <b><a href=
"../TclCmd/close.htm">close</a></b> commands by allowing them to
operate asynchronously; see the documentation for those commands
for details. For nonblocking mode to work correctly, the
application must be using the Tcl event loop (e.g. by calling <b><a
href="../TclLib/DoOneEvent.htm">Tcl_DoOneEvent</a></b> or invoking
the <b><a href="../TclCmd/vwait.htm">vwait</a></b> command).</dd>

<dt><a name="M6"><b>-buffering</b> <i>newValue</i></a></dt>

<dd>If <i>newValue</i> is <b>full</b> then the I/O system will
buffer output until its internal buffer is full or until the <b><a
href="../TclCmd/flush.htm">flush</a></b> command is invoked. If
<i>newValue</i> is <b>line</b>, then the I/O system will
automatically flush output for the channel whenever a newline
character is output. If <i>newValue</i> is <b>none</b>, the I/O
system will flush automatically after every output operation. The
default is for <b>-buffering</b> to be set to <b>full</b> except
for channels that connect to terminal-like devices; for these
channels the initial setting is <b>line</b>. Additionally,
<b>stdin</b> and <b>stdout</b> are initially set to <b>line</b>,
and <b>stderr</b> is set to <b>none</b>.</dd>

<dt><a name="M7"><b>-buffersize</b> <i>newSize</i></a></dt>

<dd><i>Newvalue</i> must be an integer; its value is used to set
the size of buffers, in bytes, subsequently allocated for this
channel to store input or output. <i>Newvalue</i> must be between
ten and one million, allowing buffers of ten to one million bytes
in size.</dd>

<dt><a name="M8"><b>-encoding</b> <i>name</i></a></dt>

<dd>This option is used to specify the encoding of the channel, so
that the data can be converted to and from Unicode for use in Tcl.
For instance, in order for Tcl to read characters from a Japanese
file in <b>shiftjis</b> and properly process and display the
contents, the encoding would be set to <b>shiftjis</b>. Thereafter,
when reading from the channel, the bytes in the Japanese file would
be converted to Unicode as they are read. Writing is also supported
- as Tcl strings are written to the channel they will automatically
be converted to the specified encoding on output. 

<p>If a file contains pure binary data (for instance, a JPEG
image), the encoding for the channel should be configured to be
<b><a href="../TclCmd/binary.htm">binary</a></b>. Tcl will then
assign no interpretation to the data in the file and simply read or
write raw bytes. The Tcl <b><a href=
"../TclCmd/binary.htm">binary</a></b> command can be used to
manipulate this byte-oriented data. It is usually better to set the
<b>-translation</b> option to <b><a href=
"../TclCmd/binary.htm">binary</a></b> when you want to transfer
binary data, as this turns off the other automatic interpretations
of the bytes in the stream as well.</p>

<p>The default encoding for newly opened channels is the same
platform- and locale-dependent system encoding used for interfacing
with the operating system, as returned by <b>encoding
system</b>.</p>
</dd>

<dt><a name="M9"><b>-eofchar</b> <i>char</i></a></dt>

<dt><a name="M10"><b>-eofchar</b> <b>{</b><i>inChar
outChar</i><b>}</b></a></dt>

<dd>This option supports DOS file systems that use Control-z (\x1a)
as an end of file marker. If <i>char</i> is not an empty string,
then this character signals end-of-file when it is encountered
during input. For output, the end-of-file character is output when
the channel is closed. If <i>char</i> is the empty string, then
there is no special end of file character marker. For read-write
channels, a two-element list specifies the end of file marker for
input and output, respectively. As a convenience, when setting the
end-of-file character for a read-write channel you can specify a
single value that will apply to both reading and writing. When
querying the end-of-file character of a read-write channel, a
two-element list will always be returned. The default value for
<b>-eofchar</b> is the empty string in all cases except for files
under Windows. In that case the <b>-eofchar</b> is Control-z (\x1a)
for reading and the empty string for writing. The acceptable range
for <b>-eofchar</b> values is \x01 - \x7f; attempting to set
<b>-eofchar</b> to a value outside of this range will generate an
error.</dd>

<dt><a name="M11"><b>-translation</b> <i>mode</i></a></dt>

<dt><a name="M12"><b>-translation</b> <b>{</b><i>inMode
outMode</i><b>}</b></a></dt>

<dd>In Tcl scripts the end of a line is always represented using a
single newline character (\n). However, in actual files and devices
the end of a line may be represented differently on different
platforms, or even for different devices on the same platform. For
example, under UNIX newlines are used in files, whereas
carriage-return-linefeed sequences are normally used in network
connections. On input (i.e., with <b><a href=
"../TclCmd/gets.htm">gets</a></b> and <b><a href=
"../TclCmd/read.htm">read</a></b>) the Tcl I/O system automatically
translates the external end-of-line representation into newline
characters. Upon output (i.e., with <b><a href=
"../TclCmd/puts.htm">puts</a></b>), the I/O system translates
newlines to the external end-of-line representation. The default
translation mode, <b>auto</b>, handles all the common cases
automatically, but the <b>-translation</b> option provides explicit
control over the end of line translations. 

<p>The value associated with <b>-translation</b> is a single item
for read-only and write-only channels. The value is a two-element
list for read-write channels; the read translation mode is the
first element of the list, and the write translation mode is the
second element. As a convenience, when setting the translation mode
for a read-write channel you can specify a single value that will
apply to both reading and writing. When querying the translation
mode of a read-write channel, a two-element list will always be
returned. The following values are currently supported:</p>

<dl class="description">
<dt><a name="M13"><b>auto</b></a></dt>

<dd>As the input translation mode, <b>auto</b> treats any of
newline (<b>lf</b>), carriage return (<b>cr</b>), or carriage
return followed by a newline (<b>crlf</b>) as the end of line
representation. The end of line representation can even change from
line-to-line, and all cases are translated to a newline. As the
output translation mode, <b>auto</b> chooses a platform specific
representation; for sockets on all platforms Tcl chooses
<b>crlf</b>, for all Unix flavors, it chooses <b>lf</b>, and for
the various flavors of Windows it chooses <b>crlf</b>. The default
setting for <b>-translation</b> is <b>auto</b> for both input and
output.</dd>

<dt><a name="M14"><b>binary</b></a></dt>

<dd>No end-of-line translations are performed. This is nearly
identical to <b>lf</b> mode, except that in addition <b><a href=
"../TclCmd/binary.htm">binary</a></b> mode also sets the
end-of-file character to the empty string (which disables it) and
sets the encoding to <b><a href=
"../TclCmd/binary.htm">binary</a></b> (which disables encoding
filtering). See the description of <b>-eofchar</b> and
<b>-encoding</b> for more information. 

<p>Internally, i.e. when it comes to the actual behaviour of the
translator this value <b>is</b> identical to <b>lf</b> and is
therefore reported as such when queried. Even if <b><a href=
"../TclCmd/binary.htm">binary</a></b> was used to set the
translation.</p>
</dd>

<dt><a name="M15"><b>cr</b></a></dt>

<dd>The end of a line in the underlying file or device is
represented by a single carriage return character. As the input
translation mode, <b>cr</b> mode converts carriage returns to
newline characters. As the output translation mode, <b>cr</b> mode
translates newline characters to carriage returns.</dd>

<dt><a name="M16"><b>crlf</b></a></dt>

<dd>The end of a line in the underlying file or device is
represented by a carriage return character followed by a linefeed
character. As the input translation mode, <b>crlf</b> mode converts
carriage-return-linefeed sequences to newline characters. As the
output translation mode, <b>crlf</b> mode translates newline
characters to carriage-return-linefeed sequences. This mode is
typically used on Windows platforms and for network
connections.</dd>

<dt><a name="M17"><b>lf</b></a></dt>

<dd>The end of a line in the underlying file or device is
represented by a single newline (linefeed) character. In this mode
no translations occur during either input or output. This mode is
typically used on UNIX platforms.</dd>
</dl>
</dd>
</dl>

<h3><a name="M18">STANDARD CHANNELS</a></h3>

The Tcl standard channels (<b>stdin</b>, <b>stdout</b>, and
<b>stderr</b>) can be configured through this command like every
other channel opened by the Tcl library. Beyond the standard
options described above they will also support any special option
according to their current type. If, for example, a Tcl application
is started by the <b>inet</b> super-server common on Unix system
its Tcl standard channels will be sockets and thus support the
socket options. 

<h3><a name="M19">EXAMPLES</a></h3>

Instruct Tcl to always send output to <b>stdout</b> immediately,
whether or not it is to a terminal: 

<pre>
<b>fconfigure</b> stdout -buffering none
</pre>

<p>Open a socket and read lines from it without ever blocking the
processing of other events:</p>

<pre>
set s [socket some.where.com 12345]
<b>fconfigure</b> $s -blocking 0
fileevent $s readable "readMe $s"
proc readMe chan {
   if {[gets $chan line] &lt; 0} {
      if {[eof $chan]} {
         close $chan
         return
      }
      # Could not read a complete line this time; Tcl's
      # internal buffering will hold the partial line for us
      # until some more data is available over the socket.
   } else {
      puts stdout $line
   }
}
</pre>

<p>Read a PPM-format image from a file:</p>

<pre>
# Open the file and put it into Unix ASCII mode
set f [open teapot.ppm]
<b>fconfigure</b> $f -encoding ascii -translation lf

# Get the header
if {[gets $f] ne "P6"} {
   error "not a raw-bits PPM"
}

# Read lines until we have got non-comment lines
# that supply us with three decimal values.
set words {}
while {[llength $words] &lt; 3} {
   gets $f line
   if {[string match "#*" $line]} continue
   lappend words {*}[join [scan $line %d%d%d]]
}

# Those words supply the size of the image and its
# overall depth per channel. Assign to variables.
lassign $words xSize ySize depth

# Now switch to binary mode to pull in the data,
# one byte per channel (red,green,blue) per pixel.
<b>fconfigure</b> $f -translation binary
set numDataBytes [expr {3 * $xSize * $ySize}]
set data [read $f $numDataBytes]

close $f
</pre>

<h3><a name="M20">SEE ALSO</a></h3>

<b><a href="../TclCmd/close.htm">close</a></b>, <b><a href=
"../TclCmd/flush.htm">flush</a></b>, <b><a href=
"../TclCmd/gets.htm">gets</a></b>, <b><a href=
"../TclCmd/open.htm">open</a></b>, <b><a href=
"../TclCmd/puts.htm">puts</a></b>, <b><a href=
"../TclCmd/read.htm">read</a></b>, <b><a href=
"../TclCmd/socket.htm">socket</a></b>, <b><a href=
"../TclLib/StdChannels.htm">Tcl_StandardChannels</a></b> 

<h3><a name="M21">KEYWORDS</a></h3>

<a href="../Keywords/B.htm#blocking">blocking</a>, <a href=
"../Keywords/B.htm#buffering">buffering</a>, <a href=
"../Keywords/C.htm#carriage return">carriage return</a>, <a href=
"../Keywords/E.htm#end of line">end of line</a>, <a href=
"../Keywords/F.htm#flushing">flushing</a>, <a href=
"../Keywords/L.htm#linemode">linemode</a>, <a href=
"../Keywords/N.htm#newline">newline</a>, <a href=
"../Keywords/N.htm#nonblocking">nonblocking</a>, <a href=
"../Keywords/P.htm#platform">platform</a>, <a href=
"../Keywords/T.htm#translation">translation</a>, <a href=
"../Keywords/E.htm#encoding">encoding</a>, <a href=
"../Keywords/F.htm#filter">filter</a>, <a href=
"../Keywords/B.htm#byte array">byte array</a>, <a href=
"../Keywords/B.htm#binary">binary</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1995-1996 Sun Microsystems, Inc.</div>
</body>
</html>

