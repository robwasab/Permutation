<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Mathematical Operator Commands - mathop manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> mathop</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="mathop.htm#M2" name="L969">NAME</a> 

<dl>
<dd>mathop - Mathematical operators as Tcl commands</dd>
</dl>
</dd>

<dd><a href="mathop.htm#M3" name="L970">SYNOPSIS</a> 

<dl>
<dd>package require <b>Tcl 8.5</b></dd>

<dd><b>::tcl::mathop::!</b> <i>number</i></dd>

<dd><b>::tcl::mathop::~</b> <i>number</i></dd>

<dd><b>::tcl::mathop::+</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::-</b> <i>number</i> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::*</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::/</b> <i>number</i> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::%</b> <i>number number</i></dd>

<dd><b>::tcl::mathop::**</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::&amp;</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::|</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::^</b> ?<i>number</i> ...?</dd>

<dd><b>::tcl::mathop::&lt;&lt;</b> <i>number number</i></dd>

<dd><b>::tcl::mathop::&gt;&gt;</b> <i>number number</i></dd>

<dd><b>::tcl::mathop::==</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::!=</b> <i>arg arg</i></dd>

<dd><b>::tcl::mathop::&lt;</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::&lt;=</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::&gt;=</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::&gt;</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::eq</b> ?<i>arg</i> ...?</dd>

<dd><b>::tcl::mathop::ne</b> <i>arg arg</i></dd>

<dd><b>::tcl::mathop::in</b> <i>arg list</i></dd>

<dd><b>::tcl::mathop::ni</b> <i>arg list</i></dd>
</dl>
</dd>

<dd><a href="mathop.htm#M4" name="L971">DESCRIPTION</a></dd>

<dd><a href="mathop.htm#M5" name="L972">MATHEMATICAL OPERATORS</a> 

<dl class="mathematical operators">
<dd><a href="mathop.htm#M6" name="L973"><b>!</b>
<i>boolean</i></a></dd>

<dd><a href="mathop.htm#M7" name="L974"><b>+</b> ?<i>number</i>
...?</a></dd>

<dd><a href="mathop.htm#M8" name="L975"><b>-</b> <i>number</i>
?<i>number</i> ...?</a></dd>

<dd><a href="mathop.htm#M9" name="L976"><b>*</b> ?<i>number</i>
...?</a></dd>

<dd><a href="mathop.htm#M10" name="L977"><b>/</b> <i>number</i>
?<i>number</i> ...?</a></dd>

<dd><a href="mathop.htm#M11" name="L978"><b>%</b> <i>number
number</i></a></dd>

<dd><a href="mathop.htm#M12" name="L979"><b>**</b> ?<i>number</i>
...?</a></dd>
</dl>
</dd>

<dd><a href="mathop.htm#M13" name="L980">COMPARISON OPERATORS</a> 

<dl class="comparison operators">
<dd><a href="mathop.htm#M14" name="L981"><b>==</b> ?<i>arg</i>
...?</a></dd>

<dd><a href="mathop.htm#M15" name="L982"><b>eq</b> ?<i>arg</i>
...?</a></dd>

<dd><a href="mathop.htm#M16" name="L983"><b>!=</b> <i>arg
arg</i></a></dd>

<dd><a href="mathop.htm#M17" name="L984"><b>ne</b> <i>arg
arg</i></a></dd>

<dd><a href="mathop.htm#M18" name="L985"><b>&lt;</b> ?<i>arg</i>
...?</a></dd>

<dd><a href="mathop.htm#M19" name="L986"><b>&lt;=</b> ?<i>arg</i>
...?</a></dd>

<dd><a href="mathop.htm#M20" name="L987"><b>&gt;</b> ?<i>arg</i>
...?</a></dd>

<dd><a href="mathop.htm#M21" name="L988"><b>&gt;=</b> ?<i>arg</i>
...?</a></dd>
</dl>
</dd>

<dd><a href="mathop.htm#M22" name="L989">BIT-WISE OPERATORS</a> 

<dl class="bit-wise operators">
<dd><a href="mathop.htm#M23" name="L990"><b>~</b>
<i>number</i></a></dd>

<dd><a href="mathop.htm#M24" name="L991"><b>&amp;</b>
?<i>number</i> ...?</a></dd>

<dd><a href="mathop.htm#M25" name="L992"><b>|</b> ?<i>number</i>
...?</a></dd>

<dd><a href="mathop.htm#M26" name="L993"><b>^</b> ?<i>number</i>
...?</a></dd>

<dd><a href="mathop.htm#M27" name="L994"><b>&lt;&lt;</b> <i>number
number</i></a></dd>

<dd><a href="mathop.htm#M28" name="L995"><b>&gt;&gt;</b> <i>number
number</i></a></dd>
</dl>
</dd>

<dd><a href="mathop.htm#M29" name="L996">LIST OPERATORS</a> 

<dl class="list operators">
<dd><a href="mathop.htm#M30" name="L997"><b>in</b> <i>arg
list</i></a></dd>

<dd><a href="mathop.htm#M31" name="L998"><b>ni</b> <i>arg
list</i></a></dd>
</dl>
</dd>

<dd><a href="mathop.htm#M32" name="L999">EXAMPLES</a></dd>

<dd><a href="mathop.htm#M33" name="L1000">SEE ALSO</a></dd>

<dd><a href="mathop.htm#M34" name="L1001">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

mathop - Mathematical operators as Tcl commands 

<h3><a name="M3">SYNOPSIS</a></h3>

package require <b>Tcl 8.5</b><br>
<b>::tcl::mathop::!</b> <i>number</i><br>
<b>::tcl::mathop::~</b> <i>number</i><br>
<b>::tcl::mathop::+</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::-</b> <i>number</i> ?<i>number</i> ...?<br>
<b>::tcl::mathop::*</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::/</b> <i>number</i> ?<i>number</i> ...?<br>
<b>::tcl::mathop::%</b> <i>number number</i><br>
<b>::tcl::mathop::**</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::&amp;</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::|</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::^</b> ?<i>number</i> ...?<br>
<b>::tcl::mathop::&lt;&lt;</b> <i>number number</i><br>
<b>::tcl::mathop::&gt;&gt;</b> <i>number number</i><br>
<b>::tcl::mathop::==</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::!=</b> <i>arg arg</i><br>
<b>::tcl::mathop::&lt;</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::&lt;=</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::&gt;=</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::&gt;</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::eq</b> ?<i>arg</i> ...?<br>
<b>::tcl::mathop::ne</b> <i>arg arg</i><br>
<b>::tcl::mathop::in</b> <i>arg list</i><br>
<b>::tcl::mathop::ni</b> <i>arg list</i><br>
<h3><a name="M4">DESCRIPTION</a></h3>

The commands in the <b>::tcl::mathop</b> namespace implement the
same set of operations as supported by the <b><a href=
"../TclCmd/expr.htm">expr</a></b> command. All are exported from
the namespace, but are not imported into any other namespace by
default. Note that renaming, reimplementing or deleting any of the
commands in the namespace does <i>not</i> alter the way that the
<b><a href="../TclCmd/expr.htm">expr</a></b> command behaves, and
nor does defining any new commands in the <b>::tcl::mathop</b>
namespace. 

<p>The following operator commands are supported:</p>

<pre>
<b>~</b>   <b>!</b>    <b>+</b>    <b>-</b>    <b>*</b>
<b>/</b>    <b>%</b>    <b>**</b>   <b>&amp;</b>    <b>|</b>
<b>^</b>    <b>&gt;&gt;</b> <b>&lt;&lt;</b> <b>==</b>   <b>eq</b>
<b>!=</b>   <b>ne</b>   <b>&lt;</b> <b>&lt;=</b>    <b>&gt;</b>
<b>&gt;=</b>    <b>in</b>   <b>ni</b>
</pre>

<h4><a name="M5">MATHEMATICAL OPERATORS</a></h4>

The behaviors of the mathematical operator commands are as follows:


<dl class="mathematical operators">
<dt><a name="M6"><b>!</b> <i>boolean</i></a></dt>

<dd>Returns the boolean negation of <i>boolean</i>, where
<i>boolean</i> may be any numeric value or any other form of
boolean value (i.e. it returns truth if the argument is falsity or
zero, and falsity if the argument is truth or non-zero).</dd>

<dt><a name="M7"><b>+</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the sum of arbitrarily many arguments. Each
<i>number</i> argument may be any numeric value. If no arguments
are given, the result will be zero (the summation identity).</dd>

<dt><a name="M8"><b>-</b> <i>number</i> ?<i>number</i>
...?</a></dt>

<dd>If only a single <i>number</i> argument is given, returns the
negation of that numeric value. Otherwise returns the number that
results when all subsequent numeric values are subtracted from the
first one. All <i>number</i> arguments must be numeric values. At
least one argument must be given.</dd>

<dt><a name="M9"><b>*</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the product of arbitrarily many arguments. Each
<i>number</i> may be any numeric value. If no arguments are given,
the result will be one (the multiplicative identity).</dd>

<dt><a name="M10"><b>/</b> <i>number</i> ?<i>number</i>
...?</a></dt>

<dd>If only a single <i>number</i> argument is given, returns the
reciprocal of that numeric value (i.e. the value obtained by
dividing 1.0 by that value). Otherwise returns the number that
results when the first numeric argument is divided by all
subsequent numeric arguments. All <i>number</i> arguments must be
numeric values. At least one argument must be given. 

<p>Note that when the leading values in the list of arguments are
integers, integer division will be used for those initial steps
(i.e. the intermediate results will be as if the functions
<i>floor</i> and <i>int</i> are applied to them, in that order). If
all values in the operation are integers, the result will be an
integer.</p>
</dd>

<dt><a name="M11"><b>%</b> <i>number number</i></a></dt>

<dd>Returns the integral modulus (i.e., remainder) of the first
argument with respect to the second. Each <i>number</i> must have
an integral value. Also, the sign of the result will be the same as
the sign of the second <i>number</i>, which must not be zero. 

<p>Note that Tcl defines this operation exactly even for negative
numbers, so that the following command returns a true value
(omitting the namespace for clarity):</p>

<pre>
<b>==</b> [<b>*</b> [<b>/</b> <i>x y</i>] <i>y</i>] [<b>-</b> <i>x</i> [<b>%</b> <i>x y</i>]]
</pre>
</dd>

<dt><a name="M12"><b>**</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the result of raising each value to the power of the
result of recursively operating on the result of processing the
following arguments, so &ldquo;<b>** 2 3 4</b>&rdquo; is the same
as &ldquo;<b>** 2 [** 3 4]</b>&rdquo;. Each <i>number</i> may be
any numeric value, though the second number must not be fractional
if the first is negative. If no arguments are given, the result
will be one, and if only one argument is given, the result will be
that argument. The result will have an integral value only when all
arguments are integral values.</dd>
</dl>

<h4><a name="M13">COMPARISON OPERATORS</a></h4>

The behaviors of the comparison operator commands (most of which
operate preferentially on numeric arguments) are as follows: 

<dl class="comparison operators">
<dt><a name="M14"><b>==</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether each argument is equal to the arguments on each
side of it in the sense of the <b><a href=
"../TclCmd/expr.htm">expr</a></b> == operator (<i>i.e.</i>, numeric
comparison if possible, exact string comparison otherwise). If
fewer than two arguments are given, this operation always returns a
true value.</dd>

<dt><a name="M15"><b>eq</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether each argument is equal to the arguments on each
side of it using exact string comparison. If fewer than two
arguments are given, this operation always returns a true
value.</dd>

<dt><a name="M16"><b>!=</b> <i>arg arg</i></a></dt>

<dd>Returns whether the two arguments are not equal to each other,
in the sense of the <b><a href="../TclCmd/expr.htm">expr</a></b> !=
operator (<i>i.e.</i>, numeric comparison if possible, exact string
comparison otherwise).</dd>

<dt><a name="M17"><b>ne</b> <i>arg arg</i></a></dt>

<dd>Returns whether the two arguments are not equal to each other
using exact string comparison.</dd>

<dt><a name="M18"><b>&lt;</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether the arbitrarily-many arguments are ordered,
with each argument after the first having to be strictly more than
the one preceding it. Comparisons are performed preferentially on
the numeric values, and are otherwise performed using UNICODE
string comparison. If fewer than two arguments are present, this
operation always returns a true value. When the arguments are
numeric but should be compared as strings, the <b>string
compare</b> command should be used instead.</dd>

<dt><a name="M19"><b>&lt;=</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether the arbitrarily-many arguments are ordered,
with each argument after the first having to be equal to or more
than the one preceding it. Comparisons are performed preferentially
on the numeric values, and are otherwise performed using UNICODE
string comparison. If fewer than two arguments are present, this
operation always returns a true value. When the arguments are
numeric but should be compared as strings, the <b>string
compare</b> command should be used instead.</dd>

<dt><a name="M20"><b>&gt;</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether the arbitrarily-many arguments are ordered,
with each argument after the first having to be strictly less than
the one preceding it. Comparisons are performed preferentially on
the numeric values, and are otherwise performed using UNICODE
string comparison. If fewer than two arguments are present, this
operation always returns a true value. When the arguments are
numeric but should be compared as strings, the <b>string
compare</b> command should be used instead.</dd>

<dt><a name="M21"><b>&gt;=</b> ?<i>arg</i> ...?</a></dt>

<dd>Returns whether the arbitrarily-many arguments are ordered,
with each argument after the first having to be equal to or less
than the one preceding it. Comparisons are performed preferentially
on the numeric values, and are otherwise performed using UNICODE
string comparison. If fewer than two arguments are present, this
operation always returns a true value. When the arguments are
numeric but should be compared as strings, the <b>string
compare</b> command should be used instead.</dd>
</dl>

<h4><a name="M22">BIT-WISE OPERATORS</a></h4>

The behaviors of the bit-wise operator commands (all of which only
operate on integral arguments) are as follows: 

<dl class="bit-wise operators">
<dt><a name="M23"><b>~</b> <i>number</i></a></dt>

<dd>Returns the bit-wise negation of <i>number</i>. <i>Number</i>
may be an integer of any size. Note that the result of this
operation will always have the opposite sign to the input
<i>number</i>.</dd>

<dt><a name="M24"><b>&amp;</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the bit-wise AND of each of the arbitrarily many
arguments. Each <i>number</i> must have an integral value. If no
arguments are given, the result will be minus one.</dd>

<dt><a name="M25"><b>|</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the bit-wise OR of each of the arbitrarily many
arguments. Each <i>number</i> must have an integral value. If no
arguments are given, the result will be zero.</dd>

<dt><a name="M26"><b>^</b> ?<i>number</i> ...?</a></dt>

<dd>Returns the bit-wise XOR of each of the arbitrarily many
arguments. Each <i>number</i> must have an integral value. If no
arguments are given, the result will be zero.</dd>

<dt><a name="M27"><b>&lt;&lt;</b> <i>number number</i></a></dt>

<dd>Returns the result of bit-wise shifting the first argument left
by the number of bits specified in the second argument. Each
<i>number</i> must have an integral value.</dd>

<dt><a name="M28"><b>&gt;&gt;</b> <i>number number</i></a></dt>

<dd>Returns the result of bit-wise shifting the first argument
right by the number of bits specified in the second argument. Each
<i>number</i> must have an integral value.</dd>
</dl>

<h4><a name="M29">LIST OPERATORS</a></h4>

The behaviors of the list-oriented operator commands are as
follows: 

<dl class="list operators">
<dt><a name="M30"><b>in</b> <i>arg list</i></a></dt>

<dd>Returns whether the value <i>arg</i> is present in the list
<i>list</i> (according to exact string comparison of
elements).</dd>

<dt><a name="M31"><b>ni</b> <i>arg list</i></a></dt>

<dd>Returns whether the value <i>arg</i> is not present in the list
<i>list</i> (according to exact string comparison of
elements).</dd>
</dl>

<h3><a name="M32">EXAMPLES</a></h3>

The simplest way to use the operators is often by using
<b>namespace path</b> to make the commands available. This has the
advantage of not affecting the set of commands defined by the
current namespace. 

<pre>
namespace path {<b>::tcl::mathop</b> ::tcl::mathfunc}

<i># Compute the sum of some numbers</i>
set sum [<b>+</b> 1 2 3]

<i># Compute the average of a list</i>
set list {1 2 3 4 5 6}
set mean [<b>/</b> [<b>+</b> {*}$list] [double [llength $list]]]

<i># Test for list membership</i>
set gotIt [<b>in</b> 3 $list]

<i># Test to see if a value is within some defined range</i>
set inRange [<b>&lt;=</b> 1 $x 5]

<i># Test to see if a list is sorted</i>
set sorted [<b>&lt;=</b> {*}$list]
</pre>

<h3><a name="M33">SEE ALSO</a></h3>

<b><a href="../TclCmd/expr.htm">expr</a></b>, <b><a href=
"../TclCmd/mathfunc.htm">mathfunc</a></b>, <b><a href=
"../TclCmd/namespace.htm">namespace</a></b> 

<h3><a name="M34">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#command">command</a>, <a href=
"../Keywords/E.htm#expression">expression</a>, <a href=
"../Keywords/O.htm#operator">operator</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow
Jr.</div>
</body>
</html>

