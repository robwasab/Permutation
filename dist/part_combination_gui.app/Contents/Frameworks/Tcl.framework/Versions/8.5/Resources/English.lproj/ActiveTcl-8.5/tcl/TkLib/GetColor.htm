<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_AllocColorFromObj manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> GetColor</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="GetColor.htm#M2" name="L271">NAME</a> 

<dl>
<dd>Tk_AllocColorFromObj, Tk_GetColor, Tk_GetColorFromObj,
Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColorFromObj,
Tk_FreeColor - maintain database of colors</dd>
</dl>
</dd>

<dd><a href="GetColor.htm#M3" name="L272">SYNOPSIS</a></dd>

<dd><a href="GetColor.htm#M4" name="L273">ARGUMENTS</a></dd>

<dd><a href="GetColor.htm#M5" name="L274">DESCRIPTION</a> 

<dl class="description">
<dd><a href="GetColor.htm#M6" name="L275"><i>colorname</i></a></dd>

<dd><a href="GetColor.htm#M7" name=
"L276"><b>#</b><i>RGB</i></a></dd>

<dd><a href="GetColor.htm#M8" name=
"L277"><b>#</b><i>RRGGBB</i></a></dd>

<dd><a href="GetColor.htm#M9" name=
"L278"><b>#</b><i>RRRGGGBBB</i></a></dd>

<dd><a href="GetColor.htm#M10" name=
"L279"><b>#</b><i>RRRRGGGGBBBB</i></a></dd>
</dl>
</dd>

<dd><a href="GetColor.htm#M11" name="L280">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

Tk_AllocColorFromObj, Tk_GetColor, Tk_GetColorFromObj,
Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColorFromObj,
Tk_FreeColor - maintain database of colors 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
XColor *<br>
<b>Tk_AllocColorFromObj(</b><i>interp, tkwin,
objPtr</i><b>)</b><br>
XColor *<br>
<b>Tk_GetColor(</b><i>interp, tkwin, name</i><b>)</b><br>
XColor *<br>
<b>Tk_GetColorFromObj(</b><i>tkwin, objPtr</i><b>)</b><br>
XColor *<br>
<b>Tk_GetColorByValue(</b><i>tkwin, prefPtr</i><b>)</b><br>
const char *<br>
<b>Tk_NameOfColor(</b><i>colorPtr</i><b>)</b><br>
GC<br>
<b>Tk_GCForColor(</b><i>colorPtr, drawable</i><b>)</b><br>
<b>Tk_FreeColorFromObj(</b><i>tkwin, objPtr</i><b>)</b><br>
<b>Tk_FreeColor(</b><i>colorPtr</i><b>)</b><br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter to use for error reporting.</dd>

<dt>Tk_Window <b>tkwin</b> (in)</dt>

<dd>Token for window in which color will be used.</dd>

<dt>Tcl_Obj <b>*objPtr</b> (in/out)</dt>

<dd>String value describes desired color; internal rep will be
modified to cache pointer to corresponding (XColor *).</dd>

<dt>char <b>*name</b> (in)</dt>

<dd>Same as <i>objPtr</i> except description of color is passed as
a string and resulting (XColor *) is not cached.</dd>

<dt>XColor <b>*prefPtr</b> (in)</dt>

<dd>Indicates red, green, and blue intensities of desired
color.</dd>

<dt>XColor <b>*colorPtr</b> (in)</dt>

<dd>Pointer to X color information. Must have been allocated by
previous call to <b>Tk_AllocColorFromObj</b>, <b>Tk_GetColor</b> or
<b>Tk_GetColorByValue</b>, except when passed to
<b>Tk_NameOfColor</b>.</dd>

<dt>Drawable <b>drawable</b> (in)</dt>

<dd>Drawable in which the result graphics context will be used.
Must have same screen and depth as the window for which the color
was allocated.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These procedures manage the colors being used by a Tk application.
They allow colors to be shared whenever possible, so that colormap
space is preserved, and they pick closest available colors when
colormap space is exhausted. 

<p>Given a textual description of a color,
<b>Tk_AllocColorFromObj</b> locates a pixel value that may be used
to render the color in a particular window. The desired color is
specified with an object whose string value must have one of the
following forms:</p>

<dl class="description">
<dt><a name="M6"><i>colorname</i></a></dt>

<dd>Any of the valid textual names for a color defined in the
server's color database file, such as <b>red</b> or
<b>PeachPuff</b>.</dd>

<dt><a name="M7"><b>#</b><i>RGB</i></a></dt>

<dt><a name="M8"><b>#</b><i>RRGGBB</i></a></dt>

<dt><a name="M9"><b>#</b><i>RRRGGGBBB</i></a></dt>

<dt><a name="M10"><b>#</b><i>RRRRGGGGBBBB</i></a></dt>

<dd>A numeric specification of the red, green, and blue intensities
to use to display the color. Each <i>R</i>, <i>G</i>, or <i>B</i>
represents a single hexadecimal digit. The four forms permit colors
to be specified with 4-bit, 8-bit, 12-bit or 16-bit values. When
fewer than 16 bits are provided for each color, they represent the
most significant bits of the color, while the lower unfilled bits
will be repeatedly replicated from the available higher bits. For
example, #3a7 is the same as #3333aaaa7777.</dd>
</dl>

<p><b>Tk_AllocColorFromObj</b> returns a pointer to an XColor
structure; the structure indicates the exact intensities of the
allocated color (which may differ slightly from those requested,
depending on the limitations of the screen) and a pixel value that
may be used to draw with the color in <i>tkwin</i>. If an error
occurs in <b>Tk_AllocColorFromObj</b> (such as an unknown color
name) then NULL is returned and an error message is stored in
<i>interp</i>'s result if <i>interp</i> is not NULL. If the
colormap for <i>tkwin</i> is full, <b>Tk_AllocColorFromObj</b> will
use the closest existing color in the colormap.
<b>Tk_AllocColorFromObj</b> caches information about the return
value in <i>objPtr</i>, which speeds up future calls to procedures
such as <b>Tk_AllocColorFromObj</b> and
<b>Tk_GetColorFromObj</b>.</p>

<p><b>Tk_GetColor</b> is identical to <b>Tk_AllocColorFromObj</b>
except that the description of the color is specified with a string
instead of an object. This prevents <b>Tk_GetColor</b> from caching
the return value, so <b>Tk_GetColor</b> is less efficient than
<b>Tk_AllocColorFromObj</b>.</p>

<p><b>Tk_GetColorFromObj</b> returns the token for an existing
color, given the window and description used to create the color.
<b>Tk_GetColorFromObj</b> does not actually create the color; the
color must already have been created with a previous call to
<b>Tk_AllocColorFromObj</b> or <b>Tk_GetColor</b>. The return value
is cached in <i>objPtr</i>, which speeds up future calls to
<b>Tk_GetColorFromObj</b> with the same <i>objPtr</i> and
<i>tkwin</i>.</p>

<p><b>Tk_GetColorByValue</b> is similar to <b>Tk_GetColor</b>
except that the desired color is indicated with the <i>red</i>,
<i>green</i>, and <i>blue</i> fields of the structure pointed to by
<i>colorPtr</i>.</p>

<p>This package maintains a database of all the colors currently in
use. If the same color is requested multiple times from
<b>Tk_GetColor</b> or <b>Tk_AllocColorFromObj</b> (e.g. by
different windows), or if the same intensities are requested
multiple times from <b>Tk_GetColorByValue</b>, then existing pixel
values will be re-used. Re-using an existing pixel avoids any
interaction with the window server, which makes the allocation much
more efficient. These procedures also provide a portable interface
that works across all platforms. For this reason, you should
generally use <b>Tk_AllocColorFromObj</b>, <b>Tk_GetColor</b>, or
<b>Tk_GetColorByValue</b> instead of lower level procedures like
<b>XAllocColor</b>.</p>

<p>Since different calls to this package may return the same shared
pixel value, callers should never change the color of a pixel
returned by the procedures. If you need to change a color value
dynamically, you should use <b>XAllocColorCells</b> to allocate the
pixel value for the color.</p>

<p>The procedure <b>Tk_NameOfColor</b> is roughly the inverse of
<b>Tk_GetColor</b>. If its <i>colorPtr</i> argument was created by
<b>Tk_AllocColorFromObj</b> or <b>Tk_GetColor</b> then the return
value is the string that was used to create the color. If
<i>colorPtr</i> was created by a call to <b>Tk_GetColorByValue</b>,
or by any other mechanism, then the return value is a string that
could be passed to <b>Tk_GetColor</b> to return the same color.
Note: the string returned by <b>Tk_NameOfColor</b> is only
guaranteed to persist until the next call to
<b>Tk_NameOfColor</b>.</p>

<p><b>Tk_GCForColor</b> returns a graphics context whose
<b>foreground</b> field is the pixel allocated for <i>colorPtr</i>
and whose other fields all have default values. This provides an
easy way to do basic drawing with a color. The graphics context is
cached with the color and will exist only as long as
<i>colorPtr</i> exists; it is freed when the last reference to
<i>colorPtr</i> is freed by calling <b>Tk_FreeColor</b>.</p>

<p>When a color is no longer needed <b>Tk_FreeColorFromObj</b> or
<b>Tk_FreeColor</b> should be called to release it. For
<b>Tk_FreeColorFromObj</b> the color to release is specified with
the same information used to create it; for <b>Tk_FreeColor</b> the
color to release is specified with a pointer to its XColor
structure. There should be exactly one call to
<b>Tk_FreeColorFromObj</b> or <b>Tk_FreeColor</b> for each call to
<b>Tk_AllocColorFromObj</b>, <b>Tk_GetColor</b>, or
<b>Tk_GetColorByValue</b>.</p>

<h3><a name="M11">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#color">color</a>, <a href=
"../Keywords/I.htm#intensity">intensity</a>, <a href=
"../Keywords/O.htm#object">object</a>, <a href=
"../Keywords/P.htm#pixel value">pixel value</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990-1991 The Regents of the University of
California. Copyright &copy; 1994-1998 Sun Microsystems, Inc.</div>
</body>
</html>

