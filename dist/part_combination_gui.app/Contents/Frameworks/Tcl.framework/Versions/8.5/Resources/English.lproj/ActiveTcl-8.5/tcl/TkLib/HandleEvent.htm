<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Library Procedures - Tk_HandleEvent manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> HandleEvent</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tk_HandleEvent - invoke event handlers for window system events 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
<b>Tk_HandleEvent</b>(<i>eventPtr</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>XEvent <b>*eventPtr</b> (in)</dt>

<dd>Pointer to X event to dispatch to relevant handler(s). It is
important that all unused fields of the structure be set to
zero.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<b>Tk_HandleEvent</b> is a lower-level procedure that deals with
window events. It is called by <b><a href=
"../TclLib/Notifier.htm">Tcl_ServiceEvent</a></b> (and indirectly
by <b><a href="../TclLib/DoOneEvent.htm">Tcl_DoOneEvent</a></b>),
and in a few other cases within Tk. It makes callbacks to any
window event handlers (created by calls to <b><a href=
"../TkLib/EventHndlr.htm">Tk_CreateEventHandler</a></b>) that match
<i>eventPtr</i> and then returns. In some cases it may be useful
for an application to bypass the Tk event queue and call
<b>Tk_HandleEvent</b> directly instead of calling <b><a href=
"../TclLib/Notifier.htm">Tcl_QueueEvent</a></b> followed by <b><a
href="../TclLib/Notifier.htm">Tcl_ServiceEvent</a></b>. 

<p>This procedure may be invoked recursively. For example, it is
possible to invoke <b>Tk_HandleEvent</b> recursively from a handler
called by <b>Tk_HandleEvent</b>. This sort of operation is useful
in some modal situations, such as when a notifier has been popped
up and an application wishes to wait for the user to click a button
in the notifier before doing anything else.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#callback">callback</a>, <a href=
"../Keywords/E.htm#event">event</a>, <a href=
"../Keywords/H.htm#handler">handler</a>, <a href=
"../Keywords/W.htm#window">window</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990-1992 The Regents of the University of
California. Copyright &copy; 1994-1996 Sun Microsystems, Inc.</div>
</body>
</html>

