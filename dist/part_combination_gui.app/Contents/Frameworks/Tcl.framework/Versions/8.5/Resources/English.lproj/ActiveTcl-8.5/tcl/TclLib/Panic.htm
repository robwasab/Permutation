<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_Panic manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> Panic</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_Panic, Tcl_PanicVA, Tcl_SetPanicProc - report fatal error and
abort 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
void<br>
<b>Tcl_Panic</b>(<i>format</i>, <i>arg</i>, <i>arg</i>,
<i>...</i>)<br>
void<br>
<b>Tcl_PanicVA</b>(<i>format</i>, <i>argList</i>)<br>
void<br>
<b>Tcl_SetPanicProc</b>(<i>panicProc</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>const char* <b><a href="../TclCmd/format.htm">format</a></b>
(in)</dt>

<dd>A printf-style format string.</dd>

<dt><b>arg</b> (in)</dt>

<dd>Arguments matching the format string.</dd>

<dt>va_list <b>argList</b> (in)</dt>

<dd>An argument list of arguments matching the format string. Must
have been initialized using <b>va_start</b>, and cleared using
<b>va_end</b>.</dd>

<dt>Tcl_PanicProc <b>*panicProc</b> (in)</dt>

<dd>Procedure to report fatal error message and abort.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

When the Tcl library detects that its internal data structures are
in an inconsistent state, or that its C procedures have been called
in a manner inconsistent with their documentation, it calls
<b>Tcl_Panic</b> to display a message describing the error and
abort the process. The <i>format</i> argument is a format string
describing how to format the remaining arguments <i>arg</i> into an
error message, according to the same formatting rules used by the
<b>printf</b> family of functions. The same formatting rules are
also used by the built-in Tcl command <b><a href=
"../TclCmd/format.htm">format</a></b>. 

<p>In a freshly loaded Tcl library, <b>Tcl_Panic</b> prints the
formatted error message to the standard error file of the process,
and then calls <b>abort</b> to terminate the process.
<b>Tcl_Panic</b> does not return.</p>

<p><b>Tcl_SetPanicProc</b> may be used to modify the behavior of
<b>Tcl_Panic</b>. The <i>panicProc</i> argument should match the
type <b>Tcl_PanicProc</b>:</p>

<pre>
typedef void Tcl_PanicProc(
        const char *<b><a href=
"../TclCmd/format.htm">format</a></b>,
        <b>arg</b>, <b>arg</b>,...);
</pre>

<p>After <b>Tcl_SetPanicProc</b> returns, any future calls to
<b>Tcl_Panic</b> will call <i>panicProc</i>, passing along the
<i>format</i> and <i>arg</i> arguments. To maintain consistency
with the callers of <b>Tcl_Panic</b>, <i>panicProc</i> must not
return; it must call <b>abort</b>. <i>panicProc</i> should avoid
making calls into the Tcl library, or into other libraries that may
call the Tcl library, since the original call to <b>Tcl_Panic</b>
indicates the Tcl library is not in a state of reliable
operation.</p>

<p>The typical use of <b>Tcl_SetPanicProc</b> arranges for the
error message to be displayed or reported in a manner more suitable
for the application or the platform. As an example, the Windows
implementation of <b><a href="../UserCmd/wish.htm">wish</a></b>
calls <b>Tcl_SetPanicProc</b> to force all panic messages to be
displayed in a system dialog box, rather than to be printed to the
standard error file (usually not visible under Windows).</p>

<p>Although the primary callers of <b>Tcl_Panic</b> are the
procedures of the Tcl library, <b>Tcl_Panic</b> is a public
function and may be called by any extension or application that
wishes to abort the process and have a panic message displayed the
same way that panic messages from Tcl will be displayed.</p>

<p><b>Tcl_PanicVA</b> is the same as <b>Tcl_Panic</b> except that
instead of taking a variable number of arguments it takes an
argument list.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<b>abort</b>, <b>printf</b>, <b><a href=
"../TclCmd/exec.htm">exec</a></b>, <b><a href=
"../TclCmd/format.htm">format</a></b> 

<h3><a name="M7">KEYWORDS</a></h3>

<a href="../Keywords/A.htm#abort">abort</a>, <a href=
"../Keywords/F.htm#fatal">fatal</a>, <a href=
"../Keywords/E.htm#error">error</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow
Jr.</div>
</body>
</html>

