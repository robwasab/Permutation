<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_OpenTcpClient manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> OpenTcp</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="OpenTcp.htm#M2" name="L511">NAME</a> 

<dl>
<dd>Tcl_OpenTcpClient, Tcl_MakeTcpClientChannel, Tcl_OpenTcpServer
- procedures to open channels using TCP sockets</dd>
</dl>
</dd>

<dd><a href="OpenTcp.htm#M3" name="L512">SYNOPSIS</a></dd>

<dd><a href="OpenTcp.htm#M4" name="L513">ARGUMENTS</a></dd>

<dd><a href="OpenTcp.htm#M5" name="L514">DESCRIPTION</a></dd>

<dd><a href="OpenTcp.htm#M6" name="L515">TCL_OPENTCPCLIENT</a></dd>

<dd><a href="OpenTcp.htm#M7" name=
"L516">TCL_MAKETCPCLIENTCHANNEL</a></dd>

<dd><a href="OpenTcp.htm#M8" name="L517">TCL_OPENTCPSERVER</a></dd>

<dd><a href="OpenTcp.htm#M9" name="L518">PLATFORM ISSUES</a></dd>

<dd><a href="OpenTcp.htm#M10" name="L519">SEE ALSO</a></dd>

<dd><a href="OpenTcp.htm#M11" name="L520">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

Tcl_OpenTcpClient, Tcl_MakeTcpClientChannel, Tcl_OpenTcpServer -
procedures to open channels using TCP sockets 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b> <br>
Tcl_Channel<br>
<b>Tcl_OpenTcpClient</b>(<i>interp, port, host, myaddr, myport,
async</i>)<br>
Tcl_Channel<br>
<b>Tcl_MakeTcpClientChannel</b>(<i>sock</i>)<br>
Tcl_Channel<br>
<b>Tcl_OpenTcpServer</b>(<i>interp, port, myaddr, proc,
clientData</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Tcl interpreter to use for error reporting. If non-NULL and an
error occurs, an error message is left in the interpreter's
result.</dd>

<dt>int <b>port</b> (in)</dt>

<dd>A port number to connect to as a client or to listen on as a
server.</dd>

<dt>const char <b>*host</b> (in)</dt>

<dd>A string specifying a host name or address for the remote end
of the connection.</dd>

<dt>int <b>myport</b> (in)</dt>

<dd>A port number for the client's end of the socket. If 0, a port
number is allocated at random.</dd>

<dt>const char <b>*myaddr</b> (in)</dt>

<dd>A string specifying the host name or address for network
interface to use for the local end of the connection. If NULL, a
default interface is chosen.</dd>

<dt>int <b>async</b> (in)</dt>

<dd>If nonzero, the client socket is connected asynchronously to
the server.</dd>

<dt>ClientData <b>sock</b> (in)</dt>

<dd>Platform-specific handle for client TCP socket.</dd>

<dt>Tcl_TcpAcceptProc <b>*proc</b> (in)</dt>

<dd>Pointer to a procedure to invoke each time a new connection is
accepted via the socket.</dd>

<dt>ClientData <b>clientData</b> (in)</dt>

<dd>Arbitrary one-word value to pass to <i>proc</i>.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These functions are convenience procedures for creating channels
that communicate over TCP sockets. The operations on a channel are
described in the manual entry for <b><a href=
"../TclLib/OpenFileChnl.htm">Tcl_OpenFileChannel</a></b>. 

<h3><a name="M6">TCL_OPENTCPCLIENT</a></h3>

<b>Tcl_OpenTcpClient</b> opens a client TCP socket connected to a
<i>port</i> on a specific <i>host</i>, and returns a channel that
can be used to communicate with the server. The host to connect to
can be specified either as a domain name style name (e.g.
<b>www.sunlabs.com</b>), or as a string containing the alphanumeric
representation of its four-byte address (e.g. <b>127.0.0.1</b>).
Use the string <b>localhost</b> to connect to a TCP socket on the
host on which the function is invoked. 

<p>The <i>myaddr</i> and <i>myport</i> arguments allow a client to
specify an address for the local end of the connection. If
<i>myaddr</i> is NULL, then an interface is chosen automatically by
the operating system. If <i>myport</i> is 0, then a port number is
chosen at random by the operating system.</p>

<p>If <i>async</i> is zero, the call to <b>Tcl_OpenTcpClient</b>
returns only after the client socket has either successfully
connected to the server, or the attempted connection has failed. If
<i>async</i> is nonzero the socket is connected asynchronously and
the returned channel may not yet be connected to the server when
the call to <b>Tcl_OpenTcpClient</b> returns. If the channel is in
blocking mode and an input or output operation is done on the
channel before the connection is completed or fails, that operation
will wait until the connection either completes successfully or
fails. If the channel is in nonblocking mode, the input or output
operation will return immediately and a subsequent call to <b><a
href="../TclLib/OpenFileChnl.htm">Tcl_InputBlocked</a></b> on the
channel will return nonzero.</p>

<p>The returned channel is opened for reading and writing. If an
error occurs in opening the socket, <b>Tcl_OpenTcpClient</b>
returns NULL and records a POSIX error code that can be retrieved
with <b><a href="../TclLib/SetErrno.htm">Tcl_GetErrno</a></b>. In
addition, if <i>interp</i> is non-NULL, an error message is left in
the interpreter's result.</p>

<p>The newly created channel is not registered in the supplied
interpreter; to register it, use <b><a href=
"../TclLib/OpenFileChnl.htm">Tcl_RegisterChannel</a></b>. If one of
the standard channels, <b>stdin, stdout</b> or <b>stderr</b> was
previously closed, the act of creating the new channel also assigns
it as a replacement for the standard channel.</p>

<h3><a name="M7">TCL_MAKETCPCLIENTCHANNEL</a></h3>

<b>Tcl_MakeTcpClientChannel</b> creates a <b>Tcl_Channel</b> around
an existing, platform specific, handle for a client TCP socket. 

<p>The newly created channel is not registered in the supplied
interpreter; to register it, use <b><a href=
"../TclLib/OpenFileChnl.htm">Tcl_RegisterChannel</a></b>. If one of
the standard channels, <b>stdin, stdout</b> or <b>stderr</b> was
previously closed, the act of creating the new channel also assigns
it as a replacement for the standard channel.</p>

<h3><a name="M8">TCL_OPENTCPSERVER</a></h3>

<b>Tcl_OpenTcpServer</b> opens a TCP socket on the local host on a
specified <i>port</i> and uses the Tcl event mechanism to accept
requests from clients to connect to it. The <i>myaddr</i> argument
specifies the network interface. If <i>myaddr</i> is NULL the
special address INADDR_ANY should be used to allow connections from
any network interface. Each time a client connects to this socket,
Tcl creates a channel for the new connection and invokes
<i>proc</i> with information about the channel. <i>Proc</i> must
match the following prototype: 

<pre>
typedef void Tcl_TcpAcceptProc(
        ClientData <i>clientData</i>,
        Tcl_Channel <i>channel</i>,
        char *<i>hostName</i>,
        int <i>port</i>);
</pre>

<p>The <i>clientData</i> argument will be the same as the
<i>clientData</i> argument to <b>Tcl_OpenTcpServer</b>,
<i>channel</i> will be the handle for the new channel,
<i>hostName</i> points to a string containing the name of the
client host making the connection, and <i>port</i> will contain the
client's port number. The new channel is opened for both input and
output. If <i>proc</i> raises an error, the connection is closed
automatically. <i>Proc</i> has no return value, but if it wishes to
reject the connection it can close <i>channel</i>.</p>

<p><b>Tcl_OpenTcpServer</b> normally returns a pointer to a channel
representing the server socket. If an error occurs,
<b>Tcl_OpenTcpServer</b> returns NULL and records a POSIX error
code that can be retrieved with <b><a href=
"../TclLib/SetErrno.htm">Tcl_GetErrno</a></b>. In addition, if the
interpreter is non-NULL, an error message is left in the
interpreter's result.</p>

<p>The channel returned by <b>Tcl_OpenTcpServer</b> cannot be used
for either input or output. It is simply a handle for the socket
used to accept connections. The caller can close the channel to
shut down the server and disallow further connections from new
clients.</p>

<p>TCP server channels operate correctly only in applications that
dispatch events through <b><a href=
"../TclLib/DoOneEvent.htm">Tcl_DoOneEvent</a></b> or through Tcl
commands such as <b><a href="../TclCmd/vwait.htm">vwait</a></b>;
otherwise Tcl will never notice that a connection request from a
remote client is pending.</p>

<p>The newly created channel is not registered in the supplied
interpreter; to register it, use <b><a href=
"../TclLib/OpenFileChnl.htm">Tcl_RegisterChannel</a></b>. If one of
the standard channels, <b>stdin, stdout</b> or <b>stderr</b> was
previously closed, the act of creating the new channel also assigns
it as a replacement for the standard channel.</p>

<h3><a name="M9">PLATFORM ISSUES</a></h3>

On Unix platforms, the socket handle is a Unix file descriptor as
returned by the <b><a href="../TclCmd/socket.htm">socket</a></b>
system call. On the Windows platform, the socket handle is a <b><a
href="../TclCmd/socket.htm">SOCKET</a></b> as defined in the
WinSock API. 

<h3><a name="M10">SEE ALSO</a></h3>

<b><a href=
"../TclLib/OpenFileChnl.htm">Tcl_OpenFileChannel</a></b>, <b><a
href="../TclLib/OpenFileChnl.htm">Tcl_RegisterChannel</a></b>,
<b><a href="../TclCmd/vwait.htm">vwait</a></b> 

<h3><a name="M11">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#client">client</a>, <a href=
"../Keywords/S.htm#server">server</a>, <a href=
"../Keywords/T.htm#TCP">TCP</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1996-7 Sun Microsystems, Inc.</div>
</body>
</html>

