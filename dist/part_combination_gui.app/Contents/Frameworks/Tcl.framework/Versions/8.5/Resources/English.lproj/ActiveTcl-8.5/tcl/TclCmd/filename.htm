<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - filename manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> filename</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="filename.htm#M2" name="L493">NAME</a> 

<dl>
<dd>filename - File name conventions supported by Tcl commands</dd>
</dl>
</dd>

<dd><a href="filename.htm#M3" name="L494">INTRODUCTION</a></dd>

<dd><a href="filename.htm#M4" name="L495">PATH TYPES</a></dd>

<dd><a href="filename.htm#M5" name="L496">PATH SYNTAX</a> 

<dl class="path syntax">
<dd><a href="filename.htm#M6" name="L497"><b>Unix</b></a> 

<dl class="path syntax">
<dd><a href="filename.htm#M7" name="L498"><b>/</b></a></dd>

<dd><a href="filename.htm#M8" name=
"L499"><b>/etc/passwd</b></a></dd>

<dd><a href="filename.htm#M9" name="L500"><b>.</b></a></dd>

<dd><a href="filename.htm#M10" name="L501"><b>foo</b></a></dd>

<dd><a href="filename.htm#M11" name="L502"><b>foo/bar</b></a></dd>

<dd><a href="filename.htm#M12" name="L503"><b>../foo</b></a></dd>
</dl>
</dd>

<dd><a href="filename.htm#M13" name="L504"><b>Windows</b></a> 

<dl class="path syntax">
<dd><a href="filename.htm#M14" name=
"L505"><b>\\Host\share/file</b></a></dd>

<dd><a href="filename.htm#M15" name="L506"><b>c:foo</b></a></dd>

<dd><a href="filename.htm#M16" name="L507"><b>c:/foo</b></a></dd>

<dd><a href="filename.htm#M17" name="L508"><b>foo\bar</b></a></dd>

<dd><a href="filename.htm#M18" name="L509"><b>\foo</b></a></dd>

<dd><a href="filename.htm#M19" name="L510"><b>\\foo</b></a></dd>
</dl>
</dd>
</dl>
</dd>

<dd><a href="filename.htm#M20" name="L511">TILDE
SUBSTITUTION</a></dd>

<dd><a href="filename.htm#M21" name="L512">PORTABILITY
ISSUES</a></dd>

<dd><a href="filename.htm#M22" name="L513">SEE ALSO</a></dd>

<dd><a href="filename.htm#M23" name="L514">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

filename - File name conventions supported by Tcl commands 

<h3><a name="M3">INTRODUCTION</a></h3>

All Tcl commands and C procedures that take file names as arguments
expect the file names to be in one of three forms, depending on the
current platform. On each platform, Tcl supports file names in the
standard forms(s) for that platform. In addition, on all platforms,
Tcl supports a Unix-like syntax intended to provide a convenient
way of constructing simple file names. However, scripts that are
intended to be portable should not assume a particular form for
file names. Instead, portable scripts must use the <b><a href=
"../TclCmd/file.htm">file split</a></b> and <b>file join</b>
commands to manipulate file names (see the <b><a href=
"../TclCmd/file.htm">file</a></b> manual entry for more details). 

<h3><a name="M4">PATH TYPES</a></h3>

File names are grouped into three general types based on the
starting point for the path used to specify the file: absolute,
relative, and volume-relative. Absolute names are completely
qualified, giving a path to the file relative to a particular
volume and the root directory on that volume. Relative names are
unqualified, giving a path to the file relative to the current
working directory. Volume-relative names are partially qualified,
either giving the path relative to the root directory on the
current volume, or relative to the current directory of the
specified volume. The <b><a href="../TclCmd/file.htm">file
pathtype</a></b> command can be used to determine the type of a
given path. 

<h3><a name="M5">PATH SYNTAX</a></h3>

The rules for native names depend on the value reported in the Tcl
array element <b>tcl_platform(platform)</b>: 

<dl class="path syntax">
<dt><a name="M6"><b>Unix</b></a></dt>

<dd>On Unix and Apple MacOS X platforms, Tcl uses path names where
the components are separated by slashes. Path names may be relative
or absolute, and file names may contain any character other than
slash. The file names <b>.</b> and <b>..</b> are special and refer
to the current directory and the parent of the current directory
respectively. Multiple adjacent slash characters are interpreted as
a single separator. Any number of trailing slash characters at the
end of a path are simply ignored, so the paths <b>foo</b>,
<b>foo/</b> and <b>foo//</b> are all identical, and in particular
<b>foo/</b> does not necessarily mean a directory is being
referred. 

<p>The following examples illustrate various forms of path
names:</p>

<dl class="path syntax">
<dt><a name="M7"><b>/</b></a></dt>

<dd>Absolute path to the root directory.</dd>

<dt><a name="M8"><b>/etc/passwd</b></a></dt>

<dd>Absolute path to the file named <b>passwd</b> in the directory
<b>etc</b> in the root directory.</dd>

<dt><a name="M9"><b>.</b></a></dt>

<dd>Relative path to the current directory.</dd>

<dt><a name="M10"><b>foo</b></a></dt>

<dd>Relative path to the file <b>foo</b> in the current
directory.</dd>

<dt><a name="M11"><b>foo/bar</b></a></dt>

<dd>Relative path to the file <b>bar</b> in the directory
<b>foo</b> in the current directory.</dd>

<dt><a name="M12"><b>../foo</b></a></dt>

<dd>Relative path to the file <b>foo</b> in the directory above the
current directory.</dd>
</dl>
</dd>

<dt><a name="M13"><b>Windows</b></a></dt>

<dd>On Microsoft Windows platforms, Tcl supports both
drive-relative and UNC style names. Both <b>/</b> and <b>\</b> may
be used as directory separators in either type of name.
Drive-relative names consist of an optional drive specifier
followed by an absolute or relative path. UNC paths follow the
general form <b>\\servername\sharename\path\file</b>, but must at
the very least contain the server and share components, i.e.
<b>\\servername\sharename</b>. In both forms, the file names
<b>.</b> and <b>..</b> are special and refer to the current
directory and the parent of the current directory respectively. The
following examples illustrate various forms of path names: 

<dl class="path syntax">
<dt><a name="M14"><b>\\Host\share/file</b></a></dt>

<dd>Absolute UNC path to a file called <b><a href=
"../TclCmd/file.htm">file</a></b> in the root directory of the
export point <b>share</b> on the host <b>Host</b>. Note that
repeated use of <b><a href="../TclCmd/file.htm">file
dirname</a></b> on this path will give <b>//Host/share</b>, and
will never give just <b>//Host</b>.</dd>

<dt><a name="M15"><b>c:foo</b></a></dt>

<dd>Volume-relative path to a file <b>foo</b> in the current
directory on drive <b>c</b>.</dd>

<dt><a name="M16"><b>c:/foo</b></a></dt>

<dd>Absolute path to a file <b>foo</b> in the root directory of
drive <b>c</b>.</dd>

<dt><a name="M17"><b>foo\bar</b></a></dt>

<dd>Relative path to a file <b>bar</b> in the <b>foo</b> directory
in the current directory on the current volume.</dd>

<dt><a name="M18"><b>\foo</b></a></dt>

<dd>Volume-relative path to a file <b>foo</b> in the root directory
of the current volume.</dd>

<dt><a name="M19"><b>\\foo</b></a></dt>

<dd>Volume-relative path to a file <b>foo</b> in the root directory
of the current volume. This is not a valid UNC path, so the
assumption is that the extra backslashes are superfluous.</dd>
</dl>
</dd>
</dl>

<h3><a name="M20">TILDE SUBSTITUTION</a></h3>

In addition to the file name rules described above, Tcl also
supports <i>csh</i>-style tilde substitution. If a file name starts
with a tilde, then the file name will be interpreted as if the
first element is replaced with the location of the home directory
for the given user. If the tilde is followed immediately by a
separator, then the <b>$HOME</b> environment variable is
substituted. Otherwise the characters between the tilde and the
next separator are taken as a user name, which is used to retrieve
the user's home directory for substitution. This works on Unix,
MacOS X and Windows (except very old releases). 

<p>Old Windows platforms do not support tilde substitution when a
user name follows the tilde. On these platforms, attempts to use a
tilde followed by a user name will generate an error that the user
does not exist when Tcl attempts to interpret that part of the path
or otherwise access the file. The behaviour of these paths when not
trying to interpret them is the same as on Unix. File names that
have a tilde without a user name will be correctly substituted
using the <b>$HOME</b> environment variable, just like for
Unix.</p>

<h3><a name="M21">PORTABILITY ISSUES</a></h3>

Not all file systems are case sensitive, so scripts should avoid
code that depends on the case of characters in a file name. In
addition, the character sets allowed on different devices may
differ, so scripts should choose file names that do not contain
special characters like: <b>&lt;&gt;:?"/\|</b>. The safest approach
is to use names consisting of alphanumeric characters only. Care
should be taken with filenames which contain spaces (common on
Windows systems) and filenames where the backslash is the directory
separator (Windows native path names). Also Windows 3.1 only
supports file names with a root of no more than 8 characters and an
extension of no more than 3 characters. 

<p>On Windows platforms there are file and path length
restrictions. Complete paths or filenames longer than about 260
characters will lead to errors in most file operations.</p>

<p>Another Windows peculiarity is that any number of trailing dots
&ldquo;.&rdquo; in filenames are totally ignored, so, for example,
attempts to create a file or directory with a name
&ldquo;foo.&rdquo; will result in the creation of a file/directory
with name &ldquo;foo&rdquo;. This fact is reflected in the results
of <b><a href="../TclCmd/file.htm">file normalize</a></b>.
Furthermore, a file name consisting only of dots
&ldquo;.........&rdquo; or dots with trailing characters
&ldquo;.....abc&rdquo; is illegal.</p>

<h3><a name="M22">SEE ALSO</a></h3>

<b><a href="../TclCmd/file.htm">file</a></b>, <b><a href=
"../TclCmd/glob.htm">glob</a></b> 

<h3><a name="M23">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#current directory">current
directory</a>, <a href=
"../Keywords/A.htm#absolute file name">absolute file name</a>, <a
href="../Keywords/R.htm#relative file name">relative file name</a>,
<a href=
"../Keywords/V.htm#volume-relative file name">volume-relative file
name</a>, <a href="../Keywords/P.htm#portability">portability</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1995-1996 Sun Microsystems, Inc.</div>
</body>
</html>

