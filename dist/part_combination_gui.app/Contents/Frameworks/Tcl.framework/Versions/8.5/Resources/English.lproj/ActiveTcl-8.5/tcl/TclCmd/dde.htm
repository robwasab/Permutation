<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Bundled Packages - dde manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> dde</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="dde.htm#M2" name="L272">NAME</a> 

<dl>
<dd>dde - Execute a Dynamic Data Exchange command</dd>
</dl>
</dd>

<dd><a href="dde.htm#M3" name="L273">SYNOPSIS</a> 

<dl>
<dd><b>package require dde 1.3</b></dd>

<dd><b>dde servername</b> ?<b>-force</b>? ?<b>-handler</b>
<i>proc</i>? ?<b>--</b>? ?<i>topic</i>?</dd>

<dd><b>dde execute</b> ?<b>-async</b>? <i>service topic
data</i></dd>

<dd><b>dde poke</b> <i>service topic item data</i></dd>

<dd><b>dde request</b> ?<b>-binary</b>? <i>service topic
item</i></dd>

<dd><b>dde services</b> <i>service topic</i></dd>

<dd><b>dde eval</b> ?<b>-async</b>? <i>topic cmd</i> ?<i>arg arg
...</i>?</dd>
</dl>
</dd>

<dd><a href="dde.htm#M4" name="L274">DESCRIPTION</a></dd>

<dd><a href="dde.htm#M5" name="L275">DDE COMMANDS</a> 

<dl class="dde commands">
<dd><a href="dde.htm#M6" name="L276"><b>dde servername</b>
?<b>-force</b>? ?<b>-handler</b> <i>proc</i>? ?<b>--</b>?
?<i>topic</i>?</a></dd>

<dd><a href="dde.htm#M7" name="L277"><b>dde execute</b>
?<b>-async</b>? <i>service topic data</i></a></dd>

<dd><a href="dde.htm#M8" name="L278"><b>dde poke</b> <i>service
topic item data</i></a></dd>

<dd><a href="dde.htm#M9" name="L279"><b>dde request</b>
?<b>-binary</b>? <i>service topic item</i></a></dd>

<dd><a href="dde.htm#M10" name="L280"><b>dde services</b>
<i>service topic</i></a></dd>

<dd><a href="dde.htm#M11" name="L281"><b>dde eval</b>
?<b>-async</b>? <i>topic cmd</i> ?<i>arg arg ...</i>?</a></dd>
</dl>
</dd>

<dd><a href="dde.htm#M12" name="L282">DDE AND TCL</a></dd>

<dd><a href="dde.htm#M13" name="L283">EXAMPLE</a></dd>

<dd><a href="dde.htm#M14" name="L284">SEE ALSO</a></dd>

<dd><a href="dde.htm#M15" name="L285">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

dde - Execute a Dynamic Data Exchange command 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>package require dde 1.3</b><br>
<b>dde servername</b> ?<b>-force</b>? ?<b>-handler</b> <i>proc</i>?
?<b>--</b>? ?<i>topic</i>?<br>
<b>dde execute</b> ?<b>-async</b>? <i>service topic data</i><br>
<b>dde poke</b> <i>service topic item data</i><br>
<b>dde request</b> ?<b>-binary</b>? <i>service topic item</i><br>
<b>dde services</b> <i>service topic</i><br>
<b>dde eval</b> ?<b>-async</b>? <i>topic cmd</i> ?<i>arg arg
...</i>?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

This command allows an application to send Dynamic Data Exchange
(DDE) command when running under Microsoft Windows. Dynamic Data
Exchange is a mechanism where applications can exchange raw data.
Each DDE transaction needs a <i>service name</i> and a
<i>topic</i>. Both the <i>service name</i> and <i>topic</i> are
application defined; Tcl uses the service name <b>TclEval</b>,
while the topic name is the name of the interpreter given by <b>dde
servername</b>. Other applications have their own <i>service
names</i> and <i>topics</i>. For instance, Microsoft Excel has the
service name <b>Excel</b>. 

<h3><a name="M5">DDE COMMANDS</a></h3>

The following commands are a subset of the full Dynamic Data
Exchange set of commands. 

<dl class="dde commands">
<dt><a name="M6"><b>dde servername</b> ?<b>-force</b>?
?<b>-handler</b> <i>proc</i>? ?<b>--</b>? ?<i>topic</i>?</a></dt>

<dd><b>dde servername</b> registers the interpreter as a DDE server
with the service name <b>TclEval</b> and the topic name specified
by <i>topic</i>. If no <i>topic</i> is given, <b>dde servername</b>
returns the name of the current topic or the empty string if it is
not registered as a service. If the given <i>topic</i> name is
already in use, then a suffix of the form &ldquo; #2&rdquo; or
&ldquo; #3&rdquo; is appended to the name to make it unique. The
command's result will be the name actually used. The <b>-force</b>
option is used to force registration of precisely the given
<i>topic</i> name. 

<p>The <b>-handler</b> option specifies a Tcl procedure that will
be called to process calls to the dde server. If the package has
been loaded into a safe interpreter then a <b>-handler</b>
procedure must be defined. The procedure is called with all the
arguments provided by the remote call.</p>
</dd>

<dt><a name="M7"><b>dde execute</b> ?<b>-async</b>? <i>service
topic data</i></a></dt>

<dd><b>dde execute</b> takes the <i>data</i> and sends it to the
server indicated by <i>service</i> with the topic indicated by
<i>topic</i>. Typically, <i>service</i> is the name of an
application, and <i>topic</i> is a file to work on. The <i>data</i>
field is given to the remote application. Typically, the
application treats the <i>data</i> field as a script, and the
script is run in the application. The <b>-async</b> option requests
asynchronous invocation. The command returns an error message if
the script did not run, unless the <b>-async</b> flag was used, in
which case the command returns immediately with no error.</dd>

<dt><a name="M8"><b>dde poke</b> <i>service topic item
data</i></a></dt>

<dd><b>dde poke</b> passes the <i>data</i> to the server indicated
by <i>service</i> using the <i>topic</i> and <i>item</i> specified.
Typically, <i>service</i> is the name of an application.
<i>topic</i> is application specific but can be a command to the
server or the name of a file to work on. The <i>item</i> is also
application specific and is often not used, but it must always be
non-null. The <i>data</i> field is given to the remote
application.</dd>

<dt><a name="M9"><b>dde request</b> ?<b>-binary</b>? <i>service
topic item</i></a></dt>

<dd><b>dde request</b> is typically used to get the value of
something; the value of a cell in Microsoft Excel or the text of a
selection in Microsoft Word. <i>service</i> is typically the name
of an application, <i>topic</i> is typically the name of the file,
and <i>item</i> is application-specific. The command returns the
value of <i>item</i> as defined in the application. Normally this
is interpreted to be a string with terminating null. If
<b>-binary</b> is specified, the result is returned as a byte
array.</dd>

<dt><a name="M10"><b>dde services</b> <i>service topic</i></a></dt>

<dd><b>dde services</b> returns a list of service-topic pairs that
currently exist on the machine. If <i>service</i> and <i>topic</i>
are both empty strings ({}), then all service-topic pairs currently
available on the system are returned. If <i>service</i> is empty
and <i>topic</i> is not, then all services with the specified topic
are returned. If <i>service</i> is non-empty and <i>topic</i> is,
all topics for a given service are returned. If both are non-empty,
if that service-topic pair currently exists, it is returned;
otherwise, an empty string is returned.</dd>

<dt><a name="M11"><b>dde eval</b> ?<b>-async</b>? <i>topic cmd</i>
?<i>arg arg ...</i>?</a></dt>

<dd><b>dde eval</b> evaluates a command and its arguments using the
interpreter specified by <i>topic</i>. The DDE service must be the
<b>TclEval</b> service. The <b>-async</b> option requests
asynchronous invocation. The command returns an error message if
the script did not run, unless the <b>-async</b> flag was used, in
which case the command returns immediately with no error. This
command can be used to replace send on Windows.</dd>
</dl>

<h3><a name="M12">DDE AND TCL</a></h3>

A Tcl interpreter always has a service name of <b>TclEval</b>. Each
different interpreter of all running Tcl applications must be given
a unique name specified by <b>dde servername</b>. Each interp is
available as a DDE topic only if the <b>dde servername</b> command
was used to set the name of the topic for each interp. So a <b>dde
services TclEval {}</b> command will return a list of service-topic
pairs, where each of the currently running interps will be a topic.


<p>When Tcl processes a <b>dde execute</b> command, the data for
the execute is run as a script in the interp named by the topic of
the <b>dde execute</b> command.</p>

<p>When Tcl processes a <b>dde request</b> command, it returns the
value of the variable given in the dde command in the context of
the interp named by the dde topic. Tcl reserves the variable
<b>$TCLEVAL$EXECUTE$RESULT</b> for internal use, and <b>dde
request</b> commands for that variable will give unpredictable
results.</p>

<p>An external application which wishes to run a script in Tcl
should have that script store its result in a variable, run the
<b>dde execute</b> command, and then run <b>dde request</b> to get
the value of the variable.</p>

<p>When using DDE, be careful to ensure that the event queue is
flushed using either <b><a href=
"../TclCmd/update.htm">update</a></b> or <b><a href=
"../TclCmd/vwait.htm">vwait</a></b>. This happens by default when
using <b><a href="../UserCmd/wish.htm">wish</a></b> unless a
blocking command is called (such as <b><a href=
"../TclCmd/exec.htm">exec</a></b> without adding the <b>&amp;</b>
to place the process in the background). If for any reason the
event queue is not flushed, DDE commands may hang until the event
queue is flushed. This can create a deadlock situation.</p>

<h3><a name="M13">EXAMPLE</a></h3>

This asks Internet Explorer (which must already be running) to go
to a particularly important website: 

<pre>
package require dde
<b>dde execute</b> -async iexplore WWW_OpenURL http://www.tcl.tk/
</pre>

<h3><a name="M14">SEE ALSO</a></h3>

<b><a href="../TkCmd/tk.htm">tk</a></b>, <b><a href=
"../TkCmd/winfo.htm">winfo</a></b>, <b><a href=
"../TkCmd/send.htm">send</a></b> 

<h3><a name="M15">KEYWORDS</a></h3>

<a href="../Keywords/A.htm#application">application</a>, <a href=
"../Keywords/D.htm#dde">dde</a>, <a href=
"../Keywords/N.htm#name">name</a>, <a href=
"../Keywords/R.htm#remote execution">remote execution</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1997 Sun Microsystems, Inc. Copyright &copy; 2001
ActiveState Corporation.</div>
</body>
</html>

