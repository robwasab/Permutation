<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - string manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> string</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="string.htm#M2" name="L1527">NAME</a> 

<dl>
<dd>string - Manipulate strings</dd>
</dl>
</dd>

<dd><a href="string.htm#M3" name="L1528">SYNOPSIS</a> 

<dl>
<dd><b>string</b> <i>option arg</i> ?<i>arg ...?</i></dd>
</dl>
</dd>

<dd><a href="string.htm#M4" name="L1529">DESCRIPTION</a> 

<dl class="description">
<dd><a href="string.htm#M5" name="L1530"><b>string bytelength</b>
<i>string</i></a></dd>

<dd><a href="string.htm#M6" name="L1531"><b>string compare</b>
?<b>-nocase</b>? ?<b>-length int</b>? <i>string1
string2</i></a></dd>

<dd><a href="string.htm#M7" name="L1532"><b>string equal</b>
?<b>-nocase</b>? ?<b>-length int</b>? <i>string1
string2</i></a></dd>

<dd><a href="string.htm#M8" name="L1533"><b>string first</b>
<i>needleString haystackString</i> ?<i>startIndex</i>?</a></dd>

<dd><a href="string.htm#M9" name="L1534"><b>string index</b>
<i>string charIndex</i></a> 

<dl class="description">
<dd><a href="string.htm#M10" name="L1535"><i>integer</i></a></dd>

<dd><a href="string.htm#M11" name="L1536"><b>end</b></a></dd>

<dd><a href="string.htm#M12" name=
"L1537"><b>end</b>-<i>N</i></a></dd>

<dd><a href="string.htm#M13" name=
"L1538"><b>end</b>+<i>N</i></a></dd>

<dd><a href="string.htm#M14" name=
"L1539"><i>M</i>+<i>N</i></a></dd>

<dd><a href="string.htm#M15" name=
"L1540"><i>M</i>-<i>N</i></a></dd>
</dl>
</dd>

<dd><a href="string.htm#M16" name="L1541"><b>string is</b>
<i>class</i> ?<b>-strict</b>? ?<b>-failindex</b> <i>varname</i>?
<i>string</i></a> 

<dl class="description">
<dd><a href="string.htm#M17" name="L1542"><b>alnum</b></a></dd>

<dd><a href="string.htm#M18" name="L1543"><b>alpha</b></a></dd>

<dd><a href="string.htm#M19" name="L1544"><b>ascii</b></a></dd>

<dd><a href="string.htm#M20" name="L1545"><b>boolean</b></a></dd>

<dd><a href="string.htm#M21" name="L1546"><b>control</b></a></dd>

<dd><a href="string.htm#M22" name="L1547"><b>digit</b></a></dd>

<dd><a href="string.htm#M23" name="L1548"><b>double</b></a></dd>

<dd><a href="string.htm#M24" name="L1549"><b>false</b></a></dd>

<dd><a href="string.htm#M25" name="L1550"><b>graph</b></a></dd>

<dd><a href="string.htm#M26" name="L1551"><b>integer</b></a></dd>

<dd><a href="string.htm#M27" name="L1552"><b>list</b></a></dd>

<dd><a href="string.htm#M28" name="L1553"><b>lower</b></a></dd>

<dd><a href="string.htm#M29" name="L1554"><b>print</b></a></dd>

<dd><a href="string.htm#M30" name="L1555"><b>punct</b></a></dd>

<dd><a href="string.htm#M31" name="L1556"><b>space</b></a></dd>

<dd><a href="string.htm#M32" name="L1557"><b>true</b></a></dd>

<dd><a href="string.htm#M33" name="L1558"><b>upper</b></a></dd>

<dd><a href="string.htm#M34" name=
"L1559"><b>wideinteger</b></a></dd>

<dd><a href="string.htm#M35" name="L1560"><b>wordchar</b></a></dd>

<dd><a href="string.htm#M36" name="L1561"><b>xdigit</b></a></dd>
</dl>
</dd>

<dd><a href="string.htm#M37" name="L1562"><b>string last</b>
<i>needleString haystackString</i> ?<i>lastIndex</i>?</a></dd>

<dd><a href="string.htm#M38" name="L1563"><b>string length</b>
<i>string</i></a></dd>

<dd><a href="string.htm#M39" name="L1564"><b>string map</b>
?<b>-nocase</b>? <i>mapping string</i></a></dd>

<dd><a href="string.htm#M40" name="L1565"><b>string match</b>
?<b>-nocase</b>? <i>pattern</i> <i>string</i></a> 

<dl class="description">
<dd><a href="string.htm#M41" name="L1566"><b>*</b></a></dd>

<dd><a href="string.htm#M42" name="L1567"><b>?</b></a></dd>

<dd><a href="string.htm#M43" name=
"L1568"><b>[</b><i>chars</i><b>]</b></a></dd>

<dd><a href="string.htm#M44" name="L1569"><b>\</b><i>x</i></a></dd>
</dl>
</dd>

<dd><a href="string.htm#M45" name="L1570"><b>string range</b>
<i>string first last</i></a></dd>

<dd><a href="string.htm#M46" name="L1571"><b>string repeat</b>
<i>string count</i></a></dd>

<dd><a href="string.htm#M47" name="L1572"><b>string replace</b>
<i>string first last</i> ?<i>newstring</i>?</a></dd>

<dd><a href="string.htm#M48" name="L1573"><b>string reverse</b>
<i>string</i></a></dd>

<dd><a href="string.htm#M49" name="L1574"><b>string tolower</b>
<i>string</i> ?<i>first</i>? ?<i>last</i>?</a></dd>

<dd><a href="string.htm#M50" name="L1575"><b>string totitle</b>
<i>string</i> ?<i>first</i>? ?<i>last</i>?</a></dd>

<dd><a href="string.htm#M51" name="L1576"><b>string toupper</b>
<i>string</i> ?<i>first</i>? ?<i>last</i>?</a></dd>

<dd><a href="string.htm#M52" name="L1577"><b>string trim</b>
<i>string</i> ?<i>chars</i>?</a></dd>

<dd><a href="string.htm#M53" name="L1578"><b>string trimleft</b>
<i>string</i> ?<i>chars</i>?</a></dd>

<dd><a href="string.htm#M54" name="L1579"><b>string trimright</b>
<i>string</i> ?<i>chars</i>?</a></dd>

<dd><a href="string.htm#M55" name="L1580"><b>string wordend</b>
<i>string charIndex</i></a></dd>

<dd><a href="string.htm#M56" name="L1581"><b>string wordstart</b>
<i>string charIndex</i></a></dd>
</dl>
</dd>

<dd><a href="string.htm#M57" name="L1582">EXAMPLE</a></dd>

<dd><a href="string.htm#M58" name="L1583">SEE ALSO</a></dd>

<dd><a href="string.htm#M59" name="L1584">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

string - Manipulate strings 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>string</b> <i>option arg</i> ?<i>arg ...?</i><br>
<h3><a name="M4">DESCRIPTION</a></h3>

Performs one of several string operations, depending on
<i>option</i>. The legal <i>option</i>s (which may be abbreviated)
are: 

<dl class="description">
<dt><a name="M5"><b>string bytelength</b> <i>string</i></a></dt>

<dd>Returns a decimal string giving the number of bytes used to
represent <i>string</i> in memory. Because UTF-8 uses one to three
bytes to represent Unicode characters, the byte length will not be
the same as the character length in general. The cases where a
script cares about the byte length are rare. In almost all cases,
you should use the <b>string length</b> operation (including
determining the length of a Tcl ByteArray object). Refer to the
<b><a href="../TclLib/Utf.htm">Tcl_NumUtfChars</a></b> manual entry
for more details on the UTF-8 representation.</dd>

<dt><a name="M6"><b>string compare</b> ?<b>-nocase</b>? ?<b>-length
int</b>? <i>string1 string2</i></a></dt>

<dd>Perform a character-by-character comparison of strings
<i>string1</i> and <i>string2</i>. Returns -1, 0, or 1, depending
on whether <i>string1</i> is lexicographically less than, equal to,
or greater than <i>string2</i>. If <b>-length</b> is specified,
then only the first <i>length</i> characters are used in the
comparison. If <b>-length</b> is negative, it is ignored. If
<b>-nocase</b> is specified, then the strings are compared in a
case-insensitive manner.</dd>

<dt><a name="M7"><b>string equal</b> ?<b>-nocase</b>? ?<b>-length
int</b>? <i>string1 string2</i></a></dt>

<dd>Perform a character-by-character comparison of strings
<i>string1</i> and <i>string2</i>. Returns 1 if <i>string1</i> and
<i>string2</i> are identical, or 0 when not. If <b>-length</b> is
specified, then only the first <i>length</i> characters are used in
the comparison. If <b>-length</b> is negative, it is ignored. If
<b>-nocase</b> is specified, then the strings are compared in a
case-insensitive manner.</dd>

<dt><a name="M8"><b>string first</b> <i>needleString
haystackString</i> ?<i>startIndex</i>?</a></dt>

<dd>Search <i>haystackString</i> for a sequence of characters that
exactly match the characters in <i>needleString</i>. If found,
return the index of the first character in the first such match
within <i>haystackString</i>. If not found, return -1. If
<i>startIndex</i> is specified (in any of the forms accepted by the
<b>index</b> method), then the search is constrained to start with
the character in <i>haystackString</i> specified by the index. For
example, 

<pre>
<b>string first a 0a23456789abcdef 5</b>
</pre>

will return <b>10</b>, but 

<pre>
<b>string first a 0123456789abcdef 11</b>
</pre>

will return <b>-1</b>.</dd>

<dt><a name="M9"><b>string index</b> <i>string
charIndex</i></a></dt>

<dd>Returns the <i>charIndex</i>'th character of the <i>string</i>
argument. A <i>charIndex</i> of 0 corresponds to the first
character of the string. <i>charIndex</i> may be specified as
follows: 

<dl class="description">
<dt><a name="M10"><i>integer</i></a></dt>

<dd>For any index value that passes <b>string is integer
-strict</b>, the char specified at this integral index (e.g.
<b>2</b> would refer to the &ldquo;c&rdquo; in
&ldquo;abcd&rdquo;).</dd>

<dt><a name="M11"><b>end</b></a></dt>

<dd>The last char of the string (e.g. <b>end</b> would refer to the
&ldquo;d&rdquo; in &ldquo;abcd&rdquo;).</dd>

<dt><a name="M12"><b>end</b>-<i>N</i></a></dt>

<dd>The last char of the string minus the specified integer offset
<i>N</i> (e.g. <b>end</b>-1 would refer to the &ldquo;c&rdquo; in
&ldquo;abcd&rdquo;).</dd>

<dt><a name="M13"><b>end</b>+<i>N</i></a></dt>

<dd>The last char of the string plus the specified integer offset
<i>N</i> (e.g. <b>end</b>+-1 would refer to the &ldquo;c&rdquo; in
&ldquo;abcd&rdquo;).</dd>

<dt><a name="M14"><i>M</i>+<i>N</i></a></dt>

<dd>The char specified at the integral index that is the sum of
integer values <i>M</i> and <i>N</i> (e.g. <b>1+1</b> would refer
to the &ldquo;c&rdquo; in &ldquo;abcd&rdquo;).</dd>

<dt><a name="M15"><i>M</i>-<i>N</i></a></dt>

<dd>The char specified at the integral index that is the difference
of integer values <i>M</i> and <i>N</i> (e.g. <b>2-1</b> would
refer to the &ldquo;b&rdquo; in &ldquo;abcd&rdquo;).</dd>
</dl>

<dl>
<dd>
<p>In the specifications above, the integer value <i>M</i> contains
no trailing whitespace and the integer value <i>N</i> contains no
leading whitespace.</p>

<p>If <i>charIndex</i> is less than 0 or greater than or equal to
the length of the string then this command returns an empty
string.</p>
</dd>
</dl>
</dd>

<dt><a name="M16"><b>string is</b> <i>class</i> ?<b>-strict</b>?
?<b>-failindex</b> <i>varname</i>? <i>string</i></a></dt>

<dd>Returns 1 if <i>string</i> is a valid member of the specified
character class, otherwise returns 0. If <b>-strict</b> is
specified, then an empty string returns 0, otherwise an empty
string will return 1 on any class. If <b>-failindex</b> is
specified, then if the function returns 0, the index in the string
where the class was no longer valid will be stored in the variable
named <i>varname</i>. The <i>varname</i> will not be set if the
function returns 1. The following character classes are recognized
(the class name can be abbreviated): 

<dl class="description">
<dt><a name="M17"><b>alnum</b></a></dt>

<dd>Any Unicode alphabet or digit character.</dd>

<dt><a name="M18"><b>alpha</b></a></dt>

<dd>Any Unicode alphabet character.</dd>

<dt><a name="M19"><b>ascii</b></a></dt>

<dd>Any character with a value less than \u0080 (those that are in
the 7-bit ascii range).</dd>

<dt><a name="M20"><b>boolean</b></a></dt>

<dd>Any of the forms allowed to <b><a href=
"../TclLib/GetInt.htm">Tcl_GetBoolean</a></b>.</dd>

<dt><a name="M21"><b>control</b></a></dt>

<dd>Any Unicode control character.</dd>

<dt><a name="M22"><b>digit</b></a></dt>

<dd>Any Unicode digit character. Note that this includes characters
outside of the [0-9] range.</dd>

<dt><a name="M23"><b>double</b></a></dt>

<dd>Any of the valid forms for a double in Tcl, with optional
surrounding whitespace. In case of under/overflow in the value, 0
is returned and the <i>varname</i> will contain -1.</dd>

<dt><a name="M24"><b>false</b></a></dt>

<dd>Any of the forms allowed to <b><a href=
"../TclLib/GetInt.htm">Tcl_GetBoolean</a></b> where the value is
false.</dd>

<dt><a name="M25"><b>graph</b></a></dt>

<dd>Any Unicode printing character, except space.</dd>

<dt><a name="M26"><b>integer</b></a></dt>

<dd>Any of the valid string formats for a 32-bit integer value in
Tcl, with optional surrounding whitespace. In case of
under/overflow in the value, 0 is returned and the <i>varname</i>
will contain -1.</dd>

<dt><a name="M27"><b>list</b></a></dt>

<dd>Any proper list structure, with optional surrounding
whitespace. In case of improper list structure, 0 is returned and
the <i>varname</i> will contain the index of the
&ldquo;element&rdquo; where the list parsing fails, or -1 if this
cannot be determined.</dd>

<dt><a name="M28"><b>lower</b></a></dt>

<dd>Any Unicode lower case alphabet character.</dd>

<dt><a name="M29"><b>print</b></a></dt>

<dd>Any Unicode printing character, including space.</dd>

<dt><a name="M30"><b>punct</b></a></dt>

<dd>Any Unicode punctuation character.</dd>

<dt><a name="M31"><b>space</b></a></dt>

<dd>Any Unicode space character.</dd>

<dt><a name="M32"><b>true</b></a></dt>

<dd>Any of the forms allowed to <b><a href=
"../TclLib/GetInt.htm">Tcl_GetBoolean</a></b> where the value is
true.</dd>

<dt><a name="M33"><b>upper</b></a></dt>

<dd>Any upper case alphabet character in the Unicode character
set.</dd>

<dt><a name="M34"><b>wideinteger</b></a></dt>

<dd>Any of the valid forms for a wide integer in Tcl, with optional
surrounding whitespace. In case of under/overflow in the value, 0
is returned and the <i>varname</i> will contain -1.</dd>

<dt><a name="M35"><b>wordchar</b></a></dt>

<dd>Any Unicode word character. That is any alphanumeric character,
and any Unicode connector punctuation characters (e.g.
underscore).</dd>

<dt><a name="M36"><b>xdigit</b></a></dt>

<dd>Any hexadecimal digit character ([0-9A-Fa-f]).</dd>
</dl>

<p>In the case of <b>boolean</b>, <b>true</b> and <b>false</b>, if
the function will return 0, then the <i>varname</i> will always be
set to 0, due to the varied nature of a valid boolean value.</p>
</dd>

<dt><a name="M37"><b>string last</b> <i>needleString
haystackString</i> ?<i>lastIndex</i>?</a></dt>

<dd>Search <i>haystackString</i> for a sequence of characters that
exactly match the characters in <i>needleString</i>. If found,
return the index of the first character in the last such match
within <i>haystackString</i>. If there is no match, then return -1.
If <i>lastIndex</i> is specified (in any of the forms accepted by
the <b>index</b> method), then only the characters in
<i>haystackString</i> at or before the specified <i>lastIndex</i>
will be considered by the search. For example, 

<pre>
<b>string last a 0a23456789abcdef 15</b>
</pre>

will return <b>10</b>, but 

<pre>
<b>string last a 0a23456789abcdef 9</b>
</pre>

will return <b>1</b>.</dd>

<dt><a name="M38"><b>string length</b> <i>string</i></a></dt>

<dd>Returns a decimal string giving the number of characters in
<i>string</i>. Note that this is not necessarily the same as the
number of bytes used to store the string. If the object is a
ByteArray object (such as those returned from reading a binary
encoded channel), then this will return the actual byte length of
the object.</dd>

<dt><a name="M39"><b>string map</b> ?<b>-nocase</b>? <i>mapping
string</i></a></dt>

<dd>Replaces substrings in <i>string</i> based on the key-value
pairs in <i>mapping</i>. <i>mapping</i> is a list of <i>key value
key value ...</i> as in the form returned by <b><a href=
"../TclCmd/array.htm">array get</a></b>. Each instance of a key in
the string will be replaced with its corresponding value. If
<b>-nocase</b> is specified, then matching is done without regard
to case differences. Both <i>key</i> and <i>value</i> may be
multiple characters. Replacement is done in an ordered manner, so
the key appearing first in the list will be checked first, and so
on. <i>string</i> is only iterated over once, so earlier key
replacements will have no affect for later key matches. For
example, 

<pre>
<b>string map {abc 1 ab 2 a 3 1 0} 1abcaababcabababc</b>
</pre>

will return the string <b>01321221</b>. 

<p>Note that if an earlier <i>key</i> is a prefix of a later one,
it will completely mask the later one. So if the previous example
is reordered like this,</p>

<pre>
<b>string map {1 0 ab 2 a 3 abc 1} 1abcaababcabababc</b>
</pre>

it will return the string <b>02c322c222c</b>.</dd>

<dt><a name="M40"><b>string match</b> ?<b>-nocase</b>?
<i>pattern</i> <i>string</i></a></dt>

<dd>See if <i>pattern</i> matches <i>string</i>; return 1 if it
does, 0 if it does not. If <b>-nocase</b> is specified, then the
pattern attempts to match against the string in a case insensitive
manner. For the two strings to match, their contents must be
identical except that the following special sequences may appear in
<i>pattern</i>: 

<dl class="description">
<dt><a name="M41"><b>*</b></a></dt>

<dd>Matches any sequence of characters in <i>string</i>, including
a null string.</dd>

<dt><a name="M42"><b>?</b></a></dt>

<dd>Matches any single character in <i>string</i>.</dd>

<dt><a name="M43"><b>[</b><i>chars</i><b>]</b></a></dt>

<dd>Matches any character in the set given by <i>chars</i>. If a
sequence of the form <i>x</i><b>-</b><i>y</i> appears in
<i>chars</i>, then any character between <i>x</i> and <i>y</i>,
inclusive, will match. When used with <b>-nocase</b>, the end
points of the range are converted to lower case first. Whereas
{[A-z]} matches &ldquo;_&rdquo; when matching case-sensitively
(since &ldquo;_&rdquo; falls between the &ldquo;Z&rdquo; and
&ldquo;a&rdquo;), with <b>-nocase</b> this is considered like
{[A-Za-z]} (and probably what was meant in the first place).</dd>

<dt><a name="M44"><b>\</b><i>x</i></a></dt>

<dd>Matches the single character <i>x</i>. This provides a way of
avoiding the special interpretation of the characters <b>*?[]\</b>
in <i>pattern</i>.</dd>
</dl>
</dd>

<dt><a name="M45"><b>string range</b> <i>string first
last</i></a></dt>

<dd>Returns a range of consecutive characters from <i>string</i>,
starting with the character whose index is <i>first</i> and ending
with the character whose index is <i>last</i>. An index of 0 refers
to the first character of the string. <i>first</i> and <i>last</i>
may be specified as for the <b>index</b> method. If <i>first</i> is
less than zero then it is treated as if it were zero, and if
<i>last</i> is greater than or equal to the length of the string
then it is treated as if it were <b>end</b>. If <i>first</i> is
greater than <i>last</i> then an empty string is returned.</dd>

<dt><a name="M46"><b>string repeat</b> <i>string count</i></a></dt>

<dd>Returns <i>string</i> repeated <i>count</i> number of
times.</dd>

<dt><a name="M47"><b>string replace</b> <i>string first last</i>
?<i>newstring</i>?</a></dt>

<dd>Removes a range of consecutive characters from <i>string</i>,
starting with the character whose index is <i>first</i> and ending
with the character whose index is <i>last</i>. An index of 0 refers
to the first character of the string. <i>First</i> and <i>last</i>
may be specified as for the <b>index</b> method. If
<i>newstring</i> is specified, then it is placed in the removed
character range. If <i>first</i> is less than zero then it is
treated as if it were zero, and if <i>last</i> is greater than or
equal to the length of the string then it is treated as if it were
<b>end</b>. If <i>first</i> is greater than <i>last</i> or the
length of the initial string, or <i>last</i> is less than 0, then
the initial string is returned untouched.</dd>

<dt><a name="M48"><b>string reverse</b> <i>string</i></a></dt>

<dd>Returns a string that is the same length as <i>string</i> but
with its characters in the reverse order.</dd>

<dt><a name="M49"><b>string tolower</b> <i>string</i>
?<i>first</i>? ?<i>last</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that all upper
(or title) case letters have been converted to lower case. If
<i>first</i> is specified, it refers to the first char index in the
string to start modifying. If <i>last</i> is specified, it refers
to the char index in the string to stop at (inclusive).
<i>first</i> and <i>last</i> may be specified as for the
<b>index</b> method.</dd>

<dt><a name="M50"><b>string totitle</b> <i>string</i>
?<i>first</i>? ?<i>last</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that the first
character in <i>string</i> is converted to its Unicode title case
variant (or upper case if there is no title case variant) and the
rest of the string is converted to lower case. If <i>first</i> is
specified, it refers to the first char index in the string to start
modifying. If <i>last</i> is specified, it refers to the char index
in the string to stop at (inclusive). <i>first</i> and <i>last</i>
may be specified as for the <b>index</b> method.</dd>

<dt><a name="M51"><b>string toupper</b> <i>string</i>
?<i>first</i>? ?<i>last</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that all lower
(or title) case letters have been converted to upper case. If
<i>first</i> is specified, it refers to the first char index in the
string to start modifying. If <i>last</i> is specified, it refers
to the char index in the string to stop at (inclusive).
<i>first</i> and <i>last</i> may be specified as for the
<b>index</b> method.</dd>

<dt><a name="M52"><b>string trim</b> <i>string</i>
?<i>chars</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that any leading
or trailing characters present in the string given by <i>chars</i>
are removed. If <i>chars</i> is not specified then white space is
removed (spaces, tabs, newlines, and carriage returns).</dd>

<dt><a name="M53"><b>string trimleft</b> <i>string</i>
?<i>chars</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that any leading
characters present in the string given by <i>chars</i> are removed.
If <i>chars</i> is not specified then white space is removed
(spaces, tabs, newlines, and carriage returns).</dd>

<dt><a name="M54"><b>string trimright</b> <i>string</i>
?<i>chars</i>?</a></dt>

<dd>Returns a value equal to <i>string</i> except that any trailing
characters present in the string given by <i>chars</i> are removed.
If <i>chars</i> is not specified then white space is removed
(spaces, tabs, newlines, and carriage returns).</dd>

<dt><a name="M55"><b>string wordend</b> <i>string
charIndex</i></a></dt>

<dd>Returns the index of the character just after the last one in
the word containing character <i>charIndex</i> of <i>string</i>.
<i>charIndex</i> may be specified as for the <b>index</b> method. A
word is considered to be any contiguous range of alphanumeric
(Unicode letters or decimal digits) or underscore (Unicode
connector punctuation) characters, or any single character other
than these.</dd>

<dt><a name="M56"><b>string wordstart</b> <i>string
charIndex</i></a></dt>

<dd>Returns the index of the first character in the word containing
character <i>charIndex</i> of <i>string</i>. <i>charIndex</i> may
be specified as for the <b>index</b> method. A word is considered
to be any contiguous range of alphanumeric (Unicode letters or
decimal digits) or underscore (Unicode connector punctuation)
characters, or any single character other than these.</dd>
</dl>

<h3><a name="M57">EXAMPLE</a></h3>

Test if the string in the variable <i>string</i> is a proper
non-empty prefix of the string <b>foobar</b>. 

<pre>
set length [<b>string length</b> $string]
if {$length == 0} {
   set isPrefix 0
} else {
   set isPrefix [<b>string equal</b> -length $length $string "foobar"]
}
</pre>

<h3><a name="M58">SEE ALSO</a></h3>

<b><a href="../TclCmd/expr.htm">expr</a></b>, <b><a href=
"../TclCmd/list.htm">list</a></b> 

<h3><a name="M59">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#case conversion">case conversion</a>, <a
href="../Keywords/C.htm#compare">compare</a>, <a href=
"../Keywords/I.htm#index">index</a>, <a href=
"../Keywords/M.htm#match">match</a>, <a href=
"../Keywords/P.htm#pattern">pattern</a>, <a href=
"../Keywords/S.htm#string">string</a>, <a href=
"../Keywords/W.htm#word">word</a>, <a href=
"../Keywords/E.htm#equal">equal</a>, <a href=
"../Keywords/C.htm#ctype">ctype</a>, <a href=
"../Keywords/C.htm#character">character</a>, <a href=
"../Keywords/R.htm#reverse">reverse</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow
Jr.</div>
</body>
</html>

