<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Library Procedures - Tk_CreateEventHandler manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> EventHndlr</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tk_CreateEventHandler, Tk_DeleteEventHandler - associate procedure
callback with an X event 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
<b>Tk_CreateEventHandler</b>(<i>tkwin, mask, proc,
clientData</i>)<br>
<b>Tk_DeleteEventHandler</b>(<i>tkwin, mask, proc,
clientData</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>Tk_Window <b>tkwin</b> (in)</dt>

<dd>Token for window in which events may occur.</dd>

<dt>unsigned long <b>mask</b> (in)</dt>

<dd>Bit-mask of events (such as <b>ButtonPressMask</b>) for which
<i>proc</i> should be called.</dd>

<dt>Tk_EventProc <b>*proc</b> (in)</dt>

<dd>Procedure to invoke whenever an event in <i>mask</i> occurs in
the window given by <i>tkwin</i>.</dd>

<dt>ClientData <b>clientData</b> (in)</dt>

<dd>Arbitrary one-word value to pass to <i>proc</i>.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<b>Tk_CreateEventHandler</b> arranges for <i>proc</i> to be invoked
in the future whenever one of the event types specified by
<i>mask</i> occurs in the window specified by <i>tkwin</i>. The
callback to <i>proc</i> will be made by <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b>; this mechanism
only works in programs that dispatch events through <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b> (or through other
Tk procedures that call <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b>, such as
<b>Tk_DoOneEvent</b> or <b><a href=
"../TkLib/MainLoop.htm">Tk_MainLoop</a></b>). 

<p><i>Proc</i> should have arguments and result that match the type
<b>Tk_EventProc</b>:</p>

<pre>
typedef void Tk_EventProc(
    ClientData <i>clientData</i>,
    XEvent *<i>eventPtr</i>);
</pre>

The <i>clientData</i> parameter to <i>proc</i> is a copy of the
<i>clientData</i> argument given to <b>Tk_CreateEventHandler</b>
when the callback was created. Typically, <i>clientData</i> points
to a data structure containing application-specific information
about the window in which the event occurred. <i>EventPtr</i> is a
pointer to the X event, which will be one of the ones specified in
the <i>mask</i> argument to <b>Tk_CreateEventHandler</b>. 

<p><b>Tk_DeleteEventHandler</b> may be called to delete a
previously-created event handler: it deletes the first handler it
finds that is associated with <i>tkwin</i> and matches the
<i>mask</i>, <i>proc</i>, and <i>clientData</i> arguments. If no
such handler exists, then <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b> returns without
doing anything. Although Tk supports it, it's probably a bad idea
to have more than one callback with the same <i>mask</i>,
<i>proc</i>, and <i>clientData</i> arguments. When a window is
deleted all of its handlers will be deleted automatically; in this
case there is no need to call <b>Tk_DeleteEventHandler</b>.</p>

<p>If multiple handlers are declared for the same type of X event
on the same window, then the handlers will be invoked in the order
they were created.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/B.htm#bind">bind</a>, <a href=
"../Keywords/C.htm#callback">callback</a>, <a href=
"../Keywords/E.htm#event">event</a>, <a href=
"../Keywords/H.htm#handler">handler</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990 The Regents of the University of California.
Copyright &copy; 1994-1996 Sun Microsystems, Inc.</div>
</body>
</html>

