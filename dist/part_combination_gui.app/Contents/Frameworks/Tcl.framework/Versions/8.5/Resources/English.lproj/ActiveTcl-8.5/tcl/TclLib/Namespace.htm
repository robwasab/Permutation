<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_Namespace manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> Namespace</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_AppendExportList, Tcl_CreateNamespace, Tcl_DeleteNamespace,
Tcl_Export, Tcl_FindCommand, Tcl_FindNamespace, Tcl_ForgetImport,
Tcl_GetCurrentNamespace, Tcl_GetGlobalNamespace,
Tcl_GetNamespaceUnknownHandler, Tcl_Import,
Tcl_SetNamespaceUnknownHandler - manipulate namespaces 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
Tcl_Namespace *<br>
<b>Tcl_CreateNamespace</b>(<i>interp, name, clientData,
deleteProc</i>)<br>
<b>Tcl_DeleteNamespace</b>(<i>nsPtr</i>)<br>
int<br>
<b>Tcl_AppendExportList</b>(<i>interp, nsPtr, objPtr</i>)<br>
int<br>
<b>Tcl_Export</b>(<i>interp, nsPtr, pattern,
resetListFirst</i>)<br>
int<br>
<b>Tcl_Import</b>(<i>interp, nsPtr, pattern,
allowOverwrite</i>)<br>
int<br>
<b>Tcl_ForgetImport</b>(<i>interp, nsPtr, pattern</i>)<br>
Tcl_Namespace *<br>
<b>Tcl_GetCurrentNamespace</b>(<i>interp</i>)<br>
Tcl_Namespace *<br>
<b>Tcl_GetGlobalNamespace</b>(<i>interp</i>)<br>
Tcl_Namespace *<br>
<b>Tcl_FindNamespace</b>(<i>interp, name, contextNsPtr,
flags</i>)<br>
Tcl_Command<br>
<b>Tcl_FindCommand</b>(<i>interp, name, contextNsPtr,
flags</i>)<br>
Tcl_Obj *<br>
<b>Tcl_GetNamespaceUnknownHandler(</b><i>interp, nsPtr</i>)<br>
int<br>
<b>Tcl_SetNamespaceUnknownHandler(</b><i>interp, nsPtr,
handlerPtr</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in/out)</dt>

<dd>The interpreter in which the namespace exists and where name
lookups are performed. Also where error result messages are
written.</dd>

<dt>const char <b>*name</b> (in)</dt>

<dd>The name of the namespace or command to be created or
accessed.</dd>

<dt>ClientData <b>clientData</b> (in)</dt>

<dd>A context pointer by the creator of the namespace. Not
interpreted by Tcl at all.</dd>

<dt>Tcl_NamespaceDeleteProc <b>*deleteProc</b> (in)</dt>

<dd>A pointer to function to call when the namespace is deleted, or
NULL if no such callback is to be performed.</dd>

<dt>Tcl_Namespace <b>*nsPtr</b> (in)</dt>

<dd>The namespace to be manipulated, or NULL (for other than
<b>Tcl_DeleteNamespace</b>) to manipulate the current
namespace.</dd>

<dt>Tcl_Obj <b>*objPtr</b> (out)</dt>

<dd>A reference to an unshared object to which the function output
will be written.</dd>

<dt>const char <b>*pattern</b> (in)</dt>

<dd>The glob-style pattern (see <b><a href=
"../TclLib/StrMatch.htm">Tcl_StringMatch</a></b>) that describes
the commands to be imported or exported.</dd>

<dt>int <b>resetListFirst</b> (in)</dt>

<dd>Whether the list of export patterns should be reset before
adding the current pattern to it.</dd>

<dt>int <b>allowOverwrite</b> (in)</dt>

<dd>Whether new commands created by this import action can
overwrite existing commands.</dd>

<dt>Tcl_Namespace <b>*contextNsPtr</b> (in)</dt>

<dd>The location in the namespace hierarchy where the search for a
namespace or command should be conducted relative to when the
search term is not rooted at the global namespace. NULL indicates
the current namespace.</dd>

<dt>int <b>flags</b> (in)</dt>

<dd>OR-ed combination of bits controlling how the search is to be
performed. The following flags are supported:
<b>TCL_GLOBAL_ONLY</b> (indicates that the search is always to be
conducted relative to the global namespace),
<b>TCL_NAMESPACE_ONLY</b> (just for <b>Tcl_FindCommand</b>;
indicates that the search is always to be conducted relative to the
context namespace), and <b>TCL_LEAVE_ERR_MSG</b> (indicates that an
error message should be left in the interpreter if the search
fails.)</dd>

<dt>Tcl_Obj <b>*handlerPtr</b> (in)</dt>

<dd>A script fragment to be installed as the unknown command
handler for the namespace, or NULL to reset the handler to its
default.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

Namespaces are hierarchic naming contexts that can contain commands
and variables. They also maintain a list of patterns that describes
what commands are exported, and can import commands that have been
exported by other namespaces. Namespaces can also be manipulated
through the Tcl command <b><a href=
"../TclCmd/namespace.htm">namespace</a></b>. 

<p>The <i>Tcl_Namespace</i> structure encapsulates a namespace, and
is guaranteed to have the following fields in it: <i>name</i> (the
local name of the namespace, with no namespace separator characters
in it, with empty denoting the global namespace), <i>fullName</i>
(the fully specified name of the namespace), <i>clientData</i>,
<i>deleteProc</i> (the values specified in the call to
<b>Tcl_CreateNamespace</b>), and <i>parentPtr</i> (a pointer to the
containing namespace, or NULL for the global namespace.)</p>

<p><b>Tcl_CreateNamespace</b> creates a new namespace. The
<i>deleteProc</i> will have the following type signature:</p>

<pre>
typedef void (Tcl_NamespaceDeleteProc) (ClientData clientData);
</pre>

<p><b>Tcl_DeleteNamespace</b> deletes a namespace.</p>

<p><b>Tcl_AppendExportList</b> retrieves the export patterns for a
namespace given namespace and appends them (as list items) to
<i>objPtr</i>.</p>

<p><b>Tcl_Export</b> sets and appends to the export patterns for a
namespace. Patterns are appended unless the <i>resetListFirst</i>
flag is true.</p>

<p><b>Tcl_Import</b> imports commands matching a pattern into a
namespace. Note that the pattern must include the name of the
namespace to import from. This function returns an error if an
attempt to import a command over an existing command is made,
unless the <i>allowOverwrite</i> flag has been set.</p>

<p><b>Tcl_ForgetImport</b> removes imports matching a pattern.</p>

<p><b>Tcl_GetCurrentNamespace</b> returns the current namespace for
an interpreter.</p>

<p><b>Tcl_GetGlobalNamespace</b> returns the global namespace for
an interpreter.</p>

<p><b>Tcl_FindNamespace</b> searches for a namespace named
<i>name</i> within the context of the namespace
<i>contextNsPtr</i>. If the namespace cannot be found, NULL is
returned.</p>

<p><b>Tcl_FindCommand</b> searches for a command named <i>name</i>
within the context of the namespace <i>contextNsPtr</i>. If the
command cannot be found, NULL is returned.</p>

<p><b>Tcl_GetNamespaceUnknownHandler</b> returns the unknown
command handler for the namespace, or NULL if none is set.</p>

<p><b>Tcl_SetNamespaceUnknownHandler</b> sets the unknown command
handler for the namespace. If <i>handlerPtr</i> is NULL, then the
handler is reset to its default.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<b><a href="../TclLib/CrtCommand.htm">Tcl_CreateCommand</a></b>,
<b>Tcl_ListObjAppendElements</b>, <b><a href=
"../TclLib/SetVar.htm">Tcl_SetVar</a></b> 

<h3><a name="M7">KEYWORDS</a></h3>

<a href="../Keywords/N.htm#namespace">namespace</a>, <a href=
"../Keywords/C.htm#command">command</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 2003 Donal K. Fellows</div>
</body>
</html>

