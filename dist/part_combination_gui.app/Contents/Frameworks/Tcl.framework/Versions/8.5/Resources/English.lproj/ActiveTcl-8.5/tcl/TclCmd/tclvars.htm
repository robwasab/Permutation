<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - tclvars manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> tclvars</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="tclvars.htm#M2" name="L1757">NAME</a> 

<dl>
<dd>tclvars - Variables used by Tcl</dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M3" name="L1758">DESCRIPTION</a> 

<dl class="description">
<dd><a href="tclvars.htm#M4" name="L1759"><b>env</b></a> 

<dl class="description">
<dd><a href="tclvars.htm#M5" name="L1760"><b>env(HOME)</b></a></dd>

<dd><a href="tclvars.htm#M6" name=
"L1761"><b>env(TCL_LIBRARY)</b></a></dd>

<dd><a href="tclvars.htm#M7" name=
"L1762"><b>env(TCLLIBPATH)</b></a></dd>

<dd><a href="tclvars.htm#M8" name=
"L1763"><b>env(TCL_INTERP_DEBUG_FRAME)</b></a></dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M9" name="L1764"><b>errorCode</b></a> 

<dl class="description">
<dd><a href="tclvars.htm#M10" name="L1765"><b>ARITH</b> <i>code
msg</i></a></dd>

<dd><a href="tclvars.htm#M11" name="L1766"><b>CHILDKILLED</b>
<i>pid sigName msg</i></a></dd>

<dd><a href="tclvars.htm#M12" name="L1767"><b>CHILDSTATUS</b>
<i>pid code</i></a></dd>

<dd><a href="tclvars.htm#M13" name="L1768"><b>CHILDSUSP</b> <i>pid
sigName msg</i></a></dd>

<dd><a href="tclvars.htm#M14" name="L1769"><b>NONE</b></a></dd>

<dd><a href="tclvars.htm#M15" name="L1770"><b>POSIX</b> <i>errName
msg</i></a></dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M16" name=
"L1771"><b>errorInfo</b></a></dd>

<dd><a href="tclvars.htm#M17" name=
"L1772"><b>tcl_library</b></a></dd>

<dd><a href="tclvars.htm#M18" name=
"L1773"><b>tcl_patchLevel</b></a></dd>

<dd><a href="tclvars.htm#M19" name=
"L1774"><b>tcl_pkgPath</b></a></dd>

<dd><a href="tclvars.htm#M20" name="L1775"><b>tcl_platform</b></a> 

<dl class="description">
<dd><a href="tclvars.htm#M21" name=
"L1776"><b>byteOrder</b></a></dd>

<dd><a href="tclvars.htm#M22" name="L1777"><b>debug</b></a></dd>

<dd><a href="tclvars.htm#M23" name="L1778"><b>machine</b></a></dd>

<dd><a href="tclvars.htm#M24" name="L1779"><b>os</b></a></dd>

<dd><a href="tclvars.htm#M25" name=
"L1780"><b>osVersion</b></a></dd>

<dd><a href="tclvars.htm#M26" name="L1781"><b>platform</b></a></dd>

<dd><a href="tclvars.htm#M27" name="L1782"><b>threaded</b></a></dd>

<dd><a href="tclvars.htm#M28" name="L1783"><b>user</b></a></dd>

<dd><a href="tclvars.htm#M29" name="L1784"><b>wordSize</b></a></dd>

<dd><a href="tclvars.htm#M30" name=
"L1785"><b>pointerSize</b></a></dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M31" name=
"L1786"><b>tcl_precision</b></a></dd>
</dl>

<dl class="description">
<dd><a href="tclvars.htm#M32" name=
"L1787"><b>tcl_rcFileName</b></a></dd>

<dd><a href="tclvars.htm#M33" name=
"L1788"><b>tcl_traceCompile</b></a></dd>
</dl>

<dl class="description">
<dd><a href="tclvars.htm#M34" name=
"L1789"><b>tcl_traceExec</b></a></dd>
</dl>

<dl class="description">
<dd><a href="tclvars.htm#M35" name=
"L1790"><b>tcl_wordchars</b></a></dd>

<dd><a href="tclvars.htm#M36" name=
"L1791"><b>tcl_nonwordchars</b></a></dd>

<dd><a href="tclvars.htm#M37" name=
"L1792"><b>tcl_version</b></a></dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M38" name="L1793">OTHER GLOBAL
VARIABLES</a> 

<dl class="other global variables">
<dd><a href="tclvars.htm#M39" name="L1794"><b>argc</b></a></dd>

<dd><a href="tclvars.htm#M40" name="L1795"><b>argv</b></a></dd>

<dd><a href="tclvars.htm#M41" name="L1796"><b>argv0</b></a></dd>

<dd><a href="tclvars.htm#M42" name=
"L1797"><b>tcl_interactive</b></a></dd>
</dl>

<dl class="other global variables">
<dd><a href="tclvars.htm#M43" name="L1798"><b>geometry</b></a></dd>
</dl>
</dd>

<dd><a href="tclvars.htm#M44" name="L1799">SEE ALSO</a></dd>

<dd><a href="tclvars.htm#M45" name="L1800">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

tclvars - Variables used by Tcl 

<h3><a name="M3">DESCRIPTION</a></h3>

The following global variables are created and managed
automatically by the Tcl library. Except where noted below, these
variables should normally be treated as read-only by
application-specific code and by users. 

<dl class="description">
<dt><a name="M4"><b>env</b></a></dt>

<dd>This variable is maintained by Tcl as an array whose elements
are the environment variables for the process. Reading an element
will return the value of the corresponding environment variable.
Setting an element of the array will modify the corresponding
environment variable or create a new one if it does not already
exist. Unsetting an element of <b>env</b> will remove the
corresponding environment variable. Changes to the <b>env</b> array
will affect the environment passed to children by commands like
<b><a href="../TclCmd/exec.htm">exec</a></b>. If the entire
<b>env</b> array is unset then Tcl will stop monitoring <b>env</b>
accesses and will not update environment variables. 

<p>Under Windows, the environment variables PATH and COMSPEC in any
capitalization are converted automatically to upper case. For
instance, the PATH variable could be exported by the operating
system as &ldquo;path&rdquo;, &ldquo;Path&rdquo;,
&ldquo;PaTh&rdquo;, etc., causing otherwise simple Tcl code to have
to support many special cases. All other environment variables
inherited by Tcl are left unmodified. Setting an env array variable
to blank is the same as unsetting it as this is the behavior of the
underlying Windows OS. It should be noted that relying on an
existing and empty environment variable will not work on Windows
and is discouraged for cross-platform usage.</p>

<p>The following elements of <b>env</b> are special to Tcl:</p>

<dl class="description">
<dt><a name="M5"><b>env(HOME)</b></a></dt>

<dd>This environment variable, if set, gives the location of the
directory considered to be the current user's home directory, and
to which a call of <b><a href="../TclCmd/cd.htm">cd</a></b> without
arguments or with just &ldquo;~&rdquo; as an argument will change
into. Most platforms set this correctly by default; it does not
normally need to be set by user code.</dd>

<dt><a name="M6"><b>env(TCL_LIBRARY)</b></a></dt>

<dd>If set, then it specifies the location of the directory
containing library scripts (the value of this variable will be
assigned to the <b>tcl_library</b> variable and therefore returned
by the command <b><a href="../TclCmd/info.htm">info
library</a></b>). If this variable is not set then a default value
is used. 

<p>Note that this environment variable should <i>not</i> normally
be set.</p>
</dd>

<dt><a name="M7"><b>env(TCLLIBPATH)</b></a></dt>

<dd>If set, then it must contain a valid Tcl list giving
directories to search during auto-load operations. Directories must
be specified in Tcl format, using &ldquo;/&rdquo; as the path
separator, regardless of platform. This variable is only used when
initializing the <b>auto_path</b> variable.</dd>

<dt><a name="M8"><b>env(TCL_INTERP_DEBUG_FRAME)</b></a></dt>

<dd>If existing, it has the same effect as running <b>interp debug
{} -frame 1</b> as the very first command of each new Tcl
interpreter.</dd>
</dl>
</dd>

<dt><a name="M9"><b>errorCode</b></a></dt>

<dd>This variable holds the value of the <b>-errorcode</b> return
option set by the most recent error that occurred in this
interpreter. This list value represents additional information
about the error in a form that is easy to process with programs.
The first element of the list identifies a general class of errors,
and determines the format of the rest of the list. The following
formats for <b>-errorcode</b> return options are used by the Tcl
core; individual applications may define additional formats. 

<dl class="description">
<dt><a name="M10"><b>ARITH</b> <i>code msg</i></a></dt>

<dd>This format is used when an arithmetic error occurs (e.g. an
attempt to divide zero by zero in the <b><a href=
"../TclCmd/expr.htm">expr</a></b> command). <i>Code</i> identifies
the precise error and <i>msg</i> provides a human-readable
description of the error. <i>Code</i> will be either DIVZERO (for
an attempt to divide by zero), DOMAIN (if an argument is outside
the domain of a function, such as acos(-3)), IOVERFLOW (for integer
overflow), OVERFLOW (for a floating-point overflow), or UNKNOWN (if
the cause of the error cannot be determined). 

<p>Detection of these errors depends in part on the underlying
hardware and system libraries.</p>
</dd>

<dt><a name="M11"><b>CHILDKILLED</b> <i>pid sigName
msg</i></a></dt>

<dd>This format is used when a child process has been killed
because of a signal. The <i>pid</i> element will be the process's
identifier (in decimal). The <i>sigName</i> element will be the
symbolic name of the signal that caused the process to terminate;
it will be one of the names from the include file signal.h, such as
<b>SIGPIPE</b>. The <i>msg</i> element will be a short
human-readable message describing the signal, such as &ldquo;write
on pipe with no readers&rdquo; for <b>SIGPIPE</b>.</dd>

<dt><a name="M12"><b>CHILDSTATUS</b> <i>pid code</i></a></dt>

<dd>This format is used when a child process has exited with a
non-zero exit status. The <i>pid</i> element will be the process's
identifier (in decimal) and the <i>code</i> element will be the
exit code returned by the process (also in decimal).</dd>

<dt><a name="M13"><b>CHILDSUSP</b> <i>pid sigName msg</i></a></dt>

<dd>This format is used when a child process has been suspended
because of a signal. The <i>pid</i> element will be the process's
identifier, in decimal. The <i>sigName</i> element will be the
symbolic name of the signal that caused the process to suspend;
this will be one of the names from the include file signal.h, such
as <b>SIGTTIN</b>. The <i>msg</i> element will be a short
human-readable message describing the signal, such as
&ldquo;background tty read&rdquo; for <b>SIGTTIN</b>.</dd>

<dt><a name="M14"><b>NONE</b></a></dt>

<dd>This format is used for errors where no additional information
is available for an error besides the message returned with the
error. In these cases the <b>-errorcode</b> return option will
consist of a list containing a single element whose contents are
<b>NONE</b>.</dd>

<dt><a name="M15"><b>POSIX</b> <i>errName msg</i></a></dt>

<dd>If the first element is <b>POSIX</b>, then the error occurred
during a POSIX kernel call. The <i>errName</i> element will contain
the symbolic name of the error that occurred, such as
<b>ENOENT</b>; this will be one of the values defined in the
include file errno.h. The <i>msg</i> element will be a
human-readable message corresponding to <i>errName</i>, such as
&ldquo;no such file or directory&rdquo; for the <b>ENOENT</b>
case.</dd>
</dl>

<p>To set the <b>-errorcode</b> return option, applications should
use library procedures such as <b><a href=
"../TclLib/AddErrInfo.htm">Tcl_SetObjErrorCode</a></b>, <b><a href=
"../TclLib/AddErrInfo.htm">Tcl_SetReturnOptions</a></b>, and <b><a
href="../TclLib/AddErrInfo.htm">Tcl_PosixError</a></b>, or they may
invoke the <b>-errorcode</b> option of the <b><a href=
"../TclCmd/return.htm">return</a></b> command. If none of these
methods for setting the error code has been used, the Tcl
interpreter will reset the variable to <b>NONE</b> after the next
error.</p>
</dd>

<dt><a name="M16"><b>errorInfo</b></a></dt>

<dd>This variable holds the value of the <b>-errorinfo</b> return
option set by the most recent error that occurred in this
interpreter. This string value will contain one or more lines
identifying the Tcl commands and procedures that were being
executed when the most recent error occurred. Its contents take the
form of a stack trace showing the various nested Tcl commands that
had been invoked at the time of the error.</dd>

<dt><a name="M17"><b>tcl_library</b></a></dt>

<dd>This variable holds the name of a directory containing the
system library of Tcl scripts, such as those used for auto-loading.
The value of this variable is returned by the <b><a href=
"../TclCmd/info.htm">info library</a></b> command. See the
<b>library</b> manual entry for details of the facilities provided
by the Tcl script library. Normally each application or package
will have its own application-specific script library in addition
to the Tcl script library; each application should set a global
variable with a name like <b>$</b><i>app</i><b>_library</b> (where
<i>app</i> is the application's name) to hold the network file name
for that application's library directory. The initial value of
<b>tcl_library</b> is set when an interpreter is created by
searching several different directories until one is found that
contains an appropriate Tcl startup script. If the
<b>TCL_LIBRARY</b> environment variable exists, then the directory
it names is checked first. If <b>TCL_LIBRARY</b> is not set or
doesn't refer to an appropriate directory, then Tcl checks several
other directories based on a compiled-in default location, the
location of the binary containing the application, and the current
working directory.</dd>

<dt><a name="M18"><b>tcl_patchLevel</b></a></dt>

<dd>When an interpreter is created Tcl initializes this variable to
hold a string giving the current patch level for Tcl, such as
<b>8.4.16</b> for Tcl 8.4 with the first sixteen official patches,
or <b>8.5b3</b> for the third beta release of Tcl 8.5. The value of
this variable is returned by the <b><a href=
"../TclCmd/info.htm">info patchlevel</a></b> command.</dd>

<dt><a name="M19"><b>tcl_pkgPath</b></a></dt>

<dd>This variable holds a list of directories indicating where
packages are normally installed. It is not used on Windows. It
typically contains either one or two entries; if it contains two
entries, the first is normally a directory for platform-dependent
packages (e.g., shared library binaries) and the second is normally
a directory for platform-independent packages (e.g., script files).
Typically a package is installed as a subdirectory of one of the
entries in <b>$tcl_pkgPath</b>. The directories in
<b>$tcl_pkgPath</b> are included by default in the <b>auto_path</b>
variable, so they and their immediate subdirectories are
automatically searched for packages during <b>package require</b>
commands. Note: <b>tcl_pkgPath</b> is not intended to be modified
by the application. Its value is added to <b>auto_path</b> at
startup; changes to <b>tcl_pkgPath</b> are not reflected in
<b>auto_path</b>. If you want Tcl to search additional directories
for packages you should add the names of those directories to
<b>auto_path</b>, not <b>tcl_pkgPath</b>.</dd>

<dt><a name="M20"><b>tcl_platform</b></a></dt>

<dd>This is an associative array whose elements contain information
about the platform on which the application is running, such as the
name of the operating system, its current release number, and the
machine's instruction set. The elements listed below will always be
defined, but they may have empty strings as values if Tcl could not
retrieve any relevant information. In addition, extensions and
applications may add additional values to the array. The predefined
elements are: 

<dl class="description">
<dt><a name="M21"><b>byteOrder</b></a></dt>

<dd>The native byte order of this machine: either
<b>littleEndian</b> or <b>bigEndian</b>.</dd>

<dt><a name="M22"><b>debug</b></a></dt>

<dd>If this variable exists, then the interpreter was compiled with
and linked to a debug-enabled C run-time. This variable will only
exist on Windows, so extension writers can specify which package to
load depending on the C run-time library that is in use. This is
not an indication that this core contains symbols.</dd>

<dt><a name="M23"><b>machine</b></a></dt>

<dd>The instruction set executed by this machine, such as
<b>intel</b>, <b>PPC</b>, <b>68k</b>, or <b>sun4m</b>. On UNIX
machines, this is the value returned by <b>uname -m</b>.</dd>

<dt><a name="M24"><b>os</b></a></dt>

<dd>The name of the operating system running on this machine, such
as <b>Windows 95</b>, <b>Windows NT</b>, or <b>SunOS</b>. On UNIX
machines, this is the value returned by <b>uname -s</b>. On Windows
95 and Windows 98, the value returned will be <b>Windows 95</b> to
provide better backwards compatibility to Windows 95; to
distinguish between the two, check the <b>osVersion</b>.</dd>

<dt><a name="M25"><b>osVersion</b></a></dt>

<dd>The version number for the operating system running on this
machine. On UNIX machines, this is the value returned by <b>uname
-r</b>. On Windows 95, the version will be 4.0; on Windows 98, the
version will be 4.10.</dd>

<dt><a name="M26"><b>platform</b></a></dt>

<dd>Either <b>windows</b>, or <b>unix</b>. This identifies the
general operating environment of the machine.</dd>

<dt><a name="M27"><b>threaded</b></a></dt>

<dd>If this variable exists, then the interpreter was compiled with
threads enabled.</dd>

<dt><a name="M28"><b>user</b></a></dt>

<dd>This identifies the current user based on the login information
available on the platform. This comes from the USER or LOGNAME
environment variable on Unix, and the value from GetUserName on
Windows.</dd>

<dt><a name="M29"><b>wordSize</b></a></dt>

<dd>This gives the size of the native-machine word in bytes
(strictly, it is same as the result of evaluating
<i>sizeof(long)</i> in C.)</dd>

<dt><a name="M30"><b>pointerSize</b></a></dt>

<dd>This gives the size of the native-machine pointer in bytes
(strictly, it is same as the result of evaluating
<i>sizeof(void*)</i> in C.)</dd>
</dl>
</dd>

<dt><a name="M31"><b>tcl_precision</b></a></dt>

<dd>This variable controls the number of digits to generate when
converting floating-point values to strings. It defaults to 0.
<i>Applications should not change this value;</i> it is provided
for compatibility with legacy code.</dd>
</dl>

<dl>
<dd>The default value of 0 is special, meaning that Tcl should
convert numbers using as few digits as possible while still
distinguishing any floating point number from its nearest
neighbours. It differs from using an arbitrarily high value for
<i>tcl_precision</i> in that an inexact number like <i>1.4</i> will
convert as <i>1.4</i> rather than <i>1.3999999999999999</i> even
though the latter is nearer to the exact value of the binary
number.</dd>
</dl>

<dl>
<dd>If <b>tcl_precision</b> is not zero, then when Tcl converts a
floating point number, it creates a decimal representation of at
most <b>tcl_precision</b> significant digits; the result may be
shorter if the shorter result represents the original number
exactly. If no result of at most <b>tcl_precision</b> digits is an
exact representation of the original number, the one that is
closest to the original number is chosen. If the original number
lies precisely between two equally accurate decimal
representations, then the one with an even value for the least
significant digit is chosen; for instance, if <b>tcl_precision</b>
is 3, then 0.3125 will convert to 0.312, not 0.313, while 0.6875
will convert to 0.688, not 0.687. Any string of trailing zeroes
that remains is trimmed.</dd>
</dl>

<dl>
<dd>a <b>tcl_precision</b> value of 17 digits is
&ldquo;perfect&rdquo; for IEEE floating-point in that it allows
double-precision values to be converted to strings and back to
binary with no loss of information. For this reason, you will often
see it as a value in legacy code that must run on Tcl versions
before 8.5. It is no longer recommended; as noted above, a zero
value is the preferred method.</dd>
</dl>

<dl>
<dd>All interpreters in a thread share a single
<b>tcl_precision</b> value: changing it in one interpreter will
affect all other interpreters as well. Safe interpreters are not
allowed to modify the variable.</dd>
</dl>

<dl>
<dd>Valid values for <b>tcl_precision</b> range from 0 to 17.</dd>
</dl>

<dl class="description">
<dt><a name="M32"><b>tcl_rcFileName</b></a></dt>

<dd>This variable is used during initialization to indicate the
name of a user-specific startup file. If it is set by
application-specific initialization, then the Tcl startup code will
check for the existence of this file and <b><a href=
"../TclCmd/source.htm">source</a></b> it if it exists. For example,
for <b><a href="../UserCmd/wish.htm">wish</a></b> the variable is
set to <b>~/.wishrc</b> for Unix and <b>~/wishrc.tcl</b> for
Windows.</dd>

<dt><a name="M33"><b>tcl_traceCompile</b></a></dt>

<dd>The value of this variable can be set to control how much
tracing information is displayed during bytecode compilation. By
default, tcl_traceCompile is zero and no information is displayed.
Setting tcl_traceCompile to 1 generates a one-line summary in
stdout whenever a procedure or top-level command is compiled.
Setting it to 2 generates a detailed listing in stdout of the
bytecode instructions emitted during every compilation. This
variable is useful in tracking down suspected problems with the Tcl
compiler.</dd>
</dl>

<dl>
<dd>This variable and functionality only exist if
<b>TCL_COMPILE_DEBUG</b> was defined during Tcl's compilation.</dd>
</dl>

<dl class="description">
<dt><a name="M34"><b>tcl_traceExec</b></a></dt>

<dd>The value of this variable can be set to control how much
tracing information is displayed during bytecode execution. By
default, tcl_traceExec is zero and no information is displayed.
Setting tcl_traceExec to 1 generates a one-line trace in stdout on
each call to a Tcl procedure. Setting it to 2 generates a line of
output whenever any Tcl command is invoked that contains the name
of the command and its arguments. Setting it to 3 produces a
detailed trace showing the result of executing each bytecode
instruction. Note that when tcl_traceExec is 2 or 3, commands such
as <b><a href="../TclCmd/set.htm">set</a></b> and <b><a href=
"../TclCmd/incr.htm">incr</a></b> that have been entirely replaced
by a sequence of bytecode instructions are not shown. Setting this
variable is useful in tracking down suspected problems with the
bytecode compiler and interpreter.</dd>
</dl>

<dl>
<dd>This variable and functionality only exist if
<b>TCL_COMPILE_DEBUG</b> was defined during Tcl's compilation.</dd>
</dl>

<dl class="description">
<dt><a name="M35"><b>tcl_wordchars</b></a></dt>

<dd>The value of this variable is a regular expression that can be
set to control what are considered &ldquo;word&rdquo; characters,
for instances like selecting a word by double-clicking in text in
Tk. It is platform dependent. On Windows, it defaults to <b>\S</b>,
meaning anything but a Unicode space character. Otherwise it
defaults to <b>\w</b>, which is any Unicode word character (number,
letter, or underscore).</dd>

<dt><a name="M36"><b>tcl_nonwordchars</b></a></dt>

<dd>The value of this variable is a regular expression that can be
set to control what are considered &ldquo;non-word&rdquo;
characters, for instances like selecting a word by double-clicking
in text in Tk. It is platform dependent. On Windows, it defaults to
<b>\s</b>, meaning any Unicode space character. Otherwise it
defaults to <b>\W</b>, which is anything but a Unicode word
character (number, letter, or underscore).</dd>

<dt><a name="M37"><b>tcl_version</b></a></dt>

<dd>When an interpreter is created Tcl initializes this variable to
hold the version number for this version of Tcl in the form
<i>x.y</i>. Changes to <i>x</i> represent major changes with
probable incompatibilities and changes to <i>y</i> represent small
enhancements and bug fixes that retain backward compatibility. The
value of this variable is returned by the <b><a href=
"../TclCmd/info.htm">info tclversion</a></b> command.</dd>
</dl>

<h3><a name="M38">OTHER GLOBAL VARIABLES</a></h3>

The following variables are only guaranteed to exist in <b><a href=
"../UserCmd/tclsh.htm">tclsh</a></b> and <b><a href=
"../UserCmd/wish.htm">wish</a></b> executables; the Tcl library
does not define them itself but many Tcl environments do. 

<dl class="other global variables">
<dt><a name="M39"><b>argc</b></a></dt>

<dd>The number of arguments to <b><a href=
"../UserCmd/tclsh.htm">tclsh</a></b> or <b><a href=
"../UserCmd/wish.htm">wish</a></b>.</dd>

<dt><a name="M40"><b>argv</b></a></dt>

<dd>Tcl list of arguments to <b><a href=
"../UserCmd/tclsh.htm">tclsh</a></b> or <b><a href=
"../UserCmd/wish.htm">wish</a></b>.</dd>

<dt><a name="M41"><b>argv0</b></a></dt>

<dd>The script that <b><a href="../UserCmd/tclsh.htm">tclsh</a></b>
or <b><a href="../UserCmd/wish.htm">wish</a></b> started executing
(if it was specified) or otherwise the name by which <b><a href=
"../UserCmd/tclsh.htm">tclsh</a></b> or <b><a href=
"../UserCmd/wish.htm">wish</a></b> was invoked.</dd>

<dt><a name="M42"><b>tcl_interactive</b></a></dt>

<dd>Contains 1 if <b><a href="../UserCmd/tclsh.htm">tclsh</a></b>
or <b><a href="../UserCmd/wish.htm">wish</a></b> is running
interactively (no script was specified and standard input is a
terminal-like device), 0 otherwise.</dd>
</dl>

<p>The <b><a href="../UserCmd/wish.htm">wish</a></b> executable
additionally specifies the following global variable:</p>

<dl class="other global variables">
<dt><a name="M43"><b>geometry</b></a></dt>

<dd>If set, contains the user-supplied geometry specification to
use for the main Tk window.</dd>
</dl>

<h3><a name="M44">SEE ALSO</a></h3>

<b><a href="../TclCmd/eval.htm">eval</a></b>, <b><a href=
"../UserCmd/tclsh.htm">tclsh</a></b>, <b><a href=
"../UserCmd/wish.htm">wish</a></b> 

<h3><a name="M45">KEYWORDS</a></h3>

<a href="../Keywords/A.htm#arithmetic">arithmetic</a>, <a href=
"../Keywords/B.htm#bytecode">bytecode</a>, <a href=
"../Keywords/C.htm#compiler">compiler</a>, <a href=
"../Keywords/E.htm#error">error</a>, <a href=
"../Keywords/E.htm#environment">environment</a>, <a href=
"../Keywords/P.htm#POSIX">POSIX</a>, <a href=
"../Keywords/P.htm#precision">precision</a>, <a href=
"../Keywords/S.htm#subprocess">subprocess</a>, <a href=
"../Keywords/V.htm#variables">variables</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1993 The Regents of the University of California.
Copyright &copy; 1994-1997 Sun Microsystems, Inc.</div>
</body>
</html>

