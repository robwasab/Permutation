<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Built-In Commands - upvar manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> upvar</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

upvar - Create link to variable in a different stack frame 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>upvar</b> ?<i>level</i>? <i>otherVar myVar</i> ?<i>otherVar
myVar</i> ...?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

This command arranges for one or more local variables in the
current procedure to refer to variables in an enclosing procedure
call or to global variables. <i>Level</i> may have any of the forms
permitted for the <b><a href=
"../TclCmd/uplevel.htm">uplevel</a></b> command, and may be omitted
if the first letter of the first <i>otherVar</i> is not <b>#</b> or
a digit (it defaults to <b>1</b>). For each <i>otherVar</i>
argument, <b>upvar</b> makes the variable by that name in the
procedure frame given by <i>level</i> (or at global level, if
<i>level</i> is <b>#0</b>) accessible in the current procedure by
the name given in the corresponding <i>myVar</i> argument. The
variable named by <i>otherVar</i> need not exist at the time of the
call; it will be created the first time <i>myVar</i> is referenced,
just like an ordinary variable. There must not exist a variable by
the name <i>myVar</i> at the time <b>upvar</b> is invoked.
<i>MyVar</i> is always treated as the name of a variable, not an
array element. An error is returned if the name looks like an array
element, such as <b>a(b)</b>. <i>OtherVar</i> may refer to a scalar
variable, an array, or an array element. <b>Upvar</b> returns an
empty string. 

<p>The <b>upvar</b> command simplifies the implementation of
call-by-name procedure calling and also makes it easier to build
new control constructs as Tcl procedures. For example, consider the
following procedure:</p>

<pre>
proc <i>add2</i> name {
   <b>upvar</b> $name x
   set x [expr {$x + 2}]
}
</pre>

If <i>add2</i> is invoked with an argument giving the name of a
variable, it adds two to the value of that variable. Although
<i>add2</i> could have been implemented using <b><a href=
"../TclCmd/uplevel.htm">uplevel</a></b> instead of <b>upvar</b>,
<b>upvar</b> makes it simpler for <b>add2</b> to access the
variable in the caller's procedure frame. 

<p><b>namespace eval</b> is another way (besides procedure calls)
that the Tcl naming context can change. It adds a call frame to the
stack to represent the namespace context. This means each
<b>namespace eval</b> command counts as another call level for
<b><a href="../TclCmd/uplevel.htm">uplevel</a></b> and <b>upvar</b>
commands. For example, <b>info level 1</b> will return a list
describing a command that is either the outermost procedure call or
the outermost <b>namespace eval</b> command. Also, <b>uplevel
#0</b> evaluates a script at top-level in the outermost namespace
(the global namespace).</p>

<p>If an upvar variable is unset (e.g. <b>x</b> in <b>add2</b>
above), the <b><a href="../TclCmd/unset.htm">unset</a></b>
operation affects the variable it is linked to, not the upvar
variable. There is no way to unset an upvar variable except by
exiting the procedure in which it is defined. However, it is
possible to retarget an upvar variable by executing another
<b>upvar</b> command.</p>

<h3><a name="M5">TRACES AND UPVAR</a></h3>

Upvar interacts with traces in a straightforward but possibly
unexpected manner. If a variable trace is defined on
<i>otherVar</i>, that trace will be triggered by actions involving
<i>myVar</i>. However, the trace procedure will be passed the name
of <i>myVar</i>, rather than the name of <i>otherVar</i>. Thus, the
output of the following code will be &ldquo;<i>localVar</i>&rdquo;
rather than &ldquo;<i>originalVar</i>&rdquo;: 

<pre>
proc <i>traceproc</i> { name index op } {
   puts $name
}
proc <i>setByUpvar</i> { name value } {
   <b>upvar</b> $name localVar
   set localVar $value
}
set originalVar 1
trace variable originalVar w <i>traceproc</i>
<i>setByUpvar</i> originalVar 2
</pre>

<p>If <i>otherVar</i> refers to an element of an array, then
variable traces set for the entire array will not be invoked when
<i>myVar</i> is accessed (but traces on the particular element will
still be invoked). In particular, if the array is <b>env</b>, then
changes made to <i>myVar</i> will not be passed to subprocesses
correctly.</p>

<h3><a name="M6">EXAMPLE</a></h3>

A <b>decr</b> command that works like <b><a href=
"../TclCmd/incr.htm">incr</a></b> except it subtracts the value
from the variable instead of adding it: 

<pre>
proc decr {varName {decrement 1}} {
    <b>upvar</b> 1 $varName var
    incr var [expr {-$decrement}]
}
</pre>

<h3><a name="M7">SEE ALSO</a></h3>

<b><a href="../TclCmd/global.htm">global</a></b>, <b><a href=
"../TclCmd/namespace.htm">namespace</a></b>, <b><a href=
"../TclCmd/uplevel.htm">uplevel</a></b>, <b><a href=
"../TclCmd/variable.htm">variable</a></b> 

<h3><a name="M8">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#context">context</a>, <a href=
"../Keywords/F.htm#frame">frame</a>, <a href=
"../Keywords/G.htm#global">global</a>, <a href=
"../Keywords/L.htm#level">level</a>, <a href=
"../Keywords/N.htm#namespace">namespace</a>, <a href=
"../Keywords/P.htm#procedure">procedure</a>, <a href=
"../Keywords/V.htm#variable">variable</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1993 The Regents of the University of California.
Copyright &copy; 1994-1997 Sun Microsystems, Inc.</div>
</body>
</html>

