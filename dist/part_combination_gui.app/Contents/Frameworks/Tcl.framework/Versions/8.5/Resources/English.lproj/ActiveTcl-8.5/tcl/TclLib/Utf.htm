<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Utf manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> Utf</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_UniChar, Tcl_UniCharCaseMatch, Tcl_UniCharNcasecmp,
Tcl_UniCharToUtf, Tcl_UtfToUniChar, Tcl_UniCharToUtfDString,
Tcl_UtfToUniCharDString, Tcl_UniCharLen, Tcl_UniCharNcmp,
Tcl_UtfCharComplete, Tcl_NumUtfChars, Tcl_UtfFindFirst,
Tcl_UtfFindLast, Tcl_UtfNext, Tcl_UtfPrev, Tcl_UniCharAtIndex,
Tcl_UtfAtIndex, Tcl_UtfBackslash - routines for manipulating UTF-8
strings 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
typedef ... Tcl_UniChar;<br>
int<br>
<b>Tcl_UniCharToUtf</b>(<i>ch, buf</i>)<br>
int<br>
<b>Tcl_UtfToUniChar</b>(<i>src, chPtr</i>)<br>
char *<br>
<b>Tcl_UniCharToUtfDString</b>(<i>uniStr, uniLength, dsPtr</i>)<br>
Tcl_UniChar *<br>
<b>Tcl_UtfToUniCharDString</b>(<i>src, length, dsPtr</i>)<br>
int<br>
<b>Tcl_UniCharLen</b>(<i>uniStr</i>)<br>
int<br>
<b>Tcl_UniCharNcmp</b>(<i>ucs, uct, numChars</i>)<br>
int<br>
<b>Tcl_UniCharNcasecmp</b>(<i>ucs, uct, numChars</i>)<br>
int<br>
<b>Tcl_UniCharCaseMatch</b>(<i>uniStr, uniPattern, nocase</i>)<br>
int<br>
<b>Tcl_UtfNcmp</b>(<i>cs, ct, numChars</i>)<br>
int<br>
<b>Tcl_UtfNcasecmp</b>(<i>cs, ct, numChars</i>)<br>
int<br>
<b>Tcl_UtfCharComplete</b>(<i>src, length</i>)<br>
int <br>
<b>Tcl_NumUtfChars</b>(<i>src, length</i>)<br>
const char *<br>
<b>Tcl_UtfFindFirst</b>(<i>src, ch</i>)<br>
const char *<br>
<b>Tcl_UtfFindLast</b>(<i>src, ch</i>)<br>
const char *<br>
<b>Tcl_UtfNext</b>(<i>src</i>)<br>
const char *<br>
<b>Tcl_UtfPrev</b>(<i>src, start</i>)<br>
Tcl_UniChar<br>
<b>Tcl_UniCharAtIndex</b>(<i>src, index</i>)<br>
const char *<br>
<b>Tcl_UtfAtIndex</b>(<i>src, index</i>)<br>
int<br>
<b>Tcl_UtfBackslash</b>(<i>src, readPtr, dst</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>char <b>*buf</b> (out)</dt>

<dd>Buffer in which the UTF-8 representation of the Tcl_UniChar is
stored. At most <b>TCL_UTF_MAX</b> bytes are stored in the
buffer.</dd>

<dt>int <b>ch</b> (in)</dt>

<dd>The Tcl_UniChar to be converted or examined.</dd>

<dt>Tcl_UniChar <b>*chPtr</b> (out)</dt>

<dd>Filled with the Tcl_UniChar represented by the head of the
UTF-8 string.</dd>

<dt>const char <b>*src</b> (in)</dt>

<dd>Pointer to a UTF-8 string.</dd>

<dt>const char <b>*cs</b> (in)</dt>

<dd>Pointer to a UTF-8 string.</dd>

<dt>const char <b>*ct</b> (in)</dt>

<dd>Pointer to a UTF-8 string.</dd>

<dt>const Tcl_UniChar <b>*uniStr</b> (in)</dt>

<dd>A null-terminated Unicode string.</dd>

<dt>const Tcl_UniChar <b>*ucs</b> (in)</dt>

<dd>A null-terminated Unicode string.</dd>

<dt>const Tcl_UniChar <b>*uct</b> (in)</dt>

<dd>A null-terminated Unicode string.</dd>

<dt>const Tcl_UniChar <b>*uniPattern</b> (in)</dt>

<dd>A null-terminated Unicode string.</dd>

<dt>int <b>length</b> (in)</dt>

<dd>The length of the UTF-8 string in bytes (not UTF-8 characters).
If negative, all bytes up to the first null byte are used.</dd>

<dt>int <b>uniLength</b> (in)</dt>

<dd>The length of the Unicode string in characters. Must be greater
than or equal to 0.</dd>

<dt>Tcl_DString <b>*dsPtr</b> (in/out)</dt>

<dd>A pointer to a previously initialized <b>Tcl_DString</b>.</dd>

<dt>unsigned long <b>numChars</b> (in)</dt>

<dd>The number of characters to compare.</dd>

<dt>const char <b>*start</b> (in)</dt>

<dd>Pointer to the beginning of a UTF-8 string.</dd>

<dt>int <b>index</b> (in)</dt>

<dd>The index of a character (not byte) in the UTF-8 string.</dd>

<dt>int <b>*readPtr</b> (out)</dt>

<dd>If non-NULL, filled with the number of bytes in the backslash
sequence, including the backslash character.</dd>

<dt>char <b>*dst</b> (out)</dt>

<dd>Buffer in which the bytes represented by the backslash sequence
are stored. At most <b>TCL_UTF_MAX</b> bytes are stored in the
buffer.</dd>

<dt>int <b>nocase</b> (in)</dt>

<dd>Specifies whether the match should be done case-sensitive (0)
or case-insensitive (1).</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These routines convert between UTF-8 strings and Tcl_UniChars. A
Tcl_UniChar is a Unicode character represented as an unsigned,
fixed-size quantity. A UTF-8 character is a Unicode character
represented as a varying-length sequence of up to
<b>TCL_UTF_MAX</b> bytes. A multibyte UTF-8 sequence consists of a
lead byte followed by some number of trail bytes. 

<p><b>TCL_UTF_MAX</b> is the maximum number of bytes that it takes
to represent one Unicode character in the UTF-8 representation.</p>

<p><b>Tcl_UniCharToUtf</b> stores the Tcl_UniChar <i>ch</i> as a
UTF-8 string in starting at <i>buf</i>. The return value is the
number of bytes stored in <i>buf</i>.</p>

<p><b>Tcl_UtfToUniChar</b> reads one UTF-8 character starting at
<i>src</i> and stores it as a Tcl_UniChar in <i>*chPtr</i>. The
return value is the number of bytes read from <i>src</i>. The
caller must ensure that the source buffer is long enough such that
this routine does not run off the end and dereference non-existent
or random memory; if the source buffer is known to be
null-terminated, this will not happen. If the input is not in
proper UTF-8 format, <b>Tcl_UtfToUniChar</b> will store the first
byte of <i>src</i> in <i>*chPtr</i> as a Tcl_UniChar between 0x0000
and 0x00ff and return 1.</p>

<p><b>Tcl_UniCharToUtfDString</b> converts the given Unicode string
to UTF-8, storing the result in a previously initialized
<b>Tcl_DString</b>. You must specify <i>uniLength</i>, the length
of the given Unicode string. The return value is a pointer to the
UTF-8 representation of the Unicode string. Storage for the return
value is appended to the end of the <b>Tcl_DString</b>.</p>

<p><b>Tcl_UtfToUniCharDString</b> converts the given UTF-8 string
to Unicode, storing the result in the previously initialized
<b>Tcl_DString</b>. In the argument <i>length</i>, you may either
specify the length of the given UTF-8 string in bytes or
&ldquo;-1&rdquo;, in which case <b>Tcl_UtfToUniCharDString</b> uses
<b>strlen</b> to calculate the length. The return value is a
pointer to the Unicode representation of the UTF-8 string. Storage
for the return value is appended to the end of the
<b>Tcl_DString</b>. The Unicode string is terminated with a Unicode
null character.</p>

<p><b>Tcl_UniCharLen</b> corresponds to <b>strlen</b> for Unicode
characters. It accepts a null-terminated Unicode string and returns
the number of Unicode characters (not bytes) in that string.</p>

<p><b>Tcl_UniCharNcmp</b> and <b>Tcl_UniCharNcasecmp</b> correspond
to <b>strncmp</b> and <b>strncasecmp</b>, respectively, for Unicode
characters. They accept two null-terminated Unicode strings and the
number of characters to compare. Both strings are assumed to be at
least <i>numChars</i> characters long. <b>Tcl_UniCharNcmp</b>
compares the two strings character-by-character according to the
Unicode character ordering. It returns an integer greater than,
equal to, or less than 0 if the first string is greater than, equal
to, or less than the second string respectively.
<b>Tcl_UniCharNcasecmp</b> is the Unicode case insensitive
version.</p>

<p><b>Tcl_UniCharCaseMatch</b> is the Unicode equivalent to <b><a
href="../TclLib/StrMatch.htm">Tcl_StringCaseMatch</a></b>. It
accepts a null-terminated Unicode string, a Unicode pattern, and a
boolean value specifying whether the match should be case sensitive
and returns whether the string matches the pattern.</p>

<p><b>Tcl_UtfNcmp</b> corresponds to <b>strncmp</b> for UTF-8
strings. It accepts two null-terminated UTF-8 strings and the
number of characters to compare. (Both strings are assumed to be at
least <i>numChars</i> characters long.) <b>Tcl_UtfNcmp</b> compares
the two strings character-by-character according to the Unicode
character ordering. It returns an integer greater than, equal to,
or less than 0 if the first string is greater than, equal to, or
less than the second string respectively.</p>

<p><b>Tcl_UtfNcasecmp</b> corresponds to <b>strncasecmp</b> for
UTF-8 strings. It is similar to <b>Tcl_UtfNcmp</b> except
comparisons ignore differences in case when comparing upper, lower
or title case characters.</p>

<p><b>Tcl_UtfCharComplete</b> returns 1 if the source UTF-8 string
<i>src</i> of <i>length</i> bytes is long enough to be decoded by
<b>Tcl_UtfToUniChar</b>, or 0 otherwise. This function does not
guarantee that the UTF-8 string is properly formed. This routine is
used by procedures that are operating on a byte at a time and need
to know if a full Tcl_UniChar has been seen.</p>

<p><b>Tcl_NumUtfChars</b> corresponds to <b>strlen</b> for UTF-8
strings. It returns the number of Tcl_UniChars that are represented
by the UTF-8 string <i>src</i>. The length of the source string is
<i>length</i> bytes. If the length is negative, all bytes up to the
first null byte are used.</p>

<p><b>Tcl_UtfFindFirst</b> corresponds to <b>strchr</b> for UTF-8
strings. It returns a pointer to the first occurrence of the
Tcl_UniChar <i>ch</i> in the null-terminated UTF-8 string
<i>src</i>. The null terminator is considered part of the UTF-8
string.</p>

<p><b>Tcl_UtfFindLast</b> corresponds to <b>strrchr</b> for UTF-8
strings. It returns a pointer to the last occurrence of the
Tcl_UniChar <i>ch</i> in the null-terminated UTF-8 string
<i>src</i>. The null terminator is considered part of the UTF-8
string.</p>

<p>Given <i>src</i>, a pointer to some location in a UTF-8 string,
<b>Tcl_UtfNext</b> returns a pointer to the next UTF-8 character in
the string. The caller must not ask for the next character after
the last character in the string if the string is not terminated by
a null character.</p>

<p>Given <i>src</i>, a pointer to some location in a UTF-8 string
(or to a null byte immediately following such a string),
<b>Tcl_UtfPrev</b> returns a pointer to the closest preceding byte
that starts a UTF-8 character. This function will not back up to a
position before <i>start</i>, the start of the UTF-8 string. If
<i>src</i> was already at <i>start</i>, the return value will be
<i>start</i>.</p>

<p><b>Tcl_UniCharAtIndex</b> corresponds to a C string array
dereference or the Pascal Ord() function. It returns the
Tcl_UniChar represented at the specified character (not byte)
<i>index</i> in the UTF-8 string <i>src</i>. The source string must
contain at least <i>index</i> characters. Behavior is undefined if
a negative <i>index</i> is given.</p>

<p><b>Tcl_UtfAtIndex</b> returns a pointer to the specified
character (not byte) <i>index</i> in the UTF-8 string <i>src</i>.
The source string must contain at least <i>index</i> characters.
This is equivalent to calling <b>Tcl_UtfNext</b> <i>index</i>
times. If a negative <i>index</i> is given, the return pointer
points to the first character in the source string.</p>

<p><b>Tcl_UtfBackslash</b> is a utility procedure used by several
of the Tcl commands. It parses a backslash sequence and stores the
properly formed UTF-8 character represented by the backslash
sequence in the output buffer <i>dst</i>. At most
<b>TCL_UTF_MAX</b> bytes are stored in the buffer.
<b>Tcl_UtfBackslash</b> modifies <i>*readPtr</i> to contain the
number of bytes in the backslash sequence, including the backslash
character. The return value is the number of bytes stored in the
output buffer.</p>

<p>See the <b><a href="../TclCmd/Tcl.htm">Tcl</a></b> manual entry
for information on the valid backslash sequences. All of the
sequences described in the <a href="../TclCmd/Tcl.htm">Tcl</a>
manual entry are supported by <b>Tcl_UtfBackslash</b>.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/U.htm#utf">utf</a>, <a href=
"../Keywords/U.htm#unicode">unicode</a>, <a href=
"../Keywords/B.htm#backslash">backslash</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1997 Sun Microsystems, Inc.</div>
</body>
</html>

