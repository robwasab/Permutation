<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_AllocCursorFromObj manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> GetCursor</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="GetCursor.htm#M2" name="L281">NAME</a> 

<dl>
<dd>Tk_AllocCursorFromObj, Tk_GetCursor, Tk_GetCursorFromObj,
Tk_GetCursorFromData, Tk_NameOfCursor, Tk_FreeCursorFromObj,
Tk_FreeCursor - maintain database of cursors</dd>
</dl>
</dd>

<dd><a href="GetCursor.htm#M3" name="L282">SYNOPSIS</a></dd>

<dd><a href="GetCursor.htm#M4" name="L283">ARGUMENTS</a></dd>

<dd><a href="GetCursor.htm#M5" name="L284">DESCRIPTION</a> 

<dl class="description">
<dd><a href="GetCursor.htm#M6" name="L285"><i>name</i>
[<i>fgColor</i> [<i>bgColor</i>]]</a></dd>

<dd><a href="GetCursor.htm#M7" name="L286"><b>@</b><i>sourceName
maskName fgColor bgColor</i></a></dd>

<dd><a href="GetCursor.htm#M8" name="L287"><b>@</b><i>sourceName
fgColor</i></a></dd>

<dd><a href="GetCursor.htm#M9" name=
"L288"><b>@</b><i>sourceName</i></a></dd>
</dl>
</dd>

<dd><a href="GetCursor.htm#M10" name="L289">BUGS</a></dd>

<dd><a href="GetCursor.htm#M11" name="L290">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

Tk_AllocCursorFromObj, Tk_GetCursor, Tk_GetCursorFromObj,
Tk_GetCursorFromData, Tk_NameOfCursor, Tk_FreeCursorFromObj,
Tk_FreeCursor - maintain database of cursors 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
Tk_Cursor<br>
<b>Tk_AllocCursorFromObj(</b><i>interp, tkwin,
objPtr</i><b>)</b><br>
Tk_Cursor<br>
<b>Tk_GetCursor(</b><i>interp, tkwin, name</i><b>)</b><br>
Tk_Cursor<br>
<b>Tk_GetCursorFromObj(</b><i>tkwin, objPtr</i><b>)</b><br>
Tk_Cursor<br>
<b>Tk_GetCursorFromData(</b><i>interp, tkwin, source, mask, width,
height, xHot, yHot, fg, bg</i><b>)</b><br>
const char *<br>
<b>Tk_NameOfCursor(</b><i>display, cursor</i><b>)</b><br>
<b>Tk_FreeCursorFromObj(</b><i>tkwin, objPtr</i><b>)</b><br>
<b>Tk_FreeCursor(</b><i>display, cursor</i><b>)</b><br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter to use for error reporting.</dd>

<dt>Tk_Window <b>tkwin</b> (in)</dt>

<dd>Token for window in which the cursor will be used.</dd>

<dt>Tcl_Obj <b>*objPtr</b> (in/out)</dt>

<dd>Description of cursor; see below for possible values. Internal
rep will be modified to cache pointer to corresponding
Tk_Cursor.</dd>

<dt>char <b>*name</b> (in)</dt>

<dd>Same as <i>objPtr</i> except description of cursor is passed as
a string and resulting Tk_Cursor is not cached.</dd>

<dt>const char <b>*source</b> (in)</dt>

<dd>Data for cursor cursor, in standard cursor format.</dd>

<dt>const char <b>*mask</b> (in)</dt>

<dd>Data for mask cursor, in standard cursor format.</dd>

<dt>int <b>width</b> (in)</dt>

<dd>Width of <i>source</i> and <i>mask</i>.</dd>

<dt>int <b>height</b> (in)</dt>

<dd>Height of <i>source</i> and <i>mask</i>.</dd>

<dt>int <b>xHot</b> (in)</dt>

<dd>X-location of cursor hot-spot.</dd>

<dt>int <b>yHot</b> (in)</dt>

<dd>Y-location of cursor hot-spot.</dd>

<dt><a href="../TkLib/GetUid.htm">Tk_Uid</a> <b>fg</b> (in)</dt>

<dd>Textual description of foreground color for cursor.</dd>

<dt><a href="../TkLib/GetUid.htm">Tk_Uid</a> <b>bg</b> (in)</dt>

<dd>Textual description of background color for cursor.</dd>

<dt>Display <b>*display</b> (in)</dt>

<dd>Display for which <i>cursor</i> was allocated.</dd>

<dt>Tk_Cursor <b>cursor</b> (in)</dt>

<dd>Opaque Tk identifier for cursor. If passed to
<b>Tk_FreeCursor</b>, must have been returned by some previous call
to <b>Tk_GetCursor</b> or <b>Tk_GetCursorFromData</b>.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These procedures manage a collection of cursors being used by an
application. The procedures allow cursors to be re-used
efficiently, thereby avoiding server overhead, and also allow
cursors to be named with character strings. 

<p><b>Tk_AllocCursorFromObj</b> takes as argument an object
describing a cursor, and returns an opaque Tk identifier for a
cursor corresponding to the description. It re-uses an existing
cursor if possible and creates a new one otherwise.
<b>Tk_AllocCursorFromObj</b> caches information about the return
value in <i>objPtr</i>, which speeds up future calls to procedures
such as <b>Tk_AllocCursorFromObj</b> and
<b>Tk_GetCursorFromObj</b>. If an error occurs in creating the
cursor, such as when <i>objPtr</i> refers to a non-existent file,
then <b>None</b> is returned and an error message will be stored in
<i>interp</i>'s result if <i>interp</i> is not NULL. <i>ObjPtr</i>
must contain a standard Tcl list with one of the following
forms:</p>

<dl class="description">
<dt><a name="M6"><i>name</i> [<i>fgColor</i>
[<i>bgColor</i>]]</a></dt>

<dd><i>Name</i> is the name of a cursor in the standard X cursor
cursor, i.e., any of the names defined in <b>cursorcursor.h</b>,
without the <b>XC_</b>. Some example values are <b>X_cursor</b>,
<b>hand2</b>, or <b>left_ptr</b>. Appendix B of &ldquo;The X Window
System&rdquo; by Scheifler &amp; Gettys has illustrations showing
what each of these cursors looks like. If <i>fgColor</i> and
<i>bgColor</i> are both specified, they give the foreground and
background colors to use for the cursor (any of the forms
acceptable to <b><a href=
"../TkLib/GetColor.htm">Tk_GetColor</a></b> may be used). If only
<i>fgColor</i> is specified, then there will be no background
color: the background will be transparent. If no colors are
specified, then the cursor will use black for its foreground color
and white for its background color. 

<p>The Macintosh version of Tk supports all of the X cursors and
will also accept any of the standard Mac cursors including
<b>ibeam</b>, <b>crosshair</b>, <b>watch</b>, <b>plus</b>, and
<b>arrow</b>. In addition, Tk will load Macintosh cursor resources
of the types <b>crsr</b> (color) and <b>CURS</b> (black and white)
by the name of the resource. The application and all its open
dynamic library's resource files will be searched for the named
cursor. If there are conflicts color cursors will always be loaded
in preference to black and white cursors.</p>
</dd>

<dt><a name="M7"><b>@</b><i>sourceName maskName fgColor
bgColor</i></a></dt>

<dd>In this form, <i>sourceName</i> and <i>maskName</i> are the
names of files describing cursors for the cursor's source bits and
mask. Each file must be in standard X11 or X10 cursor format.
<i>FgColor</i> and <i>bgColor</i> indicate the colors to use for
the cursor, in any of the forms acceptable to <b><a href=
"../TkLib/GetColor.htm">Tk_GetColor</a></b>. This form of the
command will not work on Macintosh or Windows computers.</dd>

<dt><a name="M8"><b>@</b><i>sourceName fgColor</i></a></dt>

<dd>This form is similar to the one above, except that the source
is used as mask also. This means that the cursor's background is
transparent. This form of the command will not work on Macintosh or
Windows computers.</dd>

<dt><a name="M9"><b>@</b><i>sourceName</i></a></dt>

<dd>This form only works on Windows, and will load a Windows system
cursor (<b>.ani</b> or <b>.cur</b>) from the file specified in
<i>sourceName</i>.</dd>
</dl>

<p><b>Tk_GetCursor</b> is identical to <b>Tk_AllocCursorFromObj</b>
except that the description of the cursor is specified with a
string instead of an object. This prevents <b>Tk_GetCursor</b> from
caching the return value, so <b>Tk_GetCursor</b> is less efficient
than <b>Tk_AllocCursorFromObj</b>.</p>

<p><b>Tk_GetCursorFromObj</b> returns the token for an existing
cursor, given the window and description used to create the cursor.
<b>Tk_GetCursorFromObj</b> does not actually create the cursor; the
cursor must already have been created with a previous call to
<b>Tk_AllocCursorFromObj</b> or <b>Tk_GetCursor</b>. The return
value is cached in <i>objPtr</i>, which speeds up future calls to
<b>Tk_GetCursorFromObj</b> with the same <i>objPtr</i> and
<i>tkwin</i>.</p>

<p><b>Tk_GetCursorFromData</b> allows cursors to be created from
in-memory descriptions of their source and mask cursors.
<i>Source</i> points to standard cursor data for the cursor's
source bits, and <i>mask</i> points to standard cursor data
describing which pixels of <i>source</i> are to be drawn and which
are to be considered transparent. <i>Width</i> and <i>height</i>
give the dimensions of the cursor, <i>xHot</i> and <i>yHot</i>
indicate the location of the cursor's hot-spot (the point that is
reported when an event occurs), and <i>fg</i> and <i>bg</i>
describe the cursor's foreground and background colors textually
(any of the forms suitable for <b><a href=
"../TkLib/GetColor.htm">Tk_GetColor</a></b> may be used).
Typically, the arguments to <b>Tk_GetCursorFromData</b> are created
by including a cursor file directly into the source code for a
program, as in the following example:</p>

<pre>
Tk_Cursor cursor;
#include "source.cursor"
#include "mask.cursor"
cursor = Tk_GetCursorFromData(interp, tkwin, source_bits,
    mask_bits, source_width, source_height, source_x_hot,
    source_y_hot, <a href=
"../TkLib/GetUid.htm">Tk_GetUid</a>("red"), <a href=
"../TkLib/GetUid.htm">Tk_GetUid</a>("blue"));
</pre>

<p>Under normal conditions <b>Tk_GetCursorFromData</b> will return
an identifier for the requested cursor. If an error occurs in
creating the cursor then <b>None</b> is returned and an error
message will be stored in <i>interp</i>'s result.</p>

<p><b>Tk_AllocCursorFromObj</b>, <b>Tk_GetCursor</b>, and
<b>Tk_GetCursorFromData</b> maintain a database of all the cursors
they have created. Whenever possible, a call to
<b>Tk_AllocCursorFromObj</b>, <b>Tk_GetCursor</b>, or
<b>Tk_GetCursorFromData</b> will return an existing cursor rather
than creating a new one. This approach can substantially reduce
server overhead, so the Tk procedures should generally be used in
preference to Xlib procedures like <b>XCreateFontCursor</b> or
<b>XCreatePixmapCursor</b>, which create a new cursor on each call.
The Tk procedures are also more portable than the lower-level X
procedures.</p>

<p>The procedure <b>Tk_NameOfCursor</b> is roughly the inverse of
<b>Tk_GetCursor</b>. If its <i>cursor</i> argument was created by
<b>Tk_GetCursor</b>, then the return value is the <i>name</i>
argument that was passed to <b>Tk_GetCursor</b> to create the
cursor. If <i>cursor</i> was created by a call to
<b>Tk_GetCursorFromData</b>, or by any other mechanism, then the
return value is a hexadecimal string giving the X identifier for
the cursor. Note: the string returned by <b>Tk_NameOfCursor</b> is
only guaranteed to persist until the next call to
<b>Tk_NameOfCursor</b>. Also, this call is not portable except for
cursors returned by <b>Tk_GetCursor</b>.</p>

<p>When a cursor returned by <b>Tk_AllocCursorFromObj</b>,
<b>Tk_GetCursor</b>, or <b>Tk_GetCursorFromData</b> is no longer
needed, <b>Tk_FreeCursorFromObj</b> or <b>Tk_FreeCursor</b> should
be called to release it. For <b>Tk_FreeCursorFromObj</b> the cursor
to release is specified with the same information used to create
it; for <b>Tk_FreeCursor</b> the cursor to release is specified
with its Tk_Cursor token. There should be exactly one call to
<b>Tk_FreeCursor</b> for each call to <b>Tk_AllocCursorFromObj</b>,
<b>Tk_GetCursor</b>, or <b>Tk_GetCursorFromData</b>.</p>

<h3><a name="M10">BUGS</a></h3>

In determining whether an existing cursor can be used to satisfy a
new request, <b>Tk_AllocCursorFromObj</b>, <b>Tk_GetCursor</b>, and
<b>Tk_GetCursorFromData</b> consider only the immediate values of
their arguments. For example, when a file name is passed to
<b>Tk_GetCursor</b>, <b>Tk_GetCursor</b> will assume it is safe to
re-use an existing cursor created from the same file name: it will
not check to see whether the file itself has changed, or whether
the current directory has changed, thereby causing the name to
refer to a different file. Similarly, <b>Tk_GetCursorFromData</b>
assumes that if the same <i>source</i> pointer is used in two
different calls, then the pointers refer to the same data; it does
not check to see if the actual data values have changed. 

<h3><a name="M11">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#cursor">cursor</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990 The Regents of the University of California.
Copyright &copy; 1994-1998 Sun Microsystems, Inc.</div>
</body>
</html>

