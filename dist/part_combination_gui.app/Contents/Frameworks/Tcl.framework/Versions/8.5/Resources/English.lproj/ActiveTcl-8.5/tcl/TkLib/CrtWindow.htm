<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_CreateWindow manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> CrtWindow</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tk_CreateWindow, Tk_CreateWindowFromPath, Tk_DestroyWindow,
Tk_MakeWindowExist - create or delete window 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
Tk_Window<br>
<b>Tk_CreateWindow</b>(<i>interp, parent, name,
topLevScreen</i>)<br>
Tk_Window<br>
<b>Tk_CreateAnonymousWindow</b>(<i>interp, parent,
topLevScreen</i>)<br>
Tk_Window<br>
<b>Tk_CreateWindowFromPath</b>(<i>interp, tkwin, pathName,
topLevScreen</i>)<br>
<b>Tk_DestroyWindow</b>(<i>tkwin</i>)<br>
<b>Tk_MakeWindowExist</b>(<i>tkwin</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(out)</dt>

<dd>Tcl interpreter to use for error reporting. If no error occurs,
then <i>*interp</i> is not modified.</dd>

<dt>Tk_Window <b>parent</b> (in)</dt>

<dd>Token for the window that is to serve as the logical parent of
the new window.</dd>

<dt>const char <b>*name</b> (in)</dt>

<dd>Name to use for this window. Must be unique among all children
of the same <i>parent</i>.</dd>

<dt>const char <b>*topLevScreen</b> (in)</dt>

<dd>Has same format as <i>screenName</i>. If NULL, then new window
is created as an internal window. If non-NULL, new window is
created as a top-level window on screen <i>topLevScreen</i>. If
<i>topLevScreen</i> is an empty string (&ldquo;&rdquo;) then new
window is created as top-level window of <i>parent</i>'s
screen.</dd>

<dt>Tk_Window <b>tkwin</b> (in)</dt>

<dd>Token for window.</dd>

<dt>const char <b>*pathName</b> (in)</dt>

<dd>Name of new window, specified as path name within application
(e.g. <b>.a.b.c</b>).</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

The procedures <b>Tk_CreateWindow</b>,
<b>Tk_CreateAnonymousWindow</b>, and <b>Tk_CreateWindowFromPath</b>
are used to create new windows for use in Tk-based applications.
Each of the procedures returns a token that can be used to
manipulate the window in other calls to the Tk library. If the
window could not be created successfully, then NULL is returned and
<i>interp-&gt;result</i> is modified to hold an error message. 

<p>Tk supports two different kinds of windows: internal windows and
top-level windows. An internal window is an interior window of a Tk
application, such as a scrollbar or menu bar or button. A top-level
window is one that is created as a child of a screen's root window,
rather than as an interior window, but which is logically part of
some existing main window. Examples of top-level windows are pop-up
menus and dialog boxes.</p>

<p>New windows may be created by calling <b>Tk_CreateWindow</b>. If
the <i>topLevScreen</i> argument is NULL, then the new window will
be an internal window. If <i>topLevScreen</i> is non-NULL, then the
new window will be a top-level window: <i>topLevScreen</i>
indicates the name of a screen and the new window will be created
as a child of the root window of <i>topLevScreen</i>. In either
case Tk will consider the new window to be the logical child of
<i>parent</i>: the new window's path name will reflect this fact,
options may be specified for the new window under this assumption,
and so on. The only difference is that new X window for a top-level
window will not be a child of <i>parent</i>'s X window. For
example, a pull-down menu's <i>parent</i> would be the button-like
window used to invoke it, which would in turn be a child of the
menu bar window. A dialog box might have the application's main
window as its parent.</p>

<p><b>Tk_CreateAnonymousWindow</b> differs from
<b>Tk_CreateWindow</b> in that it creates an unnamed window. This
window will be manipulable only using C interfaces, and will not be
visible to Tcl scripts. Both interior windows and top-level windows
may be created with <b>Tk_CreateAnonymousWindow</b>.</p>

<p><b>Tk_CreateWindowFromPath</b> offers an alternate way of
specifying new windows. In <b>Tk_CreateWindowFromPath</b> the new
window is specified with a token for any window in the target
application (<i>tkwin</i>), plus a path name for the new window. It
produces the same effect as <b>Tk_CreateWindow</b> and allows both
top-level and internal windows to be created, depending on the
value of <i>topLevScreen</i>. In calls to
<b>Tk_CreateWindowFromPath</b>, as in calls to
<b>Tk_CreateWindow</b>, the parent of the new window must exist at
the time of the call, but the new window must not already
exist.</p>

<p>The window creation procedures do not actually issue the command
to X to create a window. Instead, they create a local data
structure associated with the window and defer the creation of the
X window. The window will actually be created by the first call to
<b><a href="../TkLib/MapWindow.htm">Tk_MapWindow</a></b>. Deferred
window creation allows various aspects of the window (such as its
size, background color, etc.) to be modified after its creation
without incurring any overhead in the X server. When the window is
finally mapped all of the window attributes can be set while
creating the window.</p>

<p>The value returned by a window-creation procedure is not the X
token for the window (it cannot be, since X has not been asked to
create the window yet). Instead, it is a token for Tk's local data
structure for the window. Most of the Tk library procedures take
Tk_Window tokens, rather than X identifiers. The actual X window
identifier can be retrieved from the local data structure using the
<b><a href="../TkLib/WindowId.htm">Tk_WindowId</a></b> macro; see
the manual entry for <b><a href=
"../TkLib/WindowId.htm">Tk_WindowId</a></b> for details.</p>

<p><b>Tk_DestroyWindow</b> deletes a window and all the data
structures associated with it, including any event handlers created
with <b><a href=
"../TkLib/EventHndlr.htm">Tk_CreateEventHandler</a></b>. In
addition, <b>Tk_DestroyWindow</b> will delete any children of
<i>tkwin</i> recursively (where children are defined in the Tk
sense, consisting of all windows that were created with the given
window as <i>parent</i>). If <i>tkwin</i> is an internal window,
then event handlers interested in destroy events are invoked
immediately. If <i>tkwin</i> is a top-level or main window, then
the event handlers will be invoked later, after X has seen the
request and returned an event for it.</p>

<p>If a window has been created but has not been mapped, so no X
window exists, it is possible to force the creation of the X window
by calling <b>Tk_MakeWindowExist</b>. This procedure issues the X
commands to instantiate the window given by <i>tkwin</i>.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<a href="../Keywords/C.htm#create">create</a>, <a href=
"../Keywords/D.htm#deferred creation">deferred creation</a>, <a
href="../Keywords/D.htm#destroy">destroy</a>, <a href=
"../Keywords/D.htm#display">display</a>, <a href=
"../Keywords/I.htm#internal window">internal window</a>, <a href=
"../Keywords/S.htm#screen">screen</a>, <a href=
"../Keywords/T.htm#top-level window">top-level window</a>, <a href=
"../Keywords/W.htm#window">window</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990 The Regents of the University of California.
Copyright &copy; 1994-1996 Sun Microsystems, Inc.</div>
</body>
</html>

