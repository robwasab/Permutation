<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - variable manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> variable</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

variable - create and initialize a namespace variable 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>variable</b> ?<i>name value...</i>? <i>name</i>
?<i>value</i>?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

This command is normally used within a <b>namespace eval</b>
command to create one or more variables within a namespace. Each
variable <i>name</i> is initialized with <i>value</i>. The
<i>value</i> for the last variable is optional. 

<p>If a variable <i>name</i> does not exist, it is created. In this
case, if <i>value</i> is specified, it is assigned to the newly
created variable. If no <i>value</i> is specified, the new variable
is left undefined. If the variable already exists, it is set to
<i>value</i> if <i>value</i> is specified or left unchanged if no
<i>value</i> is given. Normally, <i>name</i> is unqualified (does
not include the names of any containing namespaces), and the
variable is created in the current namespace. If <i>name</i>
includes any namespace qualifiers, the variable is created in the
specified namespace. If the variable is not defined, it will be
visible to the <b>namespace which</b> command, but not to the <b><a
href="../TclCmd/info.htm">info exists</a></b> command.</p>

<p>If the <b>variable</b> command is executed inside a Tcl
procedure, it creates local variables linked to the corresponding
namespace variables (and therefore these variables are listed by
<b><a href="../TclCmd/info.htm">info vars</a></b>.) In this way the
<b>variable</b> command resembles the <b><a href=
"../TclCmd/global.htm">global</a></b> command, although the <b><a
href="../TclCmd/global.htm">global</a></b> command only links to
variables in the global namespace. If any <i>value</i>s are given,
they are used to modify the values of the associated namespace
variables. If a namespace variable does not exist, it is created
and optionally initialized.</p>

<p>A <i>name</i> argument cannot reference an element within an
array. Instead, <i>name</i> should reference the entire array, and
the initialization <i>value</i> should be left off. After the
variable has been declared, elements within the array can be set
using ordinary <b><a href="../TclCmd/set.htm">set</a></b> or <b><a
href="../TclCmd/array.htm">array</a></b> commands.</p>

<h3><a name="M5">EXAMPLES</a></h3>

Create a variable in a namespace: 

<pre>
namespace eval foo {
    <b>variable</b> bar 12345
}
</pre>

<p>Create an array in a namespace:</p>

<pre>
namespace eval someNS {
    <b>variable</b> someAry
    array set someAry {
        someName  someValue
        otherName otherValue
    }
}
</pre>

<p>Access variables in namespaces from a procedure:</p>

<pre>
namespace eval foo {
    proc spong {} {
        # Variable in this namespace
        <b>variable</b> bar
        puts "bar is $bar"

        # Variable in another namespace
        <b>variable</b> ::someNS::someAry
        parray someAry
    }
}
</pre>

<h3><a name="M6">SEE ALSO</a></h3>

<b><a href="../TclCmd/global.htm">global</a></b>, <b><a href=
"../TclCmd/namespace.htm">namespace</a></b>, <b><a href=
"../TclCmd/upvar.htm">upvar</a></b> 

<h3><a name="M7">KEYWORDS</a></h3>

<a href="../Keywords/G.htm#global">global</a>, <a href=
"../Keywords/N.htm#namespace">namespace</a>, <a href=
"../Keywords/P.htm#procedure">procedure</a>, <a href=
"../Keywords/V.htm#variable">variable</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent
Technologies Copyright &copy; 1997 Sun Microsystems, Inc.</div>
</body>
</html>

