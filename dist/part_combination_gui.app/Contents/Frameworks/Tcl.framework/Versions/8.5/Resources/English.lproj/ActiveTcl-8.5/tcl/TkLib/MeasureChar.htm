<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_MeasureChars manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TkLib</a>
<small>&gt;</small> MeasureChar</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tk_MeasureChars, Tk_TextWidth, Tk_DrawChars, Tk_UnderlineChars -
routines to measure and display simple single-line strings. 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tk.h&gt;</b><br>
int<br>
<b>Tk_MeasureChars(</b><i>tkfont, string, numBytes, maxPixels,
flags, lengthPtr</i><b>)</b><br>
int<br>
<b>Tk_TextWidth(</b><i>tkfont, string, numBytes</i><b>)</b><br>
<b>Tk_DrawChars(</b><i>display, drawable, gc, tkfont, string,
numBytes, x, y</i><b>)</b><br>
<b>Tk_UnderlineChars(</b><i>display, drawable, gc, tkfont, string,
x, y, firstByte, lastByte</i><b>)</b><br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>Tk_Font <b>tkfont</b> (in)</dt>

<dd>Token for font in which text is to be drawn or measured. Must
have been returned by a previous call to <b><a href=
"../TkLib/GetFont.htm">Tk_GetFont</a></b>.</dd>

<dt>const char <b>*string</b> (in)</dt>

<dd>Text to be measured or displayed. Need not be null terminated.
Any non-printing meta-characters in the string (such as tabs,
newlines, and other control characters) will be measured or
displayed in a platform-dependent manner.</dd>

<dt>int <b>numBytes</b> (in)</dt>

<dd>The maximum number of bytes to consider when measuring or
drawing <i>string</i>. Must be greater than or equal to 0.</dd>

<dt>int <b>maxPixels</b> (in)</dt>

<dd>If <i>maxPixels</i> is &gt;= 0, it specifies the longest
permissible line length in pixels. Characters from <i>string</i>
are processed only until this many pixels have been covered. If
<i>maxPixels</i> is &lt; 0, then the line length is unbounded and
the <i>flags</i> argument is ignored.</dd>

<dt>int <b>flags</b> (in)</dt>

<dd>Various flag bits OR-ed together: <b>TK_PARTIAL_OK</b> means
include a character as long as any part of it fits in the length
given by <i>maxPixels</i>; otherwise, a character must fit
completely to be considered. <b>TK_WHOLE_WORDS</b> means stop on a
word boundary, if possible. If <b>TK_AT_LEAST_ONE</b> is set, it
means return at least one character even if no characters could fit
in the length given by <i>maxPixels</i>. If <b>TK_AT_LEAST_ONE</b>
is set and <b>TK_WHOLE_WORDS</b> is also set, it means that if not
even one word fits on the line, return the first few letters of the
word that did fit; if not even one letter of the word fit, then the
first letter will still be returned.</dd>

<dt>int <b>*lengthPtr</b> (out)</dt>

<dd>Filled with the number of pixels occupied by the number of
characters returned as the result of <b>Tk_MeasureChars</b>.</dd>

<dt>Display <b>*display</b> (in)</dt>

<dd>Display on which to draw.</dd>

<dt>Drawable <b>drawable</b> (in)</dt>

<dd>Window or pixmap in which to draw.</dd>

<dt>GC <b>gc</b> (in)</dt>

<dd>Graphics context for drawing characters. The font selected into
this GC must be the same as the <i>tkfont</i>.</dd>

<dt>int <b>x, y</b> (in)</dt>

<dd>Coordinates at which to place the left edge of the baseline
when displaying <i>string</i>.</dd>

<dt>int <b>firstByte</b> (in)</dt>

<dd>The index of the first byte of the first character to underline
in the <i>string</i>. Underlining begins at the left edge of this
character.</dd>

<dt>int <b>lastByte</b> (in)</dt>

<dd>The index of the first byte of the last character up to which
the underline will be drawn. The character specified by
<i>lastByte</i> will not itself be underlined.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These routines are for measuring and displaying simple single-font,
single-line strings. To measure and display single-font,
multi-line, justified text, refer to the documentation for <b><a
href="../TkLib/TextLayout.htm">Tk_ComputeTextLayout</a></b>. There
is no programming interface in the core of Tk that supports
multi-font, multi-line text; support for that behavior must be
built on top of simpler layers. Note that the interfaces described
here are byte-oriented not character-oriented, so index values
coming from Tcl scripts need to be converted to byte offsets using
the <b><a href="../TclLib/Utf.htm">Tcl_UtfAtIndex</a></b> and
related routines. 

<p>A glyph is the displayable picture of a letter, number, or some
other symbol. Not all character codes in a given font have a glyph.
Characters such as tabs, newlines/returns, and control characters
that have no glyph are measured and displayed by these procedures
in a platform-dependent manner; under X, they are replaced with
backslashed escape sequences, while under Windows and Macintosh
hollow or solid boxes may be substituted. Refer to the
documentation for <b><a href=
"../TkLib/TextLayout.htm">Tk_ComputeTextLayout</a></b> for a
programming interface that supports the platform-independent
expansion of tab characters into columns and newlines/returns into
multi-line text.</p>

<p><b>Tk_MeasureChars</b> is used both to compute the length of a
given string and to compute how many characters from a string fit
in a given amount of space. The return value is the number of bytes
from <i>string</i> that fit in the space specified by
<i>maxPixels</i> subject to the conditions described by
<i>flags</i>. If all characters fit, the return value will be
<i>numBytes</i>. <i>*lengthPtr</i> is filled with the computed
width, in pixels, of the portion of the string that was measured.
For example, if the return value is 5, then <i>*lengthPtr</i> is
filled with the distance between the left edge of <i>string</i>[0]
and the right edge of <i>string</i>[4].</p>

<p><b>Tk_TextWidth</b> is a wrapper function that provides a
simpler interface to the <b>Tk_MeasureChars</b> function. The
return value is how much space in pixels the given <i>string</i>
needs.</p>

<p><b>Tk_DrawChars</b> draws the <i>string</i> at the given
location in the given <i>drawable</i>.</p>

<p><b>Tk_UnderlineChars</b> underlines the given range of
characters in the given <i>string</i>. It does not draw the
characters (which are assumed to have been displayed previously by
<b>Tk_DrawChars</b>); it just draws the underline. This procedure
is used to underline a few characters without having to construct
an underlined font. To produce natively underlined text, the
appropriate underlined font should be constructed and used.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<b><a href="../TkCmd/font.htm">font</a></b>, <b>FontId</b> 

<h3><a name="M7">KEYWORDS</a></h3>

<a href="../Keywords/F.htm#font">font</a>, <a href=
"../Keywords/M.htm#measurement">measurement</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1996 Sun Microsystems, Inc.</div>
</body>
</html>

