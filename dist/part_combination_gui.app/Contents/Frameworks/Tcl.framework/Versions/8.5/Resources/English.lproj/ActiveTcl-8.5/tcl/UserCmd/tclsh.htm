<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Applications - tclsh manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">UserCmd</a>
<small>&gt;</small> tclsh</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="tclsh.htm#M2" name="L2">NAME</a> 

<dl>
<dd>tclsh - Simple shell containing Tcl interpreter</dd>
</dl>
</dd>

<dd><a href="tclsh.htm#M3" name="L3">SYNOPSIS</a> 

<dl>
<dd><b>tclsh</b> ?-encoding <i>name</i>? ?<i>fileName arg arg
...</i>?</dd>
</dl>
</dd>

<dd><a href="tclsh.htm#M4" name="L4">DESCRIPTION</a></dd>

<dd><a href="tclsh.htm#M5" name="L5">SCRIPT FILES</a></dd>

<dd><a href="tclsh.htm#M6" name="L6">VARIABLES</a> 

<dl class="variables">
<dd><a href="tclsh.htm#M7" name="L7"><b>argc</b></a></dd>

<dd><a href="tclsh.htm#M8" name="L8"><b>argv</b></a></dd>

<dd><a href="tclsh.htm#M9" name="L9"><b>argv0</b></a></dd>

<dd><a href="tclsh.htm#M10" name=
"L10"><b>tcl_interactive</b></a></dd>
</dl>
</dd>

<dd><a href="tclsh.htm#M11" name="L11">PROMPTS</a></dd>

<dd><a href="tclsh.htm#M12" name="L12">STANDARD CHANNELS</a></dd>

<dd><a href="tclsh.htm#M13" name="L13">SEE ALSO</a></dd>

<dd><a href="tclsh.htm#M14" name="L14">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

tclsh - Simple shell containing Tcl interpreter 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>tclsh</b> ?-encoding <i>name</i>? ?<i>fileName arg arg
...</i>?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

<b>Tclsh</b> is a shell-like application that reads Tcl commands
from its standard input or from a file and evaluates them. If
invoked with no arguments then it runs interactively, reading Tcl
commands from standard input and printing command results and error
messages to standard output. It runs until the <b><a href=
"../TclCmd/exit.htm">exit</a></b> command is invoked or until it
reaches end-of-file on its standard input. If there exists a file
<b>.tclshrc</b> (or <b>tclshrc.tcl</b> on the Windows platforms) in
the home directory of the user, interactive <b>tclsh</b> evaluates
the file as a Tcl script just before reading the first command from
standard input. 

<h3><a name="M5">SCRIPT FILES</a></h3>

If <b>tclsh</b> is invoked with arguments then the first few
arguments specify the name of a script file, and, optionally, the
encoding of the text data stored in that script file. Any
additional arguments are made available to the script as variables
(see below). Instead of reading commands from standard input
<b>tclsh</b> will read Tcl commands from the named file;
<b>tclsh</b> will exit when it reaches the end of the file. The end
of the file may be marked either by the physical end of the medium,
or by the character, &ldquo;\032&rdquo; (&ldquo;\u001a&rdquo;,
control-Z). If this character is present in the file, the
<b>tclsh</b> application will read text up to but not including the
character. An application that requires this character in the file
may safely encode it as &ldquo;\032&rdquo;, &ldquo;\x1a&rdquo;, or
&ldquo;\u001a&rdquo;; or may generate it by use of commands such as
<b><a href="../TclCmd/format.htm">format</a></b> or <b><a href=
"../TclCmd/binary.htm">binary</a></b>. There is no automatic
evaluation of <b>.tclshrc</b> when the name of a script file is
presented on the <b>tclsh</b> command line, but the script file can
always <b><a href="../TclCmd/source.htm">source</a></b> it if
desired. 

<p>If you create a Tcl script in a file whose first line is</p>

<pre>
<b>#!/usr/local/bin/tclsh</b>
</pre>

then you can invoke the script file directly from your shell if you
mark the file as executable. This assumes that <b>tclsh</b> has
been installed in the default location in /usr/local/bin; if it is
installed somewhere else then you will have to modify the above
line to match. Many UNIX systems do not allow the <b>#!</b> line to
exceed about 30 characters in length, so be sure that the
<b>tclsh</b> executable can be accessed with a short file name. 

<p>An even better approach is to start your script files with the
following three lines:</p>

<pre>
<b>#!/bin/sh
# the next line restarts using tclsh \
exec tclsh "$0" ${1+"$@"}</b>
</pre>

This approach has three advantages over the approach in the
previous paragraph. First, the location of the <b>tclsh</b> binary
does not have to be hard-wired into the script: it can be anywhere
in your shell search path. Second, it gets around the 30-character
file name limit in the previous approach. Third, this approach will
work even if <b>tclsh</b> is itself a shell script (this is done on
some systems in order to handle multiple architectures or operating
systems: the <b>tclsh</b> script selects one of several binaries to
run). The three lines cause both <b>sh</b> and <b>tclsh</b> to
process the script, but the <b><a href=
"../TclCmd/exec.htm">exec</a></b> is only executed by <b>sh</b>.
<b>sh</b> processes the script first; it treats the second line as
a comment and executes the third line. The <b><a href=
"../TclCmd/exec.htm">exec</a></b> statement cause the shell to stop
processing and instead to start up <b>tclsh</b> to reprocess the
entire script. When <b>tclsh</b> starts up, it treats all three
lines as comments, since the backslash at the end of the second
line causes the third line to be treated as part of the comment on
the second line. 

<p>You should note that it is also common practice to install tclsh
with its version number as part of the name. This has the advantage
of allowing multiple versions of Tcl to exist on the same system at
once, but also the disadvantage of making it harder to write
scripts that start up uniformly across different versions of
Tcl.</p>

<h3><a name="M6">VARIABLES</a></h3>

<b>Tclsh</b> sets the following Tcl variables: 

<dl class="variables">
<dt><a name="M7"><b>argc</b></a></dt>

<dd>Contains a count of the number of <i>arg</i> arguments (0 if
none), not including the name of the script file.</dd>

<dt><a name="M8"><b>argv</b></a></dt>

<dd>Contains a Tcl list whose elements are the <i>arg</i>
arguments, in order, or an empty string if there are no <i>arg</i>
arguments.</dd>

<dt><a name="M9"><b>argv0</b></a></dt>

<dd>Contains <i>fileName</i> if it was specified. Otherwise,
contains the name by which <b>tclsh</b> was invoked.</dd>

<dt><a name="M10"><b>tcl_interactive</b></a></dt>

<dd>Contains 1 if <b>tclsh</b> is running interactively (no
<i>fileName</i> was specified and standard input is a terminal-like
device), 0 otherwise.</dd>
</dl>

<h3><a name="M11">PROMPTS</a></h3>

When <b>tclsh</b> is invoked interactively it normally prompts for
each command with &ldquo;<b>%</b> &rdquo;. You can change the
prompt by setting the variables <b>tcl_prompt1</b> and
<b>tcl_prompt2</b>. If variable <b>tcl_prompt1</b> exists then it
must consist of a Tcl script to output a prompt; instead of
outputting a prompt <b>tclsh</b> will evaluate the script in
<b>tcl_prompt1</b>. The variable <b>tcl_prompt2</b> is used in a
similar way when a newline is typed but the current command is not
yet complete; if <b>tcl_prompt2</b> is not set then no prompt is
output for incomplete commands. 

<h3><a name="M12">STANDARD CHANNELS</a></h3>

See <b><a href=
"../TclLib/StdChannels.htm">Tcl_StandardChannels</a></b> for more
explanations. 

<h3><a name="M13">SEE ALSO</a></h3>

<b><a href="../TclCmd/encoding.htm">encoding</a></b>, <b><a href=
"../TclCmd/fconfigure.htm">fconfigure</a></b>, <b><a href=
"../TclCmd/tclvars.htm">tclvars</a></b> 

<h3><a name="M14">KEYWORDS</a></h3>

<a href="../Keywords/A.htm#argument">argument</a>, <a href=
"../Keywords/I.htm#interpreter">interpreter</a>, <a href=
"../Keywords/P.htm#prompt">prompt</a>, <a href=
"../Keywords/S.htm#script file">script file</a>, <a href=
"../Keywords/S.htm#shell">shell</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1993 The Regents of the University of California.
Copyright &copy; 1994-1996 Sun Microsystems, Inc.</div>
</body>
</html>

